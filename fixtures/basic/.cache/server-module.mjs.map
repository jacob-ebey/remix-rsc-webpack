{"version":3,"file":"server-module.mjs","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACljr3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnrxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrrjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnz4CA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1CA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtljEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrxuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;;;;;ACHA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/crypto.js","webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/globals.js","webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/implementations.js","webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/index.js","webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/sessions/fileStorage.js","webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/stream.js","webpack://@fixture/basic/../../node_modules/@remix-run/node/dist/upload/fileUploadHandler.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/warnings.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/cookies.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/formData.js","webpack://@fixture/basic/../../node_modules/@remix-run/router/dist/router.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/mode.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/errors.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/responses.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/entry.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/headers.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/invariant.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/routeMatching.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/data.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/routes.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/markup.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/serverHandoff.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/server.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/sessions.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/upload/errors.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/dev.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/dist/esm/index.js","webpack://@fixture/basic/../../node_modules/@remix-run/server-runtime/node_modules/cookie/index.js","webpack://@fixture/basic/../../node_modules/@web3-storage/multipart-parser/cjs/src/index.js","webpack://@fixture/basic/../../node_modules/@web3-storage/multipart-parser/cjs/src/search.js","webpack://@fixture/basic/../../node_modules/@web3-storage/multipart-parser/cjs/src/utils.js","webpack://@fixture/basic/../../node_modules/abort-controller/dist/abort-controller.js","webpack://@fixture/basic/../../node_modules/cookie-signature/index.js","webpack://@fixture/basic/../../node_modules/data-uri-to-buffer/dist/src/index.js","webpack://@fixture/basic/../../node_modules/event-target-shim/dist/event-target-shim.js","webpack://@fixture/basic/../../node_modules/react-dom/cjs/react-dom.shared-subset.production.min.js","webpack://@fixture/basic/../../node_modules/react-dom/react-dom.shared-subset.js","webpack://@fixture/basic/../../node_modules/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js","webpack://@fixture/basic/../../node_modules/react-server-dom-webpack/server.node.js","webpack://@fixture/basic/../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://@fixture/basic/../../node_modules/react/cjs/react.shared-subset.production.min.js","webpack://@fixture/basic/../../node_modules/react/jsx-runtime.js","webpack://@fixture/basic/../../node_modules/react/react.shared-subset.js","webpack://@fixture/basic/../../node_modules/set-cookie-parser/lib/set-cookie.js","webpack://@fixture/basic/../../node_modules/stream-slice/index.js","webpack://@fixture/basic/external node-commonjs \"async_hooks\"","webpack://@fixture/basic/external node-commonjs \"buffer\"","webpack://@fixture/basic/external node-commonjs \"crypto\"","webpack://@fixture/basic/external node-commonjs \"fs\"","webpack://@fixture/basic/external node-commonjs \"http\"","webpack://@fixture/basic/external node-commonjs \"https\"","webpack://@fixture/basic/external node-commonjs \"node:crypto\"","webpack://@fixture/basic/external node-commonjs \"node:fs\"","webpack://@fixture/basic/external node-commonjs \"node:fs/promises\"","webpack://@fixture/basic/external node-commonjs \"node:os\"","webpack://@fixture/basic/external node-commonjs \"node:path\"","webpack://@fixture/basic/external node-commonjs \"node:stream\"","webpack://@fixture/basic/external node-commonjs \"node:util\"","webpack://@fixture/basic/external node-commonjs \"stream\"","webpack://@fixture/basic/external node-commonjs \"url\"","webpack://@fixture/basic/external node-commonjs \"util\"","webpack://@fixture/basic/external node-commonjs \"zlib\"","webpack://@fixture/basic/../../node_modules/@remix-run/web-blob/dist/src/blob.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-blob/dist/src/lib.node.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-fetch/dist/lib.node.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-file/dist/src/file.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-file/dist/src/lib.node.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-form-data/dist/src/form-data.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-form-data/dist/src/lib.node.cjs","webpack://@fixture/basic/../../node_modules/@remix-run/web-stream/src/stream.cjs","webpack://@fixture/basic/../../node_modules/mrmime/index.mjs","webpack://@fixture/basic/../../node_modules/web-encoding/src/lib.mjs","webpack://@fixture/basic/../../node_modules/web-streams-polyfill/dist/ponyfill.mjs","webpack://@fixture/basic/webpack/bootstrap","webpack://@fixture/basic/webpack/runtime/define property getters","webpack://@fixture/basic/webpack/runtime/ensure chunk","webpack://@fixture/basic/webpack/runtime/hasOwnProperty shorthand","webpack://@fixture/basic/webpack/runtime/make namespace object","webpack://@fixture/basic/../../packages/remix-webpack/lib/adapter.js","webpack://@fixture/basic/./app/root.tsx","webpack://@fixture/basic/./app/components/counter.tsx","webpack://@fixture/basic/./app/routes/_index/route.tsx","webpack://@fixture/basic/./app/routes/about/route.tsx","webpack://@fixture/basic/./.cache/server-entry-module.mjs"],"sourcesContent":["\"use strict\";\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cookieSignature = require(\"cookie-signature\");\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === \"object\" && \"default\" in e ? e : { \"default\": e };\n}\nvar cookieSignature__default = /* @__PURE__ */ _interopDefaultLegacy(cookieSignature);\nconst sign = async (value, secret) => {\n  return cookieSignature__default[\"default\"].sign(value, secret);\n};\nconst unsign = async (signed, secret) => {\n  return cookieSignature__default[\"default\"].unsign(signed, secret);\n};\nexports.sign = sign;\nexports.unsign = unsign;\n","\"use strict\";\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webFetch = require(\"@remix-run/web-fetch\");\nvar webStream = require(\"@remix-run/web-stream\");\nfunction installGlobals() {\n  global.File = webFetch.File;\n  global.Headers = webFetch.Headers;\n  global.Request = webFetch.Request;\n  global.Response = webFetch.Response;\n  global.fetch = webFetch.fetch;\n  global.FormData = webFetch.FormData;\n  global.ByteLengthQueuingStrategy = webStream.ByteLengthQueuingStrategy;\n  global.CountQueuingStrategy = webStream.CountQueuingStrategy;\n  global.ReadableByteStreamController = webStream.ReadableByteStreamController;\n  global.ReadableStream = webStream.ReadableStream;\n  global.ReadableStreamBYOBReader = webStream.ReadableStreamBYOBReader;\n  global.ReadableStreamBYOBRequest = webStream.ReadableStreamBYOBRequest;\n  global.ReadableStreamDefaultController = webStream.ReadableStreamDefaultController;\n  global.ReadableStreamDefaultReader = webStream.ReadableStreamDefaultReader;\n  global.TransformStream = webStream.TransformStream;\n  global.TransformStreamDefaultController = webStream.TransformStreamDefaultController;\n  global.WritableStream = webStream.WritableStream;\n  global.WritableStreamDefaultController = webStream.WritableStreamDefaultController;\n  global.WritableStreamDefaultWriter = webStream.WritableStreamDefaultWriter;\n}\nexports.installGlobals = installGlobals;\n","\"use strict\";\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar serverRuntime = require(\"@remix-run/server-runtime\");\nvar crypto = require(\"./crypto.js\");\nconst createCookie = serverRuntime.createCookieFactory({\n  sign: crypto.sign,\n  unsign: crypto.unsign\n});\nconst createCookieSessionStorage = serverRuntime.createCookieSessionStorageFactory(createCookie);\nconst createSessionStorage = serverRuntime.createSessionStorageFactory(createCookie);\nconst createMemorySessionStorage = serverRuntime.createMemorySessionStorageFactory(createSessionStorage);\nexports.createCookie = createCookie;\nexports.createCookieSessionStorage = createCookieSessionStorage;\nexports.createMemorySessionStorage = createMemorySessionStorage;\nexports.createSessionStorage = createSessionStorage;\n","\"use strict\";\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globals = require(\"./globals.js\");\nvar fileStorage = require(\"./sessions/fileStorage.js\");\nvar fileUploadHandler = require(\"./upload/fileUploadHandler.js\");\nvar implementations = require(\"./implementations.js\");\nvar stream = require(\"./stream.js\");\nvar serverRuntime = require(\"@remix-run/server-runtime\");\nexports.installGlobals = globals.installGlobals;\nexports.createFileSessionStorage = fileStorage.createFileSessionStorage;\nexports.NodeOnDiskFile = fileUploadHandler.NodeOnDiskFile;\nexports.unstable_createFileUploadHandler = fileUploadHandler.createFileUploadHandler;\nexports.createCookie = implementations.createCookie;\nexports.createCookieSessionStorage = implementations.createCookieSessionStorage;\nexports.createMemorySessionStorage = implementations.createMemorySessionStorage;\nexports.createSessionStorage = implementations.createSessionStorage;\nexports.createReadableStreamFromReadable = stream.createReadableStreamFromReadable;\nexports.readableStreamToString = stream.readableStreamToString;\nexports.writeAsyncIterableToWritable = stream.writeAsyncIterableToWritable;\nexports.writeReadableStreamToWritable = stream.writeReadableStreamToWritable;\nObject.defineProperty(exports, \"MaxPartSizeExceededError\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.MaxPartSizeExceededError;\n  }\n});\nObject.defineProperty(exports, \"broadcastDevReady\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.broadcastDevReady;\n  }\n});\nObject.defineProperty(exports, \"createRequestHandler\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.createRequestHandler;\n  }\n});\nObject.defineProperty(exports, \"createSession\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.createSession;\n  }\n});\nObject.defineProperty(exports, \"defer\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.defer;\n  }\n});\nObject.defineProperty(exports, \"isCookie\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.isCookie;\n  }\n});\nObject.defineProperty(exports, \"isSession\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.isSession;\n  }\n});\nObject.defineProperty(exports, \"json\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.json;\n  }\n});\nObject.defineProperty(exports, \"logDevReady\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.logDevReady;\n  }\n});\nObject.defineProperty(exports, \"redirect\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.redirect;\n  }\n});\nObject.defineProperty(exports, \"redirectDocument\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.redirectDocument;\n  }\n});\nObject.defineProperty(exports, \"unstable_composeUploadHandlers\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.unstable_composeUploadHandlers;\n  }\n});\nObject.defineProperty(exports, \"unstable_createMemoryUploadHandler\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.unstable_createMemoryUploadHandler;\n  }\n});\nObject.defineProperty(exports, \"unstable_parseMultipartFormData\", {\n  enumerable: true,\n  get: function() {\n    return serverRuntime.unstable_parseMultipartFormData;\n  }\n});\n","\"use strict\";\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = require(\"node:crypto\");\nvar node_fs = require(\"node:fs\");\nvar path = require(\"node:path\");\nvar implementations = require(\"../implementations.js\");\nfunction _interopNamespace(e) {\n  if (e && e.__esModule)\n    return e;\n  var n = /* @__PURE__ */ Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function(k) {\n      if (k !== \"default\") {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\nvar crypto__namespace = /* @__PURE__ */ _interopNamespace(crypto);\nvar path__namespace = /* @__PURE__ */ _interopNamespace(path);\nfunction createFileSessionStorage({\n  cookie,\n  dir\n}) {\n  return implementations.createSessionStorage({\n    cookie,\n    async createData(data, expires) {\n      let content = JSON.stringify({\n        data,\n        expires\n      });\n      while (true) {\n        let randomBytes = crypto__namespace.webcrypto.getRandomValues(new Uint8Array(8));\n        let id = Buffer.from(randomBytes).toString(\"hex\");\n        try {\n          let file = getFile(dir, id);\n          await node_fs.promises.mkdir(path__namespace.dirname(file), {\n            recursive: true\n          });\n          await node_fs.promises.writeFile(file, content, {\n            encoding: \"utf-8\",\n            flag: \"wx\"\n          });\n          return id;\n        } catch (error) {\n          if (error.code !== \"EEXIST\")\n            throw error;\n        }\n      }\n    },\n    async readData(id) {\n      try {\n        let file = getFile(dir, id);\n        let content = JSON.parse(await node_fs.promises.readFile(file, \"utf-8\"));\n        let data = content.data;\n        let expires = typeof content.expires === \"string\" ? new Date(content.expires) : null;\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\n          return data;\n        }\n        if (expires)\n          await node_fs.promises.unlink(file);\n        return null;\n      } catch (error) {\n        if (error.code !== \"ENOENT\")\n          throw error;\n        return null;\n      }\n    },\n    async updateData(id, data, expires) {\n      let content = JSON.stringify({\n        data,\n        expires\n      });\n      let file = getFile(dir, id);\n      await node_fs.promises.mkdir(path__namespace.dirname(file), {\n        recursive: true\n      });\n      await node_fs.promises.writeFile(file, content, \"utf-8\");\n    },\n    async deleteData(id) {\n      if (!id) {\n        return;\n      }\n      try {\n        await node_fs.promises.unlink(getFile(dir, id));\n      } catch (error) {\n        if (error.code !== \"ENOENT\")\n          throw error;\n      }\n    }\n  });\n}\nfunction getFile(dir, id) {\n  return path__namespace.join(dir, id.slice(0, 4), id.slice(4));\n}\nexports.createFileSessionStorage = createFileSessionStorage;\nexports.getFile = getFile;\n","\"use strict\";\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar node_stream = require(\"node:stream\");\nasync function writeReadableStreamToWritable(stream, writable) {\n  let reader = stream.getReader();\n  let flushable = writable;\n  try {\n    while (true) {\n      let {\n        done,\n        value\n      } = await reader.read();\n      if (done) {\n        writable.end();\n        break;\n      }\n      writable.write(value);\n      if (typeof flushable.flush === \"function\") {\n        flushable.flush();\n      }\n    }\n  } catch (error) {\n    writable.destroy(error);\n    throw error;\n  }\n}\nasync function writeAsyncIterableToWritable(iterable, writable) {\n  try {\n    for await (let chunk of iterable) {\n      writable.write(chunk);\n    }\n    writable.end();\n  } catch (error) {\n    writable.destroy(error);\n    throw error;\n  }\n}\nasync function readableStreamToString(stream, encoding) {\n  let reader = stream.getReader();\n  let chunks = [];\n  while (true) {\n    let {\n      done,\n      value\n    } = await reader.read();\n    if (done) {\n      break;\n    }\n    if (value) {\n      chunks.push(value);\n    }\n  }\n  return Buffer.concat(chunks).toString(encoding);\n}\nconst createReadableStreamFromReadable = (source) => {\n  let pump = new StreamPump(source);\n  let stream = new ReadableStream(pump, pump);\n  return stream;\n};\nclass StreamPump {\n  constructor(stream) {\n    this.highWaterMark = stream.readableHighWaterMark || new node_stream.Stream.Readable().readableHighWaterMark;\n    this.accumalatedSize = 0;\n    this.stream = stream;\n    this.enqueue = this.enqueue.bind(this);\n    this.error = this.error.bind(this);\n    this.close = this.close.bind(this);\n  }\n  size(chunk) {\n    return (chunk === null || chunk === void 0 ? void 0 : chunk.byteLength) || 0;\n  }\n  start(controller) {\n    this.controller = controller;\n    this.stream.on(\"data\", this.enqueue);\n    this.stream.once(\"error\", this.error);\n    this.stream.once(\"end\", this.close);\n    this.stream.once(\"close\", this.close);\n  }\n  pull() {\n    this.resume();\n  }\n  cancel(reason) {\n    if (this.stream.destroy) {\n      this.stream.destroy(reason);\n    }\n    this.stream.off(\"data\", this.enqueue);\n    this.stream.off(\"error\", this.error);\n    this.stream.off(\"end\", this.close);\n    this.stream.off(\"close\", this.close);\n  }\n  enqueue(chunk) {\n    if (this.controller) {\n      try {\n        let bytes = chunk instanceof Uint8Array ? chunk : Buffer.from(chunk);\n        let available = (this.controller.desiredSize || 0) - bytes.byteLength;\n        this.controller.enqueue(bytes);\n        if (available <= 0) {\n          this.pause();\n        }\n      } catch (error) {\n        this.controller.error(new Error(\"Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object\"));\n        this.cancel();\n      }\n    }\n  }\n  pause() {\n    if (this.stream.pause) {\n      this.stream.pause();\n    }\n  }\n  resume() {\n    if (this.stream.readable && this.stream.resume) {\n      this.stream.resume();\n    }\n  }\n  close() {\n    if (this.controller) {\n      this.controller.close();\n      delete this.controller;\n    }\n  }\n  error(error) {\n    if (this.controller) {\n      this.controller.error(error);\n      delete this.controller;\n    }\n  }\n}\nexports.createReadableStreamFromReadable = createReadableStreamFromReadable;\nexports.readableStreamToString = readableStreamToString;\nexports.writeAsyncIterableToWritable = writeAsyncIterableToWritable;\nexports.writeReadableStreamToWritable = writeReadableStreamToWritable;\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n/**\n * @remix-run/node v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = require(\"node:crypto\");\nvar node_fs = require(\"node:fs\");\nvar promises = require(\"node:fs/promises\");\nvar node_os = require(\"node:os\");\nvar path = require(\"node:path\");\nvar node_stream = require(\"node:stream\");\nvar node_util = require(\"node:util\");\nvar serverRuntime = require(\"@remix-run/server-runtime\");\nvar streamSlice = require(\"stream-slice\");\nvar stream = require(\"../stream.js\");\nfunction _interopNamespace(e) {\n  if (e && e.__esModule)\n    return e;\n  var n = /* @__PURE__ */ Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function(k) {\n      if (k !== \"default\") {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\nvar streamSlice__namespace = /* @__PURE__ */ _interopNamespace(streamSlice);\nlet defaultFilePathResolver = ({\n  filename\n}) => {\n  let ext = filename ? path.extname(filename) : \"\";\n  return \"upload_\" + crypto.randomBytes(4).readUInt32LE(0) + ext;\n};\nasync function uniqueFile(filepath) {\n  let ext = path.extname(filepath);\n  let uniqueFilepath = filepath;\n  for (let i = 1; await promises.stat(uniqueFilepath).then(() => true).catch(() => false); i++) {\n    uniqueFilepath = (ext ? filepath.slice(0, -ext.length) : filepath) + `-${(/* @__PURE__ */ new Date()).getTime()}${ext}`;\n  }\n  return uniqueFilepath;\n}\nfunction createFileUploadHandler({\n  directory = node_os.tmpdir(),\n  avoidFileConflicts = true,\n  file = defaultFilePathResolver,\n  filter,\n  maxPartSize = 3e6\n} = {}) {\n  return async ({\n    name,\n    filename,\n    contentType,\n    data\n  }) => {\n    if (!filename || filter && !await filter({\n      name,\n      filename,\n      contentType\n    })) {\n      return void 0;\n    }\n    let dir = typeof directory === \"string\" ? directory : directory({\n      name,\n      filename,\n      contentType\n    });\n    if (!dir) {\n      return void 0;\n    }\n    let filedir = path.resolve(dir);\n    let path$1 = typeof file === \"string\" ? file : file({\n      name,\n      filename,\n      contentType\n    });\n    if (!path$1) {\n      return void 0;\n    }\n    let filepath = path.resolve(filedir, path$1);\n    if (avoidFileConflicts) {\n      filepath = await uniqueFile(filepath);\n    }\n    await promises.mkdir(path.dirname(filepath), {\n      recursive: true\n    }).catch(() => {\n    });\n    let writeFileStream = node_fs.createWriteStream(filepath);\n    let size = 0;\n    let deleteFile = false;\n    try {\n      for await (let chunk of data) {\n        size += chunk.byteLength;\n        if (size > maxPartSize) {\n          deleteFile = true;\n          throw new serverRuntime.MaxPartSizeExceededError(name, maxPartSize);\n        }\n        writeFileStream.write(chunk);\n      }\n    } finally {\n      writeFileStream.end();\n      await node_util.promisify(node_stream.finished)(writeFileStream);\n      if (deleteFile) {\n        await promises.rm(filepath).catch(() => {\n        });\n      }\n    }\n    return new NodeOnDiskFile(filepath, contentType);\n  };\n}\nclass NodeOnDiskFile {\n  constructor(filepath, type, slicer) {\n    __publicField(this, \"lastModified\", 0);\n    __publicField(this, \"webkitRelativePath\", \"\");\n    // TODO: remove this property once TS fixed File class regression\n    //  https://github.com/microsoft/TypeScript/issues/52166\n    __publicField(this, \"prototype\", File.prototype);\n    this.filepath = filepath;\n    this.type = type;\n    this.slicer = slicer;\n    this.name = path.basename(filepath);\n  }\n  get size() {\n    let stats = node_fs.statSync(this.filepath);\n    if (this.slicer) {\n      let slice = this.slicer.end - this.slicer.start;\n      return slice < 0 ? 0 : slice > stats.size ? stats.size : slice;\n    }\n    return stats.size;\n  }\n  slice(start, end, type) {\n    var _this$slicer;\n    if (typeof start === \"number\" && start < 0)\n      start = this.size + start;\n    if (typeof end === \"number\" && end < 0)\n      end = this.size + end;\n    let startOffset = ((_this$slicer = this.slicer) === null || _this$slicer === void 0 ? void 0 : _this$slicer.start) || 0;\n    start = startOffset + (start || 0);\n    end = startOffset + (end || this.size);\n    return new NodeOnDiskFile(\n      this.filepath,\n      typeof type === \"string\" ? type : this.type,\n      {\n        start,\n        end\n      }\n      // TODO: remove this typecast once TS fixed File class regression\n      //  https://github.com/microsoft/TypeScript/issues/52166\n    );\n  }\n  async arrayBuffer() {\n    let stream2 = node_fs.createReadStream(this.filepath);\n    if (this.slicer) {\n      stream2 = stream2.pipe(streamSlice__namespace.slice(this.slicer.start, this.slicer.end));\n    }\n    return new Promise((resolve, reject) => {\n      let buf = [];\n      stream2.on(\"data\", (chunk) => buf.push(chunk));\n      stream2.on(\"end\", () => resolve(Buffer.concat(buf)));\n      stream2.on(\"error\", (err) => reject(err));\n    });\n  }\n  stream() {\n    let stream$1 = node_fs.createReadStream(this.filepath);\n    if (this.slicer) {\n      stream$1 = stream$1.pipe(streamSlice__namespace.slice(this.slicer.start, this.slicer.end));\n    }\n    return stream.createReadableStreamFromReadable(stream$1);\n  }\n  async text() {\n    return stream.readableStreamToString(this.stream());\n  }\n  get [Symbol.toStringTag]() {\n    return \"File\";\n  }\n  remove() {\n    return promises.unlink(this.filepath);\n  }\n  getFilePath() {\n    return this.filepath;\n  }\n}\nexports.NodeOnDiskFile = NodeOnDiskFile;\nexports.createFileUploadHandler = createFileUploadHandler;\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nconst alreadyWarned = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nexport { warnOnce };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parse, serialize } from \"cookie\";\nimport { warnOnce } from \"./warnings.js\";\nconst createCookieFactory = ({\n  sign,\n  unsign\n}) => (name, cookieOptions = {}) => {\n  let {\n    secrets = [],\n    ...options\n  } = {\n    path: \"/\",\n    sameSite: \"lax\",\n    ...cookieOptions\n  };\n  warnOnceAboutExpiresCookie(name, options.expires);\n  return {\n    get name() {\n      return name;\n    },\n    get isSigned() {\n      return secrets.length > 0;\n    },\n    get expires() {\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\n    },\n    async parse(cookieHeader, parseOptions) {\n      if (!cookieHeader)\n        return null;\n      let cookies = parse(cookieHeader, {\n        ...options,\n        ...parseOptions\n      });\n      return name in cookies ? cookies[name] === \"\" ? \"\" : await decodeCookieValue(unsign, cookies[name], secrets) : null;\n    },\n    async serialize(value, serializeOptions) {\n      return serialize(name, value === \"\" ? \"\" : await encodeCookieValue(sign, value, secrets), {\n        ...options,\n        ...serializeOptions\n      });\n    }\n  };\n};\nconst isCookie = (object) => {\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\n};\nasync function encodeCookieValue(sign, value, secrets) {\n  let encoded = encodeData(value);\n  if (secrets.length > 0) {\n    encoded = await sign(encoded, secrets[0]);\n  }\n  return encoded;\n}\nasync function decodeCookieValue(unsign, value, secrets) {\n  if (secrets.length > 0) {\n    for (let secret of secrets) {\n      let unsignedValue = await unsign(value, secret);\n      if (unsignedValue !== false) {\n        return decodeData(unsignedValue);\n      }\n    }\n    return null;\n  }\n  return decodeData(value);\n}\nfunction encodeData(value) {\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\n}\nfunction decodeData(value) {\n  try {\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\n  } catch (error) {\n    return {};\n  }\n}\nfunction myEscape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, code;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (/[\\w*+\\-./@]/.exec(chr)) {\n      result += chr;\n    } else {\n      code = chr.charCodeAt(0);\n      if (code < 256) {\n        result += \"%\" + hex(code, 2);\n      } else {\n        result += \"%u\" + hex(code, 4).toUpperCase();\n      }\n    }\n  }\n  return result;\n}\nfunction hex(code, length) {\n  let result = code.toString(16);\n  while (result.length < length)\n    result = \"0\" + result;\n  return result;\n}\nfunction myUnescape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, part;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (chr === \"%\") {\n      if (str.charAt(index) === \"u\") {\n        part = str.slice(index + 1, index + 5);\n        if (/^[\\da-f]{4}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 5;\n          continue;\n        }\n      } else {\n        part = str.slice(index, index + 2);\n        if (/^[\\da-f]{2}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 2;\n          continue;\n        }\n      }\n    }\n    result += chr;\n  }\n  return result;\n}\nfunction warnOnceAboutExpiresCookie(name, expires) {\n  warnOnce(!expires, `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`);\n}\nexport { createCookieFactory, isCookie };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { streamMultipart } from \"@web3-storage/multipart-parser\";\nfunction composeUploadHandlers(...handlers) {\n  return async (part) => {\n    for (let handler of handlers) {\n      let value = await handler(part);\n      if (typeof value !== \"undefined\" && value !== null) {\n        return value;\n      }\n    }\n    return void 0;\n  };\n}\nasync function parseMultipartFormData(request, uploadHandler) {\n  let contentType = request.headers.get(\"Content-Type\") || \"\";\n  let [type, boundary] = contentType.split(/\\s*;\\s*boundary=/);\n  if (!request.body || !boundary || type !== \"multipart/form-data\") {\n    throw new TypeError(\"Could not parse content as FormData.\");\n  }\n  let formData = new FormData();\n  let parts = streamMultipart(request.body, boundary);\n  for await (let part of parts) {\n    if (part.done)\n      break;\n    if (typeof part.filename === \"string\") {\n      part.filename = part.filename.split(/[/\\\\]/).pop();\n    }\n    let value = await uploadHandler(part);\n    if (typeof value !== \"undefined\" && value !== null) {\n      formData.append(part.name, value);\n    }\n  }\n  return formData;\n}\nexport { composeUploadHandlers, parseMultipartFormData };\n","/**\n * @remix-run/router v1.11.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar Action;\n(function(Action2) {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries;\n  entries = initialEntries.map((entry, index2) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index2 === 0 ? \"default\" : void 0));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window2, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window2.location;\n    return createLocation(\n      \"\",\n      {\n        pathname,\n        search,\n        hash\n      },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substr(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      {\n        pathname,\n        search,\n        hash\n      },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\")\n      console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window: window2 = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window2.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation)\n      validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation)\n      validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nvar ResultType;\n(function(ResultType2) {\n  ResultType2[\"data\"] = \"data\";\n  ResultType2[\"deferred\"] = \"deferred\";\n  ResultType2[\"redirect\"] = \"redirect\";\n  ResultType2[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = /* @__PURE__ */ new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], 'Found a route id collision on id \"' + id + `\".  Route id's must be globally unique within Data Router usages`);\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: void 0\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path \"' + meta.relativePath + '\" nested under path ' + ('\"' + parentPath + '\" is not valid. An absolute child route path ') + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        \"Index routes must not have child routes. Please remove \" + ('all child routes from route path \"' + path + '\".')\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0)\n    return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(...restExploded.map((subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map((exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map((meta) => meta.childrenIndex), b.routesMeta.map((meta) => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match)\n      return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, 'Route path \"' + path + '\" will be treated as if it were ' + ('\"' + path.replace(/\\*$/, \"/*\") + '\" because the `*` character must ') + \"always follow a `/` in the pattern. To get rid of this warning, \" + ('please change the route path to \"' + path.replace(/\\*$/, \"/*\") + '\".'));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, 'Missing \":' + key + '\" param');\n      return stringify(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match)\n    return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = void 0;\n    } else {\n      memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), 'Route path \"' + path + '\" will be treated as if it were ' + ('\"' + path.replace(/\\*$/, \"/*\") + '\" because the `*` character must ') + \"always follow a `/` in the pattern. To get rid of this warning, \" + ('please change the route path to \"' + path.replace(/\\*$/, \"/*\") + '\".'));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(/\\/:(\\w+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else\n    ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, 'The URL path \"' + value + '\" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, 'The value for the URL param \"' + paramName + '\" will not be decoded because' + (' the string \"' + value + '\" is a malformed URL segment. This is probably') + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\")\n    return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1)\n        segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + 'a string in <Link to=\"...\"> and the router will parse it for you.';\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nfunction getToPathname(to) {\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\nconst joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nconst normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nconst normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nconst normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nconst json = function json2(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {\n}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = /* @__PURE__ */ new Set();\n    this.subscribers = /* @__PURE__ */ new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key, void 0, data), (error) => this.onSettle(promise, key, error));\n    promise.catch(() => {\n    });\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      this.unlistenAbortSignal();\n    }\n    if (error === void 0 && data === void 0) {\n      let undefinedError = new Error('Deferred data for key \"' + key + '\" resolved/rejected with `undefined`, you must resolve/reject with a value or `null`.');\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === void 0) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted2) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted2 || this.done) {\n            resolve(aborted2);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer2(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\nconst redirect = function redirect2(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, void 0, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized = (\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) && // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null)\n  );\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = Action.Pop;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledDeferredRoutes = [];\n  let cancelledFetcherLoads = [];\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let deletedFetchers = /* @__PURE__ */ new Set();\n  let activeDeferreds = /* @__PURE__ */ new Map();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let ignoreNextHistoryUpdate = false;\n  function initialize() {\n    unlistenHistory = init.history.listen((_ref) => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: void 0,\n              reset: void 0,\n              location\n            });\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, viewTransitionOpts) {\n    state = _extends({}, state, newState);\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            deletedFetchersKeys.push(key);\n          } else {\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    subscribers.forEach((subscriber) => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    }));\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation)\n      ;\n    else if (pendingAction === Action.Pop)\n      ;\n    else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === Action.Pop) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), viewTransitionOpts);\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false)\n      ;\n    else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition\n    });\n  }\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    cancelActiveDeferreds((routeId) => !(matches && matches.some((m) => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers2 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect3 = findRedirect(results);\n    if (redirect3) {\n      if (redirect3.idx >= matchesToLoad.length) {\n        let fetcherKey = revalidatingFetchers[redirect3.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect3.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key))\n      abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (deletedFetchers.has(key)) {\n      state.fetchers.set(key, getDoneFetcher(void 0));\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        let doneFetcher = getDoneFetcher(void 0);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission\n        });\n      }\n    }\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      {\n        [match.route.id]: actionResult.data\n      },\n      void 0\n      // No need to send through errors since we short circuit above\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    let redirect3 = findRedirect(results);\n    if (redirect3) {\n      if (redirect3.idx >= matchesToLoad.length) {\n        let fetcherKey = revalidatingFetchers[redirect3.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect3.result);\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    if (isDeferredResult(result)) {\n      result = await resolveDeferredData(result, fetchRequest.signal, true) || result;\n    }\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (deletedFetchers.has(key)) {\n      state.fetchers.set(key, getDoneFetcher(void 0));\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        let doneFetcher2 = getDoneFetcher(void 0);\n        state.fetchers.set(key, doneFetcher2);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  async function startRedirectNavigation(state2, redirect3, _temp) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect3.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state2.location, redirect3.location, {\n      _isRedirect: true\n    });\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect3.reloadDocument) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect3.location)) {\n        const url = init.history.createURL(redirect3.location);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect3.location);\n        } else {\n          routerWindow.location.assign(redirect3.location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state2.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state2.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect3.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect3.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    let results = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map((f) => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f) => f.match), fetcherResults, fetchersToLoad.map((f) => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, void 0, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, void 0, manifest);\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\n    if (error !== void 0) {\n      throw error;\n    }\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return void 0;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result2 = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result2;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context2 = await loadRouteData(request, matches, requestContext, void 0, {\n        [boundaryMatch.route.id]: result.error\n      });\n      return _extends({}, context2, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter((m) => m.route.loader || m.route.lazy);\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n    }\n    let activeDeferreds = /* @__PURE__ */ new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    let executedLoaders = new Set(matchesToLoad.map((match) => match.route.id));\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n          let [name, value] = _ref3;\n          return \"\" + acc + name + \"=\" + value + \"\\n\";\n        }, \"\")\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json3 = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json: json3,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some((id) => id === match.route.id)) {\n      return true;\n    }\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: (\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired || // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n      )\n    }));\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = currentLoaderData[match.route.id] === void 0;\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, 'Route \"' + routeToUpdate.id + '\" has a static property \"' + lazyRouteProperty + '\" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property \"' + lazyRouteProperty + '\" will be ignored.'));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  Object.assign(routeToUpdate, routeUpdates);\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: void 0\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest)\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return {\n            type: ResultType.data,\n            data: void 0\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== void 0, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + ('\"' + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null\n      };\n    }\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    if (contentType && (/\\bapplication\\/json\\b/.test(contentType) || /\\btext\\/x\\-component\\b/.test(contentType))) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      loaderData[id] = void 0;\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = void 0;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== void 0 && fetcherResults[index] !== void 0, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    if (controller && controller.signal.aborted) {\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== void 0) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== void 0 && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + ' request to \"' + pathname + '\" but ' + ('did not provide a `loader` for route \"' + routeId + '\", ') + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = 'Route \"' + routeId + '\" does not match URL \"' + pathname + '\"';\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = 'No route matches URL \"' + pathname + '\"';\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + ' request to \"' + pathname + '\" but ' + ('did not provide an `action` for route \"' + routeId + '\", ') + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = 'Invalid request method \"' + method.toUpperCase() + '\"';\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find((m) => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then((result2) => {\n        if (result2) {\n          results[index] = result2 || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json: json3\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json3 !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: json3,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json3 = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json3 || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json3 = {};\n    for (let [k, v] of transitions) {\n      json3[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json3));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nlet ServerMode = /* @__PURE__ */ function(ServerMode2) {\n  ServerMode2[\"Development\"] = \"development\";\n  ServerMode2[\"Production\"] = \"production\";\n  ServerMode2[\"Test\"] = \"test\";\n  return ServerMode2;\n}({});\nfunction isServerMode(value) {\n  return value === ServerMode.Development || value === ServerMode.Production || value === ServerMode.Test;\n}\nexport { ServerMode, isServerMode };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { isRouteErrorResponse } from \"@remix-run/router\";\nimport { ServerMode } from \"./mode.js\";\nfunction sanitizeError(error, serverMode) {\n  if (error instanceof Error && serverMode !== ServerMode.Development) {\n    let sanitized = new Error(\"Unexpected Server Error\");\n    sanitized.stack = void 0;\n    return sanitized;\n  }\n  return error;\n}\nfunction sanitizeErrors(errors, serverMode) {\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\n    return Object.assign(acc, {\n      [routeId]: sanitizeError(error, serverMode)\n    });\n  }, {});\n}\nfunction serializeError(error, serverMode) {\n  let sanitized = sanitizeError(error, serverMode);\n  return {\n    message: sanitized.message,\n    stack: sanitized.stack\n  };\n}\nfunction serializeErrors(errors, serverMode) {\n  if (!errors)\n    return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = {\n        ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      let sanitized = sanitizeError(val, serverMode);\n      serialized[key] = {\n        message: sanitized.message,\n        stack: sanitized.stack,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.  This will only apply\n        // in dev mode since all production errors are sanitized to normal\n        // Error instances\n        ...sanitized.name !== \"Error\" ? {\n          __subType: sanitized.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nexport { sanitizeError, sanitizeErrors, serializeError, serializeErrors };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { json as json$1, defer as defer$1, redirect as redirect$1, redirectDocument as redirectDocument$1 } from \"@remix-run/router\";\nimport { serializeError } from \"./errors.js\";\nconst json = (data, init = {}) => {\n  return json$1(data, init);\n};\nconst defer = (data, init = {}) => {\n  return defer$1(data, init);\n};\nconst redirect = (url, init = 302) => {\n  return redirect$1(url, init);\n};\nconst redirectDocument = (url, init = 302) => {\n  return redirectDocument$1(url, init);\n};\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nconst redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(response) {\n  return isRedirectStatusCode(response.status);\n}\nfunction isTrackedPromise(value) {\n  return value != null && typeof value.then === \"function\" && value._tracked === true;\n}\nconst DEFERRED_VALUE_PLACEHOLDER_PREFIX = \"__deferred_promise:\";\nfunction createDeferredReadableStream(deferredData, signal, serverMode) {\n  let encoder = new TextEncoder();\n  let stream = new ReadableStream({\n    async start(controller) {\n      let criticalData = {};\n      let preresolvedKeys = [];\n      for (let [key, value] of Object.entries(deferredData.data)) {\n        if (isTrackedPromise(value)) {\n          criticalData[key] = `${DEFERRED_VALUE_PLACEHOLDER_PREFIX}${key}`;\n          if (typeof value._data !== \"undefined\" || typeof value._error !== \"undefined\") {\n            preresolvedKeys.push(key);\n          }\n        } else {\n          criticalData[key] = value;\n        }\n      }\n      controller.enqueue(encoder.encode(JSON.stringify(criticalData) + \"\\n\\n\"));\n      for (let preresolvedKey of preresolvedKeys) {\n        enqueueTrackedPromise(controller, encoder, preresolvedKey, deferredData.data[preresolvedKey], serverMode);\n      }\n      let unsubscribe = deferredData.subscribe((aborted, settledKey) => {\n        if (settledKey) {\n          enqueueTrackedPromise(controller, encoder, settledKey, deferredData.data[settledKey], serverMode);\n        }\n      });\n      await deferredData.resolveData(signal);\n      unsubscribe();\n      controller.close();\n    }\n  });\n  return stream;\n}\nfunction enqueueTrackedPromise(controller, encoder, settledKey, promise, serverMode) {\n  var _a;\n  if (\"_error\" in promise) {\n    controller.enqueue(encoder.encode(\"error:\" + JSON.stringify({\n      [settledKey]: promise._error instanceof Error ? serializeError(promise._error, serverMode) : promise._error\n    }) + \"\\n\\n\"));\n  } else {\n    controller.enqueue(encoder.encode(\"data:\" + JSON.stringify({\n      [settledKey]: (_a = promise._data) != null ? _a : null\n    }) + \"\\n\\n\"));\n  }\n}\nexport { createDeferredReadableStream, defer, isDeferredData, isRedirectResponse, isRedirectStatusCode, isResponse, json, redirect, redirectDocument };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction createEntryRouteModules(manifest) {\n  return Object.keys(manifest).reduce((memo, routeId) => {\n    memo[routeId] = manifest[routeId].module;\n    return memo;\n  }, {});\n}\nexport { createEntryRouteModules };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { splitCookiesString } from \"set-cookie-parser\";\nfunction getDocumentHeadersRR(build, context) {\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\n  let errorHeaders;\n  if (boundaryIdx >= 0) {\n    let {\n      actionHeaders,\n      actionData,\n      loaderHeaders,\n      loaderData\n    } = context;\n    context.matches.slice(boundaryIdx).some((match) => {\n      let id = match.route.id;\n      if (actionHeaders[id] && (!actionData || actionData[id] === void 0)) {\n        errorHeaders = actionHeaders[id];\n      } else if (loaderHeaders[id] && loaderData[id] === void 0) {\n        errorHeaders = loaderHeaders[id];\n      }\n      return errorHeaders != null;\n    });\n  }\n  return matches.reduce((parentHeaders, match, idx) => {\n    let {\n      id\n    } = match.route;\n    let routeModule = build.routes[id].module;\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\n    let actionHeaders = context.actionHeaders[id] || new Headers();\n    let includeErrorHeaders = errorHeaders != void 0 && idx === matches.length - 1;\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\n    if (routeModule.headers == null) {\n      let headers2 = new Headers(parentHeaders);\n      if (includeErrorCookies) {\n        prependCookies(errorHeaders, headers2);\n      }\n      prependCookies(actionHeaders, headers2);\n      prependCookies(loaderHeaders, headers2);\n      return headers2;\n    }\n    let headers = new Headers(routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\n      loaderHeaders,\n      parentHeaders,\n      actionHeaders,\n      errorHeaders: includeErrorHeaders ? errorHeaders : void 0\n    }) : routeModule.headers : void 0);\n    if (includeErrorCookies) {\n      prependCookies(errorHeaders, headers);\n    }\n    prependCookies(actionHeaders, headers);\n    prependCookies(loaderHeaders, headers);\n    prependCookies(parentHeaders, headers);\n    return headers;\n  }, new Headers());\n}\nfunction prependCookies(parentHeaders, childHeaders) {\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\n  if (parentSetCookieString) {\n    let cookies = splitCookiesString(parentSetCookieString);\n    cookies.forEach((cookie) => {\n      childHeaders.append(\"Set-Cookie\", cookie);\n    });\n  }\n}\nexport { getDocumentHeadersRR };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    console.error(\"The following error is a bug in Remix; please open an issue! https://github.com/remix-run/remix/issues/new\");\n    throw new Error(message);\n  }\n}\nexport { invariant as default };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { matchRoutes } from \"@remix-run/router\";\nfunction matchServerRoutes(routes, pathname) {\n  let matches = matchRoutes(routes, pathname);\n  if (!matches)\n    return null;\n  return matches.map((match) => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\nexport { matchServerRoutes };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { isResponse, json, isDeferredData, isRedirectStatusCode, redirect } from \"./responses.js\";\nasync function callRouteActionRR({\n  loadContext,\n  action,\n  params,\n  request,\n  routeId\n}) {\n  let result = await action({\n    request: stripDataParam(stripIndexParam(request)),\n    context: loadContext,\n    params\n  });\n  if (result === void 0) {\n    throw new Error(`You defined an action for route \"${routeId}\" but didn't return anything from your \\`action\\` function. Please return a value or \\`null\\`.`);\n  }\n  return isResponse(result) ? result : json(result);\n}\nasync function callRouteLoaderRR({\n  loadContext,\n  loader,\n  params,\n  request,\n  routeId\n}) {\n  let result = await loader({\n    request: stripDataParam(stripIndexParam(request)),\n    context: loadContext,\n    params\n  });\n  if (result === void 0) {\n    throw new Error(`You defined a loader for route \"${routeId}\" but didn't return anything from your \\`loader\\` function. Please return a value or \\`null\\`.`);\n  }\n  if (isDeferredData(result)) {\n    if (result.init && isRedirectStatusCode(result.init.status || 200)) {\n      return redirect(new Headers(result.init.headers).get(\"Location\"), result.init);\n    }\n    return result;\n  }\n  return isResponse(result) ? result : json(result);\n}\nfunction stripIndexParam(request) {\n  let url = new URL(request.url);\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\nfunction stripDataParam(request) {\n  let url = new URL(request.url);\n  url.searchParams.delete(\"_data\");\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\nexport { callRouteActionRR, callRouteLoaderRR };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { callRouteLoaderRR, callRouteActionRR } from \"./data.js\";\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    let parentId = route.parentId || \"\";\n    if (!routes[parentId]) {\n      routes[parentId] = [];\n    }\n    routes[parentId].push(route);\n  });\n  return routes;\n}\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => ({\n    ...route,\n    children: createRoutes(manifest, route.id, routesByParentId)\n  }));\n}\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let commonRoute = {\n      // Always include root due to default boundaries\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\n      id: route.id,\n      path: route.path,\n      loader: route.module.loader ? (\n        // Need to use RR's version here to permit the optional context even\n        // though we know it'll always be provided in remix\n        (args) => callRouteLoaderRR({\n          request: args.request,\n          params: args.params,\n          loadContext: args.context,\n          loader: route.module.loader,\n          routeId: route.id\n        })\n      ) : void 0,\n      action: route.module.action ? (args) => callRouteActionRR({\n        request: args.request,\n        params: args.params,\n        loadContext: args.context,\n        action: route.module.action,\n        routeId: route.id\n      }) : void 0,\n      handle: route.module.handle\n    };\n    return route.index ? {\n      index: true,\n      ...commonRoute\n    } : {\n      caseSensitive: route.caseSensitive,\n      children: createStaticHandlerDataRoutes(manifest, future, route.id, routesByParentId),\n      ...commonRoute\n    };\n  });\n}\nexport { createRoutes, createStaticHandlerDataRoutes };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nexport { escapeHtml };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { escapeHtml } from \"./markup.js\";\nfunction createServerHandoffString(serverHandoff) {\n  return escapeHtml(JSON.stringify(serverHandoff));\n}\nexport { createServerHandoffString };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { UNSAFE_DEFERRED_SYMBOL, isRouteErrorResponse, json, getStaticContextFromError, createStaticHandler } from \"@remix-run/router\";\nimport { createEntryRouteModules } from \"./entry.js\";\nimport { serializeError, sanitizeErrors, serializeErrors } from \"./errors.js\";\nimport { getDocumentHeadersRR } from \"./headers.js\";\nimport invariant from \"./invariant.js\";\nimport { ServerMode, isServerMode } from \"./mode.js\";\nimport { matchServerRoutes } from \"./routeMatching.js\";\nimport { createRoutes, createStaticHandlerDataRoutes } from \"./routes.js\";\nimport { isRedirectResponse, createDeferredReadableStream, isResponse } from \"./responses.js\";\nimport { createServerHandoffString } from \"./serverHandoff.js\";\nfunction derive(build, mode) {\n  let routes = createRoutes(build.routes);\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\n  let serverMode = isServerMode(mode) ? mode : ServerMode.Production;\n  let staticHandler = createStaticHandler(dataRoutes);\n  let errorHandler = build.entry.module.handleError || ((error, {\n    request\n  }) => {\n    if (serverMode !== ServerMode.Test && !request.signal.aborted) {\n      console.error(\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        isRouteErrorResponse(error) && error.error ? error.error : error\n      );\n    }\n  });\n  return {\n    routes,\n    dataRoutes,\n    serverMode,\n    staticHandler,\n    errorHandler\n  };\n}\nconst createRequestHandler = (build, mode) => {\n  let _build;\n  let routes;\n  let serverMode;\n  let staticHandler;\n  let errorHandler;\n  return async function requestHandler(request, loadContext = {}, {\n    __criticalCss: criticalCss\n  } = {}) {\n    _build = typeof build === \"function\" ? await build() : build;\n    if (typeof build === \"function\") {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    }\n    let url = new URL(request.url);\n    let matches = matchServerRoutes(routes, url.pathname);\n    let handleError = (error) => errorHandler(error, {\n      context: loadContext,\n      params: matches && matches.length > 0 ? matches[0].params : {},\n      request\n    });\n    let response;\n    if (url.searchParams.has(\"_data\")) {\n      let routeId = url.searchParams.get(\"_data\");\n      response = await handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError);\n      if (_build.entry.module.handleDataRequest) {\n        var _matches$find;\n        response = await _build.entry.module.handleDataRequest(response, {\n          context: loadContext,\n          params: (matches === null || matches === void 0 ? void 0 : (_matches$find = matches.find((m) => m.route.id == routeId)) === null || _matches$find === void 0 ? void 0 : _matches$find.params) || {},\n          request\n        });\n      }\n    } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\n      response = await handleResourceRequestRR(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError);\n    } else {\n      response = await handleDocumentRequestRR(serverMode, _build, staticHandler, request, loadContext, handleError, criticalCss);\n    }\n    if (request.method === \"HEAD\") {\n      return new Response(null, {\n        headers: response.headers,\n        status: response.status,\n        statusText: response.statusText\n      });\n    }\n    return response;\n  };\n};\nasync function handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {\n  try {\n    let response = await staticHandler.queryRoute(request, {\n      routeId,\n      requestContext: loadContext\n    });\n    if (isRedirectResponse(response)) {\n      let headers = new Headers(response.headers);\n      headers.set(\"X-Remix-Redirect\", headers.get(\"Location\"));\n      headers.set(\"X-Remix-Status\", response.status);\n      headers.delete(\"Location\");\n      if (response.headers.get(\"Set-Cookie\") !== null) {\n        headers.set(\"X-Remix-Revalidate\", \"yes\");\n      }\n      return new Response(null, {\n        status: 204,\n        headers\n      });\n    }\n    if (UNSAFE_DEFERRED_SYMBOL in response) {\n      let deferredData = response[UNSAFE_DEFERRED_SYMBOL];\n      let body = createDeferredReadableStream(deferredData, request.signal, serverMode);\n      let init = deferredData.init || {};\n      let headers = new Headers(init.headers);\n      headers.set(\"Content-Type\", \"text/remix-deferred\");\n      headers.set(\"X-Remix-Response\", \"yes\");\n      init.headers = headers;\n      return new Response(body, init);\n    }\n    response.headers.set(\"X-Remix-Response\", \"yes\");\n    return response;\n  } catch (error) {\n    if (isResponse(error)) {\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\n      return error;\n    }\n    if (isRouteErrorResponse(error)) {\n      if (error) {\n        handleError(error);\n      }\n      return errorResponseToJson(error, serverMode);\n    }\n    let errorInstance = error instanceof Error ? error : new Error(\"Unexpected Server Error\");\n    handleError(errorInstance);\n    return json(serializeError(errorInstance, serverMode), {\n      status: 500,\n      headers: {\n        \"X-Remix-Error\": \"yes\"\n      }\n    });\n  }\n}\nasync function handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\n  let context;\n  try {\n    context = await staticHandler.query(request, {\n      requestContext: loadContext\n    });\n  } catch (error) {\n    handleError(error);\n    return new Response(null, {\n      status: 500\n    });\n  }\n  if (isResponse(context)) {\n    return context;\n  }\n  if (context.errors) {\n    Object.values(context.errors).forEach((err) => {\n      if (!isRouteErrorResponse(err) || err.error) {\n        handleError(err);\n      }\n    });\n    context.errors = sanitizeErrors(context.errors, serverMode);\n  }\n  let headers = getDocumentHeadersRR(build, context);\n  let entryContext = {\n    manifest: build.assets,\n    routeModules: createEntryRouteModules(build.routes),\n    staticHandlerContext: context,\n    criticalCss,\n    serverHandoffString: createServerHandoffString({\n      url: context.location.pathname,\n      criticalCss,\n      state: {\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: serializeErrors(context.errors, serverMode)\n      },\n      future: build.future\n    }),\n    future: build.future,\n    serializeError: (err) => serializeError(err, serverMode)\n  };\n  let handleDocumentRequestFunction = build.entry.module.default;\n  try {\n    return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);\n  } catch (error) {\n    handleError(error);\n    context = getStaticContextFromError(staticHandler.dataRoutes, context, error);\n    if (context.errors) {\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    entryContext = {\n      ...entryContext,\n      staticHandlerContext: context,\n      serverHandoffString: createServerHandoffString({\n        url: context.location.pathname,\n        state: {\n          loaderData: context.loaderData,\n          actionData: context.actionData,\n          errors: serializeErrors(context.errors, serverMode)\n        },\n        future: build.future\n      })\n    };\n    try {\n      return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);\n    } catch (error2) {\n      handleError(error2);\n      return returnLastResortErrorResponse(error2, serverMode);\n    }\n  }\n}\nasync function handleResourceRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {\n  try {\n    let response = await staticHandler.queryRoute(request, {\n      routeId,\n      requestContext: loadContext\n    });\n    invariant(isResponse(response), \"Expected a Response to be returned from queryRoute\");\n    return response;\n  } catch (error) {\n    if (isResponse(error)) {\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\n      return error;\n    }\n    if (isRouteErrorResponse(error)) {\n      if (error) {\n        handleError(error);\n      }\n      return errorResponseToJson(error, serverMode);\n    }\n    handleError(error);\n    return returnLastResortErrorResponse(error, serverMode);\n  }\n}\nfunction errorResponseToJson(errorResponse, serverMode) {\n  return json(serializeError(\n    // @ts-expect-error This is \"private\" from users but intended for internal use\n    errorResponse.error || new Error(\"Unexpected Server Error\"),\n    serverMode\n  ), {\n    status: errorResponse.status,\n    statusText: errorResponse.statusText,\n    headers: {\n      \"X-Remix-Error\": \"yes\"\n    }\n  });\n}\nfunction returnLastResortErrorResponse(error, serverMode) {\n  let message = \"Unexpected Server Error\";\n  if (serverMode !== ServerMode.Production) {\n    message += `\n\n${String(error)}`;\n  }\n  return new Response(message, {\n    status: 500,\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  });\n}\nexport { createRequestHandler };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { isCookie } from \"./cookies.js\";\nimport { warnOnce } from \"./warnings.js\";\nfunction flash(name) {\n  return `__flash_${name}__`;\n}\nconst createSession = (initialData = {}, id = \"\") => {\n  let map = new Map(Object.entries(initialData));\n  return {\n    get id() {\n      return id;\n    },\n    get data() {\n      return Object.fromEntries(map);\n    },\n    has(name) {\n      return map.has(name) || map.has(flash(name));\n    },\n    get(name) {\n      if (map.has(name))\n        return map.get(name);\n      let flashName = flash(name);\n      if (map.has(flashName)) {\n        let value = map.get(flashName);\n        map.delete(flashName);\n        return value;\n      }\n      return void 0;\n    },\n    set(name, value) {\n      map.set(name, value);\n    },\n    flash(name, value) {\n      map.set(flash(name), value);\n    },\n    unset(name) {\n      map.delete(name);\n    }\n  };\n};\nconst isSession = (object) => {\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\n};\nconst createSessionStorageFactory = (createCookie) => ({\n  cookie: cookieArg,\n  createData,\n  readData,\n  updateData,\n  deleteData\n}) => {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie((cookieArg === null || cookieArg === void 0 ? void 0 : cookieArg.name) || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\n      let data = id && await readData(id);\n      return createSession(data || {}, id || \"\");\n    },\n    async commitSession(session, options) {\n      let {\n        id,\n        data\n      } = session;\n      let expires = (options === null || options === void 0 ? void 0 : options.maxAge) != null ? new Date(Date.now() + options.maxAge * 1e3) : (options === null || options === void 0 ? void 0 : options.expires) != null ? options.expires : cookie.expires;\n      if (id) {\n        await updateData(id, data, expires);\n      } else {\n        id = await createData(data, expires);\n      }\n      return cookie.serialize(id, options);\n    },\n    async destroySession(session, options) {\n      await deleteData(session.id);\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n};\nfunction warnOnceAboutSigningSessionCookie(cookie) {\n  warnOnce(cookie.isSigned, `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);\n}\nexport { createSession, createSessionStorageFactory, isSession, warnOnceAboutSigningSessionCookie };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { isCookie } from \"../cookies.js\";\nimport { warnOnceAboutSigningSessionCookie, createSession } from \"../sessions.js\";\nconst createCookieSessionStorageFactory = (createCookie) => ({\n  cookie: cookieArg\n} = {}) => {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie((cookieArg === null || cookieArg === void 0 ? void 0 : cookieArg.name) || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      return createSession(cookieHeader && await cookie.parse(cookieHeader, options) || {});\n    },\n    async commitSession(session, options) {\n      let serializedCookie = await cookie.serialize(session.data, options);\n      if (serializedCookie.length > 4096) {\n        throw new Error(\"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length);\n      }\n      return serializedCookie;\n    },\n    async destroySession(_session, options) {\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n};\nexport { createCookieSessionStorageFactory };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nconst createMemorySessionStorageFactory = (createSessionStorage) => ({\n  cookie\n} = {}) => {\n  let map = /* @__PURE__ */ new Map();\n  return createSessionStorage({\n    cookie,\n    async createData(data, expires) {\n      let id = Math.random().toString(36).substring(2, 10);\n      map.set(id, {\n        data,\n        expires\n      });\n      return id;\n    },\n    async readData(id) {\n      if (map.has(id)) {\n        let {\n          data,\n          expires\n        } = map.get(id);\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\n          return data;\n        }\n        if (expires)\n          map.delete(id);\n      }\n      return null;\n    },\n    async updateData(id, data, expires) {\n      map.set(id, {\n        data,\n        expires\n      });\n    },\n    async deleteData(id) {\n      map.delete(id);\n    }\n  });\n};\nexport { createMemorySessionStorageFactory };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nclass MaxPartSizeExceededError extends Error {\n  constructor(field, maxBytes) {\n    super(`Field \"${field}\" exceeded upload size of ${maxBytes} bytes.`);\n    this.field = field;\n    this.maxBytes = maxBytes;\n  }\n}\nexport { MaxPartSizeExceededError };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { MaxPartSizeExceededError } from \"./errors.js\";\nfunction createMemoryUploadHandler({\n  filter,\n  maxPartSize = 3e6\n} = {}) {\n  return async ({\n    filename,\n    contentType,\n    name,\n    data\n  }) => {\n    if (filter && !await filter({\n      filename,\n      contentType,\n      name\n    })) {\n      return void 0;\n    }\n    let size = 0;\n    let chunks = [];\n    for await (let chunk of data) {\n      size += chunk.byteLength;\n      if (size > maxPartSize) {\n        throw new MaxPartSizeExceededError(name, maxPartSize);\n      }\n      chunks.push(chunk);\n    }\n    if (typeof filename === \"string\") {\n      return new File(chunks, filename, {\n        type: contentType\n      });\n    }\n    return await new Blob(chunks, {\n      type: contentType\n    }).text();\n  };\n}\nexport { createMemoryUploadHandler };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nasync function broadcastDevReady(build, origin) {\n  origin != null ? origin : origin = process.env.REMIX_DEV_ORIGIN;\n  if (!origin)\n    throw Error(\"Dev server origin not set\");\n  let url = new URL(origin);\n  url.pathname = \"ping\";\n  let response = await fetch(url.href, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      buildHash: build.assets.version\n    })\n  }).catch((error) => {\n    console.error(`Could not reach Remix dev server at ${url}`);\n    throw error;\n  });\n  if (!response.ok) {\n    console.error(`Could not reach Remix dev server at ${url} (${response.status})`);\n    throw Error(await response.text());\n  }\n}\nfunction logDevReady(build) {\n  console.log(`[REMIX DEV] ${build.assets.version} ready`);\n}\nexport { broadcastDevReady, logDevReady };\n","/**\n * @remix-run/server-runtime v2.2.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nexport { createCookieFactory, isCookie } from \"./cookies.js\";\nexport { composeUploadHandlers as unstable_composeUploadHandlers, parseMultipartFormData as unstable_parseMultipartFormData } from \"./formData.js\";\nexport { defer, json, redirect, redirectDocument } from \"./responses.js\";\nexport { createRequestHandler } from \"./server.js\";\nexport { createSession, createSessionStorageFactory, isSession } from \"./sessions.js\";\nexport { createCookieSessionStorageFactory } from \"./sessions/cookieStorage.js\";\nexport { createMemorySessionStorageFactory } from \"./sessions/memoryStorage.js\";\nexport { createMemoryUploadHandler as unstable_createMemoryUploadHandler } from \"./upload/memoryUploadHandler.js\";\nexport { MaxPartSizeExceededError } from \"./upload/errors.js\";\nexport { broadcastDevReady, logDevReady } from \"./dev.js\";\n","\"use strict\";\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\nexports.parse = parse;\nexports.serialize = serialize;\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nfunction parse(str, options) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  var obj = {};\n  var opt = options || {};\n  var pairs = str.split(\";\");\n  var dec = opt.decode || decode;\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf(\"=\");\n    if (index < 0) {\n      continue;\n    }\n    var key = pair.substring(0, index).trim();\n    if (void 0 == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim();\n      if (val[0] === '\"') {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n  return obj;\n}\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  var value = enc(val);\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  var str = name + \"=\" + value;\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== \"function\") {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(\"option sameSite is invalid\");\n    }\n  }\n  return str;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch (e) {\n    return str;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search = require(\"./search.js\");\nvar utils = require(\"./utils.js\");\nconst mergeArrays2 = Function.prototype.apply.bind(utils.mergeArrays, void 0);\nconst dash = utils.stringToArray(\"--\");\nconst CRLF = utils.stringToArray(\"\\r\\n\");\nfunction parseContentDisposition(header) {\n  const parts = header.split(\";\").map((part) => part.trim());\n  if (parts.shift() !== \"form-data\") {\n    throw new Error('malformed content-disposition header: missing \"form-data\" in `' + JSON.stringify(parts) + \"`\");\n  }\n  const out = {};\n  for (const part of parts) {\n    const kv = part.split(\"=\", 2);\n    if (kv.length !== 2) {\n      throw new Error(\"malformed content-disposition header: key-value pair not found - \" + part + \" in `\" + header + \"`\");\n    }\n    const [name, value] = kv;\n    if (value[0] === '\"' && value[value.length - 1] === '\"') {\n      out[name] = value.slice(1, -1).replace(/\\\\\"/g, '\"');\n    } else if (value[0] !== '\"' && value[value.length - 1] !== '\"') {\n      out[name] = value;\n    } else if (value[0] === '\"' && value[value.length - 1] !== '\"' || value[0] !== '\"' && value[value.length - 1] === '\"') {\n      throw new Error(\"malformed content-disposition header: mismatched quotations in `\" + header + \"`\");\n    }\n  }\n  if (!out.name) {\n    throw new Error(\"malformed content-disposition header: missing field name in `\" + header + \"`\");\n  }\n  return out;\n}\nfunction parsePartHeaders(lines) {\n  const entries = [];\n  let disposition = false;\n  let line;\n  while (typeof (line = lines.shift()) !== \"undefined\") {\n    const colon = line.indexOf(\":\");\n    if (colon === -1) {\n      throw new Error(\"malformed multipart-form header: missing colon\");\n    }\n    const header = line.slice(0, colon).trim().toLowerCase();\n    const value = line.slice(colon + 1).trim();\n    switch (header) {\n      case \"content-disposition\":\n        disposition = true;\n        entries.push(...Object.entries(parseContentDisposition(value)));\n        break;\n      case \"content-type\":\n        entries.push([\n          \"contentType\",\n          value\n        ]);\n    }\n  }\n  if (!disposition) {\n    throw new Error(\"malformed multipart-form header: missing content-disposition\");\n  }\n  return Object.fromEntries(entries);\n}\nasync function readHeaderLines(it, needle) {\n  let firstChunk = true;\n  let lastTokenWasMatch = false;\n  const headerLines = [[]];\n  const crlfSearch = new search.StreamSearch(CRLF);\n  for (; ; ) {\n    const result = await it.next();\n    if (result.done) {\n      throw new Error(\"malformed multipart-form data: unexpected end of stream\");\n    }\n    if (firstChunk && result.value !== search.MATCH && utils.arraysEqual(result.value.slice(0, 2), dash)) {\n      return [\n        void 0,\n        new Uint8Array()\n      ];\n    }\n    let chunk;\n    if (result.value !== search.MATCH) {\n      chunk = result.value;\n    } else if (!lastTokenWasMatch) {\n      chunk = needle;\n    } else {\n      throw new Error(\"malformed multipart-form data: unexpected boundary\");\n    }\n    if (!chunk.length) {\n      continue;\n    }\n    if (firstChunk) {\n      firstChunk = false;\n    }\n    const tokens = crlfSearch.feed(chunk);\n    for (const [i, token] of tokens.entries()) {\n      const isMatch = token === search.MATCH;\n      if (!isMatch && !token.length) {\n        continue;\n      }\n      if (lastTokenWasMatch && isMatch) {\n        tokens.push(crlfSearch.end());\n        return [\n          headerLines.filter((chunks) => chunks.length).map(mergeArrays2).map(utils.arrayToString),\n          utils.mergeArrays(...tokens.slice(i + 1).map((token2) => token2 === search.MATCH ? CRLF : token2))\n        ];\n      }\n      if (lastTokenWasMatch = isMatch) {\n        headerLines.push([]);\n      } else {\n        headerLines[headerLines.length - 1].push(token);\n      }\n    }\n  }\n}\nasync function* streamMultipart(body, boundary) {\n  const needle = utils.mergeArrays(dash, utils.stringToArray(boundary));\n  const it = new search.ReadableStreamSearch(needle, body)[Symbol.asyncIterator]();\n  for (; ; ) {\n    const result = await it.next();\n    if (result.done) {\n      return;\n    }\n    if (result.value === search.MATCH) {\n      break;\n    }\n  }\n  const crlfSearch = new search.StreamSearch(CRLF);\n  for (; ; ) {\n    let feedChunk = function(chunk) {\n      const chunks = [];\n      for (const token of crlfSearch.feed(chunk)) {\n        if (trailingCRLF) {\n          chunks.push(CRLF);\n        }\n        if (!(trailingCRLF = token === search.MATCH)) {\n          chunks.push(token);\n        }\n      }\n      return utils.mergeArrays(...chunks);\n    };\n    const [headerLines, tail] = await readHeaderLines(it, needle);\n    if (!headerLines) {\n      return;\n    }\n    async function nextToken() {\n      const result = await it.next();\n      if (result.done) {\n        throw new Error(\"malformed multipart-form data: unexpected end of stream\");\n      }\n      return result;\n    }\n    let trailingCRLF = false;\n    let done = false;\n    async function nextChunk() {\n      const result = await nextToken();\n      let chunk;\n      if (result.value !== search.MATCH) {\n        chunk = result.value;\n      } else if (!trailingCRLF) {\n        chunk = CRLF;\n      } else {\n        done = true;\n        return { value: crlfSearch.end() };\n      }\n      return { value: feedChunk(chunk) };\n    }\n    const bufferedChunks = [{ value: feedChunk(tail) }];\n    yield {\n      ...parsePartHeaders(headerLines),\n      data: {\n        [Symbol.asyncIterator]() {\n          return this;\n        },\n        async next() {\n          for (; ; ) {\n            const result = bufferedChunks.shift();\n            if (!result) {\n              break;\n            }\n            if (result.value.length > 0) {\n              return result;\n            }\n          }\n          for (; ; ) {\n            if (done) {\n              return {\n                done,\n                value: void 0\n              };\n            }\n            const result = await nextChunk();\n            if (result.value.length > 0) {\n              return result;\n            }\n          }\n        }\n      }\n    };\n    while (!done) {\n      bufferedChunks.push(await nextChunk());\n    }\n  }\n}\nasync function* iterateMultipart(body, boundary) {\n  for await (const part of streamMultipart(body, boundary)) {\n    const chunks = [];\n    for await (const chunk of part.data) {\n      chunks.push(chunk);\n    }\n    yield {\n      ...part,\n      data: utils.mergeArrays(...chunks)\n    };\n  }\n}\nexports.iterateMultipart = iterateMultipart;\nexports.streamMultipart = streamMultipart;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils = require(\"./utils.js\");\nfunction coerce(a) {\n  if (a instanceof Uint8Array) {\n    return (index) => a[index];\n  }\n  return a;\n}\nfunction jsmemcmp(buf1, pos1, buf2, pos2, len) {\n  const fn1 = coerce(buf1);\n  const fn2 = coerce(buf2);\n  for (let i = 0; i < len; ++i) {\n    if (fn1(pos1 + i) !== fn2(pos2 + i)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction createOccurenceTable(s) {\n  const table = new Array(256).fill(s.length);\n  if (s.length > 1) {\n    for (let i = 0; i < s.length - 1; i++) {\n      table[s[i]] = s.length - 1 - i;\n    }\n  }\n  return table;\n}\nconst MATCH = Symbol(\"Match\");\nclass StreamSearch {\n  constructor(needle) {\n    this._lookbehind = new Uint8Array();\n    if (typeof needle === \"string\") {\n      this._needle = needle = utils.stringToArray(needle);\n    } else {\n      this._needle = needle;\n    }\n    this._lastChar = needle[needle.length - 1];\n    this._occ = createOccurenceTable(needle);\n  }\n  feed(chunk) {\n    let pos = 0;\n    let tokens;\n    const allTokens = [];\n    while (pos !== chunk.length) {\n      ;\n      [pos, ...tokens] = this._feed(chunk, pos);\n      allTokens.push(...tokens);\n    }\n    return allTokens;\n  }\n  end() {\n    const tail = this._lookbehind;\n    this._lookbehind = new Uint8Array();\n    return tail;\n  }\n  _feed(data, bufPos) {\n    const tokens = [];\n    let pos = -this._lookbehind.length;\n    if (pos < 0) {\n      while (pos < 0 && pos <= data.length - this._needle.length) {\n        const ch = this._charAt(data, pos + this._needle.length - 1);\n        if (ch === this._lastChar && this._memcmp(data, pos, this._needle.length - 1)) {\n          if (pos > -this._lookbehind.length) {\n            tokens.push(this._lookbehind.slice(0, this._lookbehind.length + pos));\n          }\n          tokens.push(MATCH);\n          this._lookbehind = new Uint8Array();\n          return [\n            pos + this._needle.length,\n            ...tokens\n          ];\n        } else {\n          pos += this._occ[ch];\n        }\n      }\n      if (pos < 0) {\n        while (pos < 0 && !this._memcmp(data, pos, data.length - pos)) {\n          pos++;\n        }\n      }\n      if (pos >= 0) {\n        tokens.push(this._lookbehind);\n        this._lookbehind = new Uint8Array();\n      } else {\n        const bytesToCutOff = this._lookbehind.length + pos;\n        if (bytesToCutOff > 0) {\n          tokens.push(this._lookbehind.slice(0, bytesToCutOff));\n          this._lookbehind = this._lookbehind.slice(bytesToCutOff);\n        }\n        this._lookbehind = Uint8Array.from(new Array(this._lookbehind.length + data.length), (_, i) => this._charAt(data, i - this._lookbehind.length));\n        return [\n          data.length,\n          ...tokens\n        ];\n      }\n    }\n    pos += bufPos;\n    while (pos <= data.length - this._needle.length) {\n      const ch = data[pos + this._needle.length - 1];\n      if (ch === this._lastChar && data[pos] === this._needle[0] && jsmemcmp(this._needle, 0, data, pos, this._needle.length - 1)) {\n        if (pos > bufPos) {\n          tokens.push(data.slice(bufPos, pos));\n        }\n        tokens.push(MATCH);\n        return [\n          pos + this._needle.length,\n          ...tokens\n        ];\n      } else {\n        pos += this._occ[ch];\n      }\n    }\n    if (pos < data.length) {\n      while (pos < data.length && (data[pos] !== this._needle[0] || !jsmemcmp(data, pos, this._needle, 0, data.length - pos))) {\n        ++pos;\n      }\n      if (pos < data.length) {\n        this._lookbehind = data.slice(pos);\n      }\n    }\n    if (pos > 0) {\n      tokens.push(data.slice(bufPos, pos < data.length ? pos : data.length));\n    }\n    return [\n      data.length,\n      ...tokens\n    ];\n  }\n  _charAt(data, pos) {\n    if (pos < 0) {\n      return this._lookbehind[this._lookbehind.length + pos];\n    }\n    return data[pos];\n  }\n  _memcmp(data, pos, len) {\n    return jsmemcmp(this._charAt.bind(this, data), pos, this._needle, 0, len);\n  }\n}\nclass ReadableStreamSearch {\n  constructor(needle, _readableStream) {\n    this._readableStream = _readableStream;\n    this._search = new StreamSearch(needle);\n  }\n  async *[Symbol.asyncIterator]() {\n    const reader = this._readableStream.getReader();\n    try {\n      while (true) {\n        const result = await reader.read();\n        if (result.done) {\n          break;\n        }\n        yield* this._search.feed(result.value);\n      }\n      const tail = this._search.end();\n      if (tail.length) {\n        yield tail;\n      }\n    } finally {\n      reader.releaseLock();\n    }\n  }\n}\nconst EOQ = Symbol(\"End of Queue\");\nclass QueueableStreamSearch {\n  constructor(needle) {\n    this._chunksQueue = [];\n    this._closed = false;\n    this._search = new StreamSearch(needle);\n  }\n  push(...chunks) {\n    if (this._closed) {\n      throw new Error(\"cannot call push after close\");\n    }\n    this._chunksQueue.push(...chunks);\n    if (this._notify) {\n      this._notify();\n    }\n  }\n  close() {\n    if (this._closed) {\n      throw new Error(\"close was already called\");\n    }\n    this._closed = true;\n    this._chunksQueue.push(EOQ);\n    if (this._notify) {\n      this._notify();\n    }\n  }\n  async *[Symbol.asyncIterator]() {\n    while (true) {\n      let chunk;\n      while (!(chunk = this._chunksQueue.shift())) {\n        await new Promise((resolve) => this._notify = resolve);\n        this._notify = void 0;\n      }\n      if (chunk === EOQ) {\n        break;\n      }\n      yield* this._search.feed(chunk);\n    }\n    const tail = this._search.end();\n    if (tail.length) {\n      yield tail;\n    }\n  }\n}\nfunction splitChunks(chunks, needle) {\n  const search = new StreamSearch(needle);\n  const outchunks = [[]];\n  for (const chunk of chunks) {\n    for (const token of search.feed(chunk)) {\n      if (token === MATCH) {\n        outchunks.push([]);\n      } else {\n        outchunks[outchunks.length - 1].push(token);\n      }\n    }\n  }\n  const end = search.end();\n  outchunks[outchunks.length - 1].push(end);\n  return outchunks.map((chunks2) => utils.mergeArrays(...chunks2));\n}\nfunction split(buf, needle) {\n  return splitChunks([buf], needle);\n}\nasync function* chunksIterator(iter) {\n  let chunks = [];\n  for await (const value of iter) {\n    if (value === MATCH) {\n      yield chunks;\n      chunks = [];\n    } else {\n      chunks.push(value);\n    }\n  }\n  yield chunks;\n}\nasync function* stringIterator(iter) {\n  for await (const chunk of chunksIterator(iter)) {\n    yield chunk.map(utils.arrayToString).join(\"\");\n  }\n}\nasync function allStrings(iter) {\n  const segments = [];\n  for await (const value of stringIterator(iter)) {\n    segments.push(value);\n  }\n  return segments;\n}\nasync function* arrayIterator(iter) {\n  for await (const chunk of chunksIterator(iter)) {\n    yield utils.mergeArrays(...chunk);\n  }\n}\nexports.MATCH = MATCH;\nexports.QueueableStreamSearch = QueueableStreamSearch;\nexports.ReadableStreamSearch = ReadableStreamSearch;\nexports.StreamSearch = StreamSearch;\nexports.allStrings = allStrings;\nexports.arrayIterator = arrayIterator;\nexports.chunksIterator = chunksIterator;\nexports.split = split;\nexports.splitChunks = splitChunks;\nexports.stringIterator = stringIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringToArray(s) {\n  const utf8 = unescape(encodeURIComponent(s));\n  return Uint8Array.from(utf8, (_, i) => utf8.charCodeAt(i));\n}\nfunction arrayToString(a) {\n  const utf8 = String.fromCharCode.apply(null, a);\n  return decodeURIComponent(escape(utf8));\n}\nfunction mergeArrays(...arrays) {\n  const out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0));\n  let offset = 0;\n  for (const arr of arrays) {\n    out.set(arr, offset);\n    offset += arr.length;\n  }\n  return out;\n}\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.arrayToString = arrayToString;\nexports.arraysEqual = arraysEqual;\nexports.mergeArrays = mergeArrays;\nexports.stringToArray = stringToArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventTargetShim = require(\"event-target-shim\");\nclass AbortSignal extends eventTargetShim.EventTarget {\n  /**\n   * AbortSignal cannot be constructed directly.\n   */\n  constructor() {\n    super();\n    throw new TypeError(\"AbortSignal cannot be constructed directly\");\n  }\n  /**\n   * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n   */\n  get aborted() {\n    const aborted = abortedFlags.get(this);\n    if (typeof aborted !== \"boolean\") {\n      throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n    }\n    return aborted;\n  }\n}\neventTargetShim.defineEventAttribute(AbortSignal.prototype, \"abort\");\nfunction createAbortSignal() {\n  const signal = Object.create(AbortSignal.prototype);\n  eventTargetShim.EventTarget.call(signal);\n  abortedFlags.set(signal, false);\n  return signal;\n}\nfunction abortSignal(signal) {\n  if (abortedFlags.get(signal) !== false) {\n    return;\n  }\n  abortedFlags.set(signal, true);\n  signal.dispatchEvent({ type: \"abort\" });\n}\nconst abortedFlags = /* @__PURE__ */ new WeakMap();\nObject.defineProperties(AbortSignal.prototype, {\n  aborted: { enumerable: true }\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n  Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n    configurable: true,\n    value: \"AbortSignal\"\n  });\n}\nclass AbortController {\n  /**\n   * Initialize this controller.\n   */\n  constructor() {\n    signals.set(this, createAbortSignal());\n  }\n  /**\n   * Returns the `AbortSignal` object associated with this object.\n   */\n  get signal() {\n    return getSignal(this);\n  }\n  /**\n   * Abort and signal to any observers that the associated activity is to be aborted.\n   */\n  abort() {\n    abortSignal(getSignal(this));\n  }\n}\nconst signals = /* @__PURE__ */ new WeakMap();\nfunction getSignal(controller) {\n  const signal = signals.get(controller);\n  if (signal == null) {\n    throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n  }\n  return signal;\n}\nObject.defineProperties(AbortController.prototype, {\n  signal: { enumerable: true },\n  abort: { enumerable: true }\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n  Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n    configurable: true,\n    value: \"AbortController\"\n  });\n}\nexports.AbortController = AbortController;\nexports.AbortSignal = AbortSignal;\nexports.default = AbortController;\nmodule.exports = AbortController;\nmodule.exports.AbortController = module.exports[\"default\"] = AbortController;\nmodule.exports.AbortSignal = AbortSignal;\n","var crypto = require(\"crypto\");\nexports.sign = function(val, secret) {\n  if (\"string\" != typeof val)\n    throw new TypeError(\"Cookie value must be provided as a string.\");\n  if (null == secret)\n    throw new TypeError(\"Secret key must be provided.\");\n  return val + \".\" + crypto.createHmac(\"sha256\", secret).update(val).digest(\"base64\").replace(/\\=+$/, \"\");\n};\nexports.unsign = function(input, secret) {\n  if (\"string\" != typeof input)\n    throw new TypeError(\"Signed cookie string must be provided.\");\n  if (null == secret)\n    throw new TypeError(\"Secret key must be provided.\");\n  var tentativeValue = input.slice(0, input.lastIndexOf(\".\")), expectedInput = exports.sign(tentativeValue, secret), expectedBuffer = Buffer.from(expectedInput), inputBuffer = Buffer.from(input);\n  return expectedBuffer.length === inputBuffer.length && crypto.timingSafeEqual(expectedBuffer, inputBuffer) ? tentativeValue : false;\n};\n","\"use strict\";\nfunction dataUriToBuffer(uri) {\n  if (!/^data:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n  uri = uri.replace(/\\r?\\n/g, \"\");\n  const firstComma = uri.indexOf(\",\");\n  if (firstComma === -1 || firstComma <= 4) {\n    throw new TypeError(\"malformed data: URI\");\n  }\n  const meta = uri.substring(5, firstComma).split(\";\");\n  let charset = \"\";\n  let base64 = false;\n  const type = meta[0] || \"text/plain\";\n  let typeFull = type;\n  for (let i = 1; i < meta.length; i++) {\n    if (meta[i] === \"base64\") {\n      base64 = true;\n    } else {\n      typeFull += `;${meta[i]}`;\n      if (meta[i].indexOf(\"charset=\") === 0) {\n        charset = meta[i].substring(8);\n      }\n    }\n  }\n  if (!meta[0] && !charset.length) {\n    typeFull += \";charset=US-ASCII\";\n    charset = \"US-ASCII\";\n  }\n  const encoding = base64 ? \"base64\" : \"ascii\";\n  const data = unescape(uri.substring(firstComma + 1));\n  const buffer = Buffer.from(data, encoding);\n  buffer.type = type;\n  buffer.typeFull = typeFull;\n  buffer.charset = charset;\n  return buffer;\n}\nmodule.exports = dataUriToBuffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst privateData = /* @__PURE__ */ new WeakMap();\nconst wrappers = /* @__PURE__ */ new WeakMap();\nfunction pd(event) {\n  const retv = privateData.get(event);\n  console.assert(\n    retv != null,\n    \"'this' is expected an Event object, but got\",\n    event\n  );\n  return retv;\n}\nfunction setCancelFlag(data) {\n  if (data.passiveListener != null) {\n    if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n      console.error(\n        \"Unable to preventDefault inside passive event listener invocation.\",\n        data.passiveListener\n      );\n    }\n    return;\n  }\n  if (!data.event.cancelable) {\n    return;\n  }\n  data.canceled = true;\n  if (typeof data.event.preventDefault === \"function\") {\n    data.event.preventDefault();\n  }\n}\nfunction Event(eventTarget, event) {\n  privateData.set(this, {\n    eventTarget,\n    event,\n    eventPhase: 2,\n    currentTarget: eventTarget,\n    canceled: false,\n    stopped: false,\n    immediateStopped: false,\n    passiveListener: null,\n    timeStamp: event.timeStamp || Date.now()\n  });\n  Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n  const keys = Object.keys(event);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (!(key in this)) {\n      Object.defineProperty(this, key, defineRedirectDescriptor(key));\n    }\n  }\n}\nEvent.prototype = {\n  /**\n   * The type of this event.\n   * @type {string}\n   */\n  get type() {\n    return pd(this).event.type;\n  },\n  /**\n   * The target of this event.\n   * @type {EventTarget}\n   */\n  get target() {\n    return pd(this).eventTarget;\n  },\n  /**\n   * The target of this event.\n   * @type {EventTarget}\n   */\n  get currentTarget() {\n    return pd(this).currentTarget;\n  },\n  /**\n   * @returns {EventTarget[]} The composed path of this event.\n   */\n  composedPath() {\n    const currentTarget = pd(this).currentTarget;\n    if (currentTarget == null) {\n      return [];\n    }\n    return [currentTarget];\n  },\n  /**\n   * Constant of NONE.\n   * @type {number}\n   */\n  get NONE() {\n    return 0;\n  },\n  /**\n   * Constant of CAPTURING_PHASE.\n   * @type {number}\n   */\n  get CAPTURING_PHASE() {\n    return 1;\n  },\n  /**\n   * Constant of AT_TARGET.\n   * @type {number}\n   */\n  get AT_TARGET() {\n    return 2;\n  },\n  /**\n   * Constant of BUBBLING_PHASE.\n   * @type {number}\n   */\n  get BUBBLING_PHASE() {\n    return 3;\n  },\n  /**\n   * The target of this event.\n   * @type {number}\n   */\n  get eventPhase() {\n    return pd(this).eventPhase;\n  },\n  /**\n   * Stop event bubbling.\n   * @returns {void}\n   */\n  stopPropagation() {\n    const data = pd(this);\n    data.stopped = true;\n    if (typeof data.event.stopPropagation === \"function\") {\n      data.event.stopPropagation();\n    }\n  },\n  /**\n   * Stop event bubbling.\n   * @returns {void}\n   */\n  stopImmediatePropagation() {\n    const data = pd(this);\n    data.stopped = true;\n    data.immediateStopped = true;\n    if (typeof data.event.stopImmediatePropagation === \"function\") {\n      data.event.stopImmediatePropagation();\n    }\n  },\n  /**\n   * The flag to be bubbling.\n   * @type {boolean}\n   */\n  get bubbles() {\n    return Boolean(pd(this).event.bubbles);\n  },\n  /**\n   * The flag to be cancelable.\n   * @type {boolean}\n   */\n  get cancelable() {\n    return Boolean(pd(this).event.cancelable);\n  },\n  /**\n   * Cancel this event.\n   * @returns {void}\n   */\n  preventDefault() {\n    setCancelFlag(pd(this));\n  },\n  /**\n   * The flag to indicate cancellation state.\n   * @type {boolean}\n   */\n  get defaultPrevented() {\n    return pd(this).canceled;\n  },\n  /**\n   * The flag to be composed.\n   * @type {boolean}\n   */\n  get composed() {\n    return Boolean(pd(this).event.composed);\n  },\n  /**\n   * The unix time of this event.\n   * @type {number}\n   */\n  get timeStamp() {\n    return pd(this).timeStamp;\n  },\n  /**\n   * The target of this event.\n   * @type {EventTarget}\n   * @deprecated\n   */\n  get srcElement() {\n    return pd(this).eventTarget;\n  },\n  /**\n   * The flag to stop event bubbling.\n   * @type {boolean}\n   * @deprecated\n   */\n  get cancelBubble() {\n    return pd(this).stopped;\n  },\n  set cancelBubble(value) {\n    if (!value) {\n      return;\n    }\n    const data = pd(this);\n    data.stopped = true;\n    if (typeof data.event.cancelBubble === \"boolean\") {\n      data.event.cancelBubble = true;\n    }\n  },\n  /**\n   * The flag to indicate cancellation state.\n   * @type {boolean}\n   * @deprecated\n   */\n  get returnValue() {\n    return !pd(this).canceled;\n  },\n  set returnValue(value) {\n    if (!value) {\n      setCancelFlag(pd(this));\n    }\n  },\n  /**\n   * Initialize this event object. But do nothing under event dispatching.\n   * @param {string} type The event type.\n   * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n   * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n   * @deprecated\n   */\n  initEvent() {\n  }\n};\nObject.defineProperty(Event.prototype, \"constructor\", {\n  value: Event,\n  configurable: true,\n  writable: true\n});\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n  Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n  wrappers.set(window.Event.prototype, Event);\n}\nfunction defineRedirectDescriptor(key) {\n  return {\n    get() {\n      return pd(this).event[key];\n    },\n    set(value) {\n      pd(this).event[key] = value;\n    },\n    configurable: true,\n    enumerable: true\n  };\n}\nfunction defineCallDescriptor(key) {\n  return {\n    value() {\n      const event = pd(this).event;\n      return event[key].apply(event, arguments);\n    },\n    configurable: true,\n    enumerable: true\n  };\n}\nfunction defineWrapper(BaseEvent, proto) {\n  const keys = Object.keys(proto);\n  if (keys.length === 0) {\n    return BaseEvent;\n  }\n  function CustomEvent(eventTarget, event) {\n    BaseEvent.call(this, eventTarget, event);\n  }\n  CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n    constructor: { value: CustomEvent, configurable: true, writable: true }\n  });\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (!(key in BaseEvent.prototype)) {\n      const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n      const isFunc = typeof descriptor.value === \"function\";\n      Object.defineProperty(\n        CustomEvent.prototype,\n        key,\n        isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key)\n      );\n    }\n  }\n  return CustomEvent;\n}\nfunction getWrapper(proto) {\n  if (proto == null || proto === Object.prototype) {\n    return Event;\n  }\n  let wrapper = wrappers.get(proto);\n  if (wrapper == null) {\n    wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n    wrappers.set(proto, wrapper);\n  }\n  return wrapper;\n}\nfunction wrapEvent(eventTarget, event) {\n  const Wrapper = getWrapper(Object.getPrototypeOf(event));\n  return new Wrapper(eventTarget, event);\n}\nfunction isStopped(event) {\n  return pd(event).immediateStopped;\n}\nfunction setEventPhase(event, eventPhase) {\n  pd(event).eventPhase = eventPhase;\n}\nfunction setCurrentTarget(event, currentTarget) {\n  pd(event).currentTarget = currentTarget;\n}\nfunction setPassiveListener(event, passiveListener) {\n  pd(event).passiveListener = passiveListener;\n}\nconst listenersMap = /* @__PURE__ */ new WeakMap();\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\nfunction isObject(x) {\n  return x !== null && typeof x === \"object\";\n}\nfunction getListeners(eventTarget) {\n  const listeners = listenersMap.get(eventTarget);\n  if (listeners == null) {\n    throw new TypeError(\n      \"'this' is expected an EventTarget object, but got another value.\"\n    );\n  }\n  return listeners;\n}\nfunction defineEventAttributeDescriptor(eventName) {\n  return {\n    get() {\n      const listeners = getListeners(this);\n      let node = listeners.get(eventName);\n      while (node != null) {\n        if (node.listenerType === ATTRIBUTE) {\n          return node.listener;\n        }\n        node = node.next;\n      }\n      return null;\n    },\n    set(listener) {\n      if (typeof listener !== \"function\" && !isObject(listener)) {\n        listener = null;\n      }\n      const listeners = getListeners(this);\n      let prev = null;\n      let node = listeners.get(eventName);\n      while (node != null) {\n        if (node.listenerType === ATTRIBUTE) {\n          if (prev !== null) {\n            prev.next = node.next;\n          } else if (node.next !== null) {\n            listeners.set(eventName, node.next);\n          } else {\n            listeners.delete(eventName);\n          }\n        } else {\n          prev = node;\n        }\n        node = node.next;\n      }\n      if (listener !== null) {\n        const newNode = {\n          listener,\n          listenerType: ATTRIBUTE,\n          passive: false,\n          once: false,\n          next: null\n        };\n        if (prev === null) {\n          listeners.set(eventName, newNode);\n        } else {\n          prev.next = newNode;\n        }\n      }\n    },\n    configurable: true,\n    enumerable: true\n  };\n}\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n  Object.defineProperty(\n    eventTargetPrototype,\n    `on${eventName}`,\n    defineEventAttributeDescriptor(eventName)\n  );\n}\nfunction defineCustomEventTarget(eventNames) {\n  function CustomEventTarget() {\n    EventTarget.call(this);\n  }\n  CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n    constructor: {\n      value: CustomEventTarget,\n      configurable: true,\n      writable: true\n    }\n  });\n  for (let i = 0; i < eventNames.length; ++i) {\n    defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n  }\n  return CustomEventTarget;\n}\nfunction EventTarget() {\n  if (this instanceof EventTarget) {\n    listenersMap.set(this, /* @__PURE__ */ new Map());\n    return;\n  }\n  if (arguments.length === 1 && Array.isArray(arguments[0])) {\n    return defineCustomEventTarget(arguments[0]);\n  }\n  if (arguments.length > 0) {\n    const types = new Array(arguments.length);\n    for (let i = 0; i < arguments.length; ++i) {\n      types[i] = arguments[i];\n    }\n    return defineCustomEventTarget(types);\n  }\n  throw new TypeError(\"Cannot call a class as a function\");\n}\nEventTarget.prototype = {\n  /**\n   * Add a given listener to this event target.\n   * @param {string} eventName The event name to add.\n   * @param {Function} listener The listener to add.\n   * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n   * @returns {void}\n   */\n  addEventListener(eventName, listener, options) {\n    if (listener == null) {\n      return;\n    }\n    if (typeof listener !== \"function\" && !isObject(listener)) {\n      throw new TypeError(\"'listener' should be a function or an object.\");\n    }\n    const listeners = getListeners(this);\n    const optionsIsObj = isObject(options);\n    const capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);\n    const listenerType = capture ? CAPTURE : BUBBLE;\n    const newNode = {\n      listener,\n      listenerType,\n      passive: optionsIsObj && Boolean(options.passive),\n      once: optionsIsObj && Boolean(options.once),\n      next: null\n    };\n    let node = listeners.get(eventName);\n    if (node === void 0) {\n      listeners.set(eventName, newNode);\n      return;\n    }\n    let prev = null;\n    while (node != null) {\n      if (node.listener === listener && node.listenerType === listenerType) {\n        return;\n      }\n      prev = node;\n      node = node.next;\n    }\n    prev.next = newNode;\n  },\n  /**\n   * Remove a given listener from this event target.\n   * @param {string} eventName The event name to remove.\n   * @param {Function} listener The listener to remove.\n   * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n   * @returns {void}\n   */\n  removeEventListener(eventName, listener, options) {\n    if (listener == null) {\n      return;\n    }\n    const listeners = getListeners(this);\n    const capture = isObject(options) ? Boolean(options.capture) : Boolean(options);\n    const listenerType = capture ? CAPTURE : BUBBLE;\n    let prev = null;\n    let node = listeners.get(eventName);\n    while (node != null) {\n      if (node.listener === listener && node.listenerType === listenerType) {\n        if (prev !== null) {\n          prev.next = node.next;\n        } else if (node.next !== null) {\n          listeners.set(eventName, node.next);\n        } else {\n          listeners.delete(eventName);\n        }\n        return;\n      }\n      prev = node;\n      node = node.next;\n    }\n  },\n  /**\n   * Dispatch a given event.\n   * @param {Event|{type:string}} event The event to dispatch.\n   * @returns {boolean} `false` if canceled.\n   */\n  dispatchEvent(event) {\n    if (event == null || typeof event.type !== \"string\") {\n      throw new TypeError('\"event.type\" should be a string.');\n    }\n    const listeners = getListeners(this);\n    const eventName = event.type;\n    let node = listeners.get(eventName);\n    if (node == null) {\n      return true;\n    }\n    const wrappedEvent = wrapEvent(this, event);\n    let prev = null;\n    while (node != null) {\n      if (node.once) {\n        if (prev !== null) {\n          prev.next = node.next;\n        } else if (node.next !== null) {\n          listeners.set(eventName, node.next);\n        } else {\n          listeners.delete(eventName);\n        }\n      } else {\n        prev = node;\n      }\n      setPassiveListener(\n        wrappedEvent,\n        node.passive ? node.listener : null\n      );\n      if (typeof node.listener === \"function\") {\n        try {\n          node.listener.call(this, wrappedEvent);\n        } catch (err) {\n          if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n            console.error(err);\n          }\n        }\n      } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === \"function\") {\n        node.listener.handleEvent(wrappedEvent);\n      }\n      if (isStopped(wrappedEvent)) {\n        break;\n      }\n      node = node.next;\n    }\n    setPassiveListener(wrappedEvent, null);\n    setEventPhase(wrappedEvent, 0);\n    setCurrentTarget(wrappedEvent, null);\n    return !wrappedEvent.defaultPrevented;\n  }\n};\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n  value: EventTarget,\n  configurable: true,\n  writable: true\n});\nif (typeof window !== \"undefined\" && typeof window.EventTarget !== \"undefined\") {\n  Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\nexports.defineEventAttribute = defineEventAttribute;\nexports.EventTarget = EventTarget;\nexports.default = EventTarget;\nmodule.exports = EventTarget;\nmodule.exports.EventTarget = module.exports[\"default\"] = EventTarget;\nmodule.exports.defineEventAttribute = defineEventAttribute;\n","\"use strict\";\nvar e = { usingClientEntryPoint: false, Events: null, Dispatcher: { current: null } };\nfunction f(b, a) {\n  if (\"font\" === b)\n    return \"\";\n  if (\"string\" === typeof a)\n    return \"use-credentials\" === a ? a : \"\";\n}\nvar h = e.Dispatcher;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = e;\nexports.preconnect = function(b, a) {\n  var c = h.current;\n  c && \"string\" === typeof b && (a ? (a = a.crossOrigin, a = \"string\" === typeof a ? \"use-credentials\" === a ? a : \"\" : void 0) : a = null, c.preconnect(b, a));\n};\nexports.prefetchDNS = function(b) {\n  var a = h.current;\n  a && \"string\" === typeof b && a.prefetchDNS(b);\n};\nexports.preinit = function(b, a) {\n  var c = h.current;\n  if (c && \"string\" === typeof b && a && \"string\" === typeof a.as) {\n    var d = a.as, g = f(d, a.crossOrigin), k = \"string\" === typeof a.integrity ? a.integrity : void 0, l = \"string\" === typeof a.fetchPriority ? a.fetchPriority : void 0;\n    \"style\" === d ? c.preinitStyle(b, \"string\" === typeof a.precedence ? a.precedence : void 0, { crossOrigin: g, integrity: k, fetchPriority: l }) : \"script\" === d && c.preinitScript(b, { crossOrigin: g, integrity: k, fetchPriority: l, nonce: \"string\" === typeof a.nonce ? a.nonce : void 0 });\n  }\n};\nexports.preinitModule = function(b, a) {\n  var c = h.current;\n  if (c && \"string\" === typeof b)\n    if (\"object\" === typeof a && null !== a) {\n      if (null == a.as || \"script\" === a.as) {\n        var d = f(a.as, a.crossOrigin);\n        c.preinitModuleScript(b, { crossOrigin: d, integrity: \"string\" === typeof a.integrity ? a.integrity : void 0, nonce: \"string\" === typeof a.nonce ? a.nonce : void 0 });\n      }\n    } else\n      null == a && c.preinitModuleScript(b);\n};\nexports.preload = function(b, a) {\n  var c = h.current;\n  if (c && \"string\" === typeof b && \"object\" === typeof a && null !== a && \"string\" === typeof a.as) {\n    var d = a.as, g = f(d, a.crossOrigin);\n    c.preload(b, d, { crossOrigin: g, integrity: \"string\" === typeof a.integrity ? a.integrity : void 0, nonce: \"string\" === typeof a.nonce ? a.nonce : void 0, type: \"string\" === typeof a.type ? a.type : void 0, fetchPriority: \"string\" === typeof a.fetchPriority ? a.fetchPriority : void 0, referrerPolicy: \"string\" === typeof a.referrerPolicy ? a.referrerPolicy : void 0, imageSrcSet: \"string\" === typeof a.imageSrcSet ? a.imageSrcSet : void 0, imageSizes: \"string\" === typeof a.imageSizes ? a.imageSizes : void 0 });\n  }\n};\nexports.preloadModule = function(b, a) {\n  var c = h.current;\n  if (c && \"string\" === typeof b)\n    if (a) {\n      var d = f(a.as, a.crossOrigin);\n      c.preloadModule(b, { as: \"string\" === typeof a.as && \"script\" !== a.as ? a.as : void 0, crossOrigin: d, integrity: \"string\" === typeof a.integrity ? a.integrity : void 0 });\n    } else\n      c.preloadModule(b);\n};\n","\"use strict\";\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./cjs/react-dom.shared-subset.production.min.js\");\n} else {\n  module.exports = require(\"./cjs/react-dom.shared-subset.development.js\");\n}\n","\"use strict\";\nvar aa = require(\"util\");\nrequire(\"crypto\");\nvar ba = require(\"async_hooks\"), ca = require(\"react\"), da = require(\"react-dom\"), l = null, m = 0, p = true;\nfunction q(a, b) {\n  a = a.write(b);\n  p = p && a;\n}\nfunction r(a, b) {\n  if (\"string\" === typeof b) {\n    if (0 !== b.length)\n      if (2048 < 3 * b.length)\n        0 < m && (q(a, l.subarray(0, m)), l = new Uint8Array(2048), m = 0), q(a, ea.encode(b));\n      else {\n        var d = l;\n        0 < m && (d = l.subarray(m));\n        d = ea.encodeInto(b, d);\n        var c = d.read;\n        m += d.written;\n        c < b.length && (q(a, l.subarray(0, m)), l = new Uint8Array(2048), m = ea.encodeInto(b.slice(c), l).written);\n        2048 === m && (q(a, l), l = new Uint8Array(2048), m = 0);\n      }\n  } else\n    0 !== b.byteLength && (2048 < b.byteLength ? (0 < m && (q(a, l.subarray(0, m)), l = new Uint8Array(2048), m = 0), q(a, b)) : (d = l.length - m, d < b.byteLength && (0 === d ? q(a, l) : (l.set(b.subarray(0, d), m), m += d, q(a, l), b = b.subarray(d)), l = new Uint8Array(2048), m = 0), l.set(b, m), m += b.byteLength, 2048 === m && (q(a, l), l = new Uint8Array(2048), m = 0)));\n  return p;\n}\nvar ea = new aa.TextEncoder(), t = Symbol.for(\"react.client.reference\"), v = Symbol.for(\"react.server.reference\");\nfunction x(a, b, d) {\n  return Object.defineProperties(a, { $$typeof: { value: t }, $$id: { value: b }, $$async: { value: d } });\n}\nvar fa = Function.prototype.bind, ha = Array.prototype.slice;\nfunction ia() {\n  var a = fa.apply(this, arguments);\n  if (this.$$typeof === v) {\n    var b = ha.call(arguments, 1);\n    a.$$typeof = v;\n    a.$$id = this.$$id;\n    a.$$bound = this.$$bound ? this.$$bound.concat(b) : b;\n  }\n  return a;\n}\nvar ja = Promise.prototype, ka = { get: function(a, b) {\n  switch (b) {\n    case \"$$typeof\":\n      return a.$$typeof;\n    case \"$$id\":\n      return a.$$id;\n    case \"$$async\":\n      return a.$$async;\n    case \"name\":\n      return a.name;\n    case \"displayName\":\n      return;\n    case \"defaultProps\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case \"Provider\":\n      throw Error(\"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\");\n  }\n  throw Error(\"Cannot access \" + (String(a.name) + \".\" + String(b)) + \" on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.\");\n}, set: function() {\n  throw Error(\"Cannot assign to a client module from a server module.\");\n} };\nfunction la(a, b) {\n  switch (b) {\n    case \"$$typeof\":\n      return a.$$typeof;\n    case \"$$id\":\n      return a.$$id;\n    case \"$$async\":\n      return a.$$async;\n    case \"name\":\n      return a.name;\n    case \"defaultProps\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case \"__esModule\":\n      var d = a.$$id;\n      a.default = x(function() {\n        throw Error(\"Attempted to call the default export of \" + d + \" from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\");\n      }, a.$$id + \"#\", a.$$async);\n      return true;\n    case \"then\":\n      if (a.then)\n        return a.then;\n      if (a.$$async)\n        return;\n      var c = x({}, a.$$id, true), e = new Proxy(c, ma);\n      a.status = \"fulfilled\";\n      a.value = e;\n      return a.then = x(function(f) {\n        return Promise.resolve(f(e));\n      }, a.$$id + \"#then\", false);\n  }\n  c = a[b];\n  c || (c = x(function() {\n    throw Error(\"Attempted to call \" + String(b) + \"() from the server but \" + String(b) + \" is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\");\n  }, a.$$id + \"#\" + b, a.$$async), Object.defineProperty(c, \"name\", { value: b }), c = a[b] = new Proxy(c, ka));\n  return c;\n}\nvar ma = { get: function(a, b) {\n  return la(a, b);\n}, getOwnPropertyDescriptor: function(a, b) {\n  var d = Object.getOwnPropertyDescriptor(a, b);\n  d || (d = { value: la(a, b), writable: false, configurable: false, enumerable: false }, Object.defineProperty(a, b, d));\n  return d;\n}, getPrototypeOf: function() {\n  return ja;\n}, set: function() {\n  throw Error(\"Cannot assign to a client module from a server module.\");\n} }, ua = { prefetchDNS: na, preconnect: oa, preload: pa, preloadModule: qa, preinitStyle: ra, preinitScript: sa, preinitModuleScript: ta };\nfunction na(a) {\n  if (\"string\" === typeof a && a) {\n    var b = y();\n    if (b) {\n      var d = b.hints, c = \"D|\" + a;\n      d.has(c) || (d.add(c), z(b, \"D\", a));\n    }\n  }\n}\nfunction oa(a, b) {\n  if (\"string\" === typeof a) {\n    var d = y();\n    if (d) {\n      var c = d.hints, e = \"C|\" + (null == b ? \"null\" : b) + \"|\" + a;\n      c.has(e) || (c.add(e), \"string\" === typeof b ? z(d, \"C\", [a, b]) : z(d, \"C\", a));\n    }\n  }\n}\nfunction pa(a, b, d) {\n  if (\"string\" === typeof a) {\n    var c = y();\n    if (c) {\n      var e = c.hints, f = \"L\";\n      if (\"image\" === b && d) {\n        var g = d.imageSrcSet, h = d.imageSizes, k = \"\";\n        \"string\" === typeof g && \"\" !== g ? (k += \"[\" + g + \"]\", \"string\" === typeof h && (k += \"[\" + h + \"]\")) : k += \"[][]\" + a;\n        f += \"[image]\" + k;\n      } else\n        f += \"[\" + b + \"]\" + a;\n      e.has(f) || (e.add(f), (d = A(d)) ? z(c, \"L\", [a, b, d]) : z(c, \"L\", [a, b]));\n    }\n  }\n}\nfunction qa(a, b) {\n  if (\"string\" === typeof a) {\n    var d = y();\n    if (d) {\n      var c = d.hints, e = \"m|\" + a;\n      if (!c.has(e))\n        return c.add(e), (b = A(b)) ? z(d, \"m\", [a, b]) : z(d, \"m\", a);\n    }\n  }\n}\nfunction ra(a, b, d) {\n  if (\"string\" === typeof a) {\n    var c = y();\n    if (c) {\n      var e = c.hints, f = \"S|\" + a;\n      if (!e.has(f))\n        return e.add(f), (d = A(d)) ? z(c, \"S\", [a, \"string\" === typeof b ? b : 0, d]) : \"string\" === typeof b ? z(c, \"S\", [a, b]) : z(c, \"S\", a);\n    }\n  }\n}\nfunction sa(a, b) {\n  if (\"string\" === typeof a) {\n    var d = y();\n    if (d) {\n      var c = d.hints, e = \"X|\" + a;\n      if (!c.has(e))\n        return c.add(e), (b = A(b)) ? z(d, \"X\", [a, b]) : z(d, \"X\", a);\n    }\n  }\n}\nfunction ta(a, b) {\n  if (\"string\" === typeof a) {\n    var d = y();\n    if (d) {\n      var c = d.hints, e = \"M|\" + a;\n      if (!c.has(e))\n        return c.add(e), (b = A(b)) ? z(d, \"M\", [a, b]) : z(d, \"M\", a);\n    }\n  }\n}\nfunction A(a) {\n  if (null == a)\n    return null;\n  var b = false, d = {}, c;\n  for (c in a)\n    null != a[c] && (b = true, d[c] = a[c]);\n  return b ? d : null;\n}\nvar va = da.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Dispatcher, wa = new ba.AsyncLocalStorage(), B = Symbol.for(\"react.element\"), xa = Symbol.for(\"react.fragment\"), ya = Symbol.for(\"react.provider\"), za = Symbol.for(\"react.server_context\"), Aa = Symbol.for(\"react.forward_ref\"), Ba = Symbol.for(\"react.suspense\"), Ca = Symbol.for(\"react.suspense_list\"), Da = Symbol.for(\"react.memo\"), C = Symbol.for(\"react.lazy\"), Ea = Symbol.for(\"react.default_value\"), Fa = Symbol.for(\"react.memo_cache_sentinel\"), Ga = Symbol.for(\"react.postpone\"), Ha = Symbol.iterator, D = null;\nfunction Ia(a, b) {\n  if (a !== b) {\n    a.context._currentValue = a.parentValue;\n    a = a.parent;\n    var d = b.parent;\n    if (null === a) {\n      if (null !== d)\n        throw Error(\"The stacks must reach the root at the same time. This is a bug in React.\");\n    } else {\n      if (null === d)\n        throw Error(\"The stacks must reach the root at the same time. This is a bug in React.\");\n      Ia(a, d);\n      b.context._currentValue = b.value;\n    }\n  }\n}\nfunction Ja(a) {\n  a.context._currentValue = a.parentValue;\n  a = a.parent;\n  null !== a && Ja(a);\n}\nfunction Ka(a) {\n  var b = a.parent;\n  null !== b && Ka(b);\n  a.context._currentValue = a.value;\n}\nfunction La(a, b) {\n  a.context._currentValue = a.parentValue;\n  a = a.parent;\n  if (null === a)\n    throw Error(\"The depth must equal at least at zero before reaching the root. This is a bug in React.\");\n  a.depth === b.depth ? Ia(a, b) : La(a, b);\n}\nfunction Ma(a, b) {\n  var d = b.parent;\n  if (null === d)\n    throw Error(\"The depth must equal at least at zero before reaching the root. This is a bug in React.\");\n  a.depth === d.depth ? Ia(a, d) : Ma(a, d);\n  b.context._currentValue = b.value;\n}\nfunction Na(a) {\n  var b = D;\n  b !== a && (null === b ? Ka(a) : null === a ? Ja(b) : b.depth === a.depth ? Ia(b, a) : b.depth > a.depth ? La(b, a) : Ma(b, a), D = a);\n}\nfunction Oa(a, b) {\n  var d = a._currentValue;\n  a._currentValue = b;\n  var c = D;\n  return D = a = { parent: c, depth: null === c ? 0 : c.depth + 1, context: a, parentValue: d, value: b };\n}\nvar Pa = Error(\"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`\");\nfunction Qa() {\n}\nfunction Ra(a, b, d) {\n  d = a[d];\n  void 0 === d ? a.push(b) : d !== b && (b.then(Qa, Qa), b = d);\n  switch (b.status) {\n    case \"fulfilled\":\n      return b.value;\n    case \"rejected\":\n      throw b.reason;\n    default:\n      if (\"string\" !== typeof b.status)\n        switch (a = b, a.status = \"pending\", a.then(function(c) {\n          if (\"pending\" === b.status) {\n            var e = b;\n            e.status = \"fulfilled\";\n            e.value = c;\n          }\n        }, function(c) {\n          if (\"pending\" === b.status) {\n            var e = b;\n            e.status = \"rejected\";\n            e.reason = c;\n          }\n        }), b.status) {\n          case \"fulfilled\":\n            return b.value;\n          case \"rejected\":\n            throw b.reason;\n        }\n      Sa = b;\n      throw Pa;\n  }\n}\nvar Sa = null;\nfunction Ta() {\n  if (null === Sa)\n    throw Error(\"Expected a suspended thenable. This is a bug in React. Please file an issue.\");\n  var a = Sa;\n  Sa = null;\n  return a;\n}\nvar E = null, Ua = 0, F = null;\nfunction Va() {\n  var a = F;\n  F = null;\n  return a;\n}\nfunction Wa(a) {\n  return a._currentValue;\n}\nvar $a = { useMemo: function(a) {\n  return a();\n}, useCallback: function(a) {\n  return a;\n}, useDebugValue: function() {\n}, useDeferredValue: G, useTransition: G, readContext: Wa, useContext: Wa, useReducer: G, useRef: G, useState: G, useInsertionEffect: G, useLayoutEffect: G, useImperativeHandle: G, useEffect: G, useId: Xa, useSyncExternalStore: G, useCacheRefresh: function() {\n  return Ya;\n}, useMemoCache: function(a) {\n  for (var b = Array(a), d = 0; d < a; d++)\n    b[d] = Fa;\n  return b;\n}, use: Za };\nfunction G() {\n  throw Error(\"This Hook is not supported in Server Components.\");\n}\nfunction Ya() {\n  throw Error(\"Refreshing the cache is not supported in Server Components.\");\n}\nfunction Xa() {\n  if (null === E)\n    throw Error(\"useId can only be used while React is rendering\");\n  var a = E.identifierCount++;\n  return \":\" + E.identifierPrefix + \"S\" + a.toString(32) + \":\";\n}\nfunction Za(a) {\n  if (null !== a && \"object\" === typeof a || \"function\" === typeof a) {\n    if (\"function\" === typeof a.then) {\n      var b = Ua;\n      Ua += 1;\n      null === F && (F = []);\n      return Ra(F, a, b);\n    }\n    if (a.$$typeof === za)\n      return a._currentValue;\n  }\n  throw Error(\"An unsupported type was passed to use(): \" + String(a));\n}\nfunction ab() {\n  return new AbortController().signal;\n}\nfunction bb() {\n  var a = y();\n  return a ? a.cache : /* @__PURE__ */ new Map();\n}\nvar cb = { getCacheSignal: function() {\n  var a = bb(), b = a.get(ab);\n  void 0 === b && (b = ab(), a.set(ab, b));\n  return b;\n}, getCacheForType: function(a) {\n  var b = bb(), d = b.get(a);\n  void 0 === d && (d = a(), b.set(a, d));\n  return d;\n} }, db = Array.isArray, eb = Object.getPrototypeOf;\nfunction fb(a) {\n  return Object.prototype.toString.call(a).replace(/^\\[object (.*)\\]$/, function(b, d) {\n    return d;\n  });\n}\nfunction gb(a) {\n  switch (typeof a) {\n    case \"string\":\n      return JSON.stringify(10 >= a.length ? a : a.slice(0, 10) + \"...\");\n    case \"object\":\n      if (db(a))\n        return \"[...]\";\n      a = fb(a);\n      return \"Object\" === a ? \"{...}\" : a;\n    case \"function\":\n      return \"function\";\n    default:\n      return String(a);\n  }\n}\nfunction hb(a) {\n  if (\"string\" === typeof a)\n    return a;\n  switch (a) {\n    case Ba:\n      return \"Suspense\";\n    case Ca:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof a)\n    switch (a.$$typeof) {\n      case Aa:\n        return hb(a.render);\n      case Da:\n        return hb(a.type);\n      case C:\n        var b = a._payload;\n        a = a._init;\n        try {\n          return hb(a(b));\n        } catch (d) {\n        }\n    }\n  return \"\";\n}\nfunction I(a, b) {\n  var d = fb(a);\n  if (\"Object\" !== d && \"Array\" !== d)\n    return d;\n  d = -1;\n  var c = 0;\n  if (db(a)) {\n    var e = \"[\";\n    for (var f = 0; f < a.length; f++) {\n      0 < f && (e += \", \");\n      var g = a[f];\n      g = \"object\" === typeof g && null !== g ? I(g) : gb(g);\n      \"\" + f === b ? (d = e.length, c = g.length, e += g) : e = 10 > g.length && 40 > e.length + g.length ? e + g : e + \"...\";\n    }\n    e += \"]\";\n  } else if (a.$$typeof === B)\n    e = \"<\" + hb(a.type) + \"/>\";\n  else {\n    e = \"{\";\n    f = Object.keys(a);\n    for (g = 0; g < f.length; g++) {\n      0 < g && (e += \", \");\n      var h = f[g], k = JSON.stringify(h);\n      e += ('\"' + h + '\"' === k ? h : k) + \": \";\n      k = a[h];\n      k = \"object\" === typeof k && null !== k ? I(k) : gb(k);\n      h === b ? (d = e.length, c = k.length, e += k) : e = 10 > k.length && 40 > e.length + k.length ? e + k : e + \"...\";\n    }\n    e += \"}\";\n  }\n  return void 0 === b ? e : -1 < d && 0 < c ? (a = \" \".repeat(d) + \"^\".repeat(c), \"\\n  \" + e + \"\\n  \" + a) : \"\\n  \" + e;\n}\nvar ib = ca.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, jb = ib.ContextRegistry, J = ca.__SECRET_SERVER_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nif (!J)\n  throw Error('The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.');\nvar kb = Object.prototype, K = JSON.stringify, lb = J.TaintRegistryObjects, L = J.TaintRegistryValues, mb = J.TaintRegistryByteLengths, nb = J.TaintRegistryPendingRequests, ob = J.ReactCurrentCache, pb = ib.ReactCurrentDispatcher;\nfunction M(a) {\n  throw Error(a);\n}\nfunction qb(a) {\n  a = a.taintCleanupQueue;\n  nb.delete(a);\n  for (var b = 0; b < a.length; b++) {\n    var d = a[b], c = L.get(d);\n    void 0 !== c && (1 === c.count ? L.delete(d) : c.count--);\n  }\n  a.length = 0;\n}\nfunction rb(a) {\n  console.error(a);\n}\nfunction sb() {\n}\nfunction tb(a, b, d, c, e, f) {\n  if (null !== ob.current && ob.current !== cb)\n    throw Error(\"Currently React only supports one RSC renderer at a time.\");\n  va.current = ua;\n  ob.current = cb;\n  var g = /* @__PURE__ */ new Set(), h = [], k = [];\n  nb.add(k);\n  var n = /* @__PURE__ */ new Set(), w = {\n    status: 0,\n    flushScheduled: false,\n    fatalError: null,\n    destination: null,\n    bundlerConfig: b,\n    cache: /* @__PURE__ */ new Map(),\n    nextChunkId: 0,\n    pendingChunks: 0,\n    hints: n,\n    abortableTasks: g,\n    pingedTasks: h,\n    completedImportChunks: [],\n    completedHintChunks: [],\n    completedRegularChunks: [],\n    completedErrorChunks: [],\n    writtenSymbols: /* @__PURE__ */ new Map(),\n    writtenClientReferences: /* @__PURE__ */ new Map(),\n    writtenServerReferences: /* @__PURE__ */ new Map(),\n    writtenProviders: /* @__PURE__ */ new Map(),\n    writtenObjects: /* @__PURE__ */ new WeakMap(),\n    identifierPrefix: e || \"\",\n    identifierCount: 1,\n    taintCleanupQueue: k,\n    onError: void 0 === d ? rb : d,\n    onPostpone: void 0 === f ? sb : f,\n    toJSON: function(u, H) {\n      return ub(w, this, u, H);\n    }\n  };\n  w.pendingChunks++;\n  b = vb(c);\n  a = wb(w, a, b, g);\n  h.push(a);\n  return w;\n}\nvar N = null;\nfunction y() {\n  if (N)\n    return N;\n  var a = wa.getStore();\n  return a ? a : null;\n}\nvar xb = {};\nfunction yb(a, b) {\n  a.pendingChunks++;\n  var d = wb(a, null, D, a.abortableTasks);\n  switch (b.status) {\n    case \"fulfilled\":\n      return d.model = b.value, zb(a, d), d.id;\n    case \"rejected\":\n      var c = b.reason;\n      \"object\" === typeof c && null !== c && c.$$typeof === Ga ? (Ab(a, c.message), Bb(a, d.id)) : (c = O(a, c), P(a, d.id, c));\n      return d.id;\n    default:\n      \"string\" !== typeof b.status && (b.status = \"pending\", b.then(function(e) {\n        \"pending\" === b.status && (b.status = \"fulfilled\", b.value = e);\n      }, function(e) {\n        \"pending\" === b.status && (b.status = \"rejected\", b.reason = e);\n      }));\n  }\n  b.then(function(e) {\n    d.model = e;\n    zb(a, d);\n  }, function(e) {\n    d.status = 4;\n    a.abortableTasks.delete(d);\n    e = O(a, e);\n    P(a, d.id, e);\n    null !== a.destination && Q(a, a.destination);\n  });\n  return d.id;\n}\nfunction z(a, b, d) {\n  d = K(d);\n  var c = a.nextChunkId++;\n  b = \"H\" + b;\n  b = c.toString(16) + \":\" + b;\n  a.completedHintChunks.push(b + d + \"\\n\");\n  Cb(a);\n}\nfunction Db(a) {\n  if (\"fulfilled\" === a.status)\n    return a.value;\n  if (\"rejected\" === a.status)\n    throw a.reason;\n  throw a;\n}\nfunction Eb(a) {\n  switch (a.status) {\n    case \"fulfilled\":\n    case \"rejected\":\n      break;\n    default:\n      \"string\" !== typeof a.status && (a.status = \"pending\", a.then(function(b) {\n        \"pending\" === a.status && (a.status = \"fulfilled\", a.value = b);\n      }, function(b) {\n        \"pending\" === a.status && (a.status = \"rejected\", a.reason = b);\n      }));\n  }\n  return { $$typeof: C, _payload: a, _init: Db };\n}\nfunction R(a, b, d, c, e, f) {\n  if (null !== c && void 0 !== c)\n    throw Error(\"Refs cannot be used in Server Components, nor passed to Client Components.\");\n  if (\"function\" === typeof b) {\n    if (b.$$typeof === t)\n      return [B, b, d, e];\n    Ua = 0;\n    F = f;\n    e = b(e);\n    return \"object\" === typeof e && null !== e && \"function\" === typeof e.then ? \"fulfilled\" === e.status ? e.value : Eb(e) : e;\n  }\n  if (\"string\" === typeof b)\n    return [B, b, d, e];\n  if (\"symbol\" === typeof b)\n    return b === xa ? e.children : [B, b, d, e];\n  if (null != b && \"object\" === typeof b) {\n    if (b.$$typeof === t)\n      return [B, b, d, e];\n    switch (b.$$typeof) {\n      case C:\n        var g = b._init;\n        b = g(b._payload);\n        return R(a, b, d, c, e, f);\n      case Aa:\n        return a = b.render, Ua = 0, F = f, a(e, void 0);\n      case Da:\n        return R(a, b.type, d, c, e, f);\n      case ya:\n        return Oa(b._context, e.value), [B, b, d, { value: e.value, children: e.children, __pop: xb }];\n    }\n  }\n  throw Error(\"Unsupported Server Component type: \" + gb(b));\n}\nfunction zb(a, b) {\n  var d = a.pingedTasks;\n  d.push(b);\n  1 === d.length && (a.flushScheduled = null !== a.destination, setImmediate(function() {\n    return Fb(a);\n  }));\n}\nfunction wb(a, b, d, c) {\n  var e = { id: a.nextChunkId++, status: 0, model: b, context: d, ping: function() {\n    return zb(a, e);\n  }, thenableState: null };\n  c.add(e);\n  return e;\n}\nfunction S(a) {\n  return \"$\" + a.toString(16);\n}\nfunction Gb(a, b, d) {\n  a = K(d);\n  return b.toString(16) + \":\" + a + \"\\n\";\n}\nfunction Hb(a, b, d, c) {\n  var e = c.$$async ? c.$$id + \"#async\" : c.$$id, f = a.writtenClientReferences, g = f.get(e);\n  if (void 0 !== g)\n    return b[0] === B && \"1\" === d ? \"$L\" + g.toString(16) : S(g);\n  try {\n    var h = a.bundlerConfig, k = c.$$id;\n    g = \"\";\n    var n = h[k];\n    if (n)\n      g = n.name;\n    else {\n      var w = k.lastIndexOf(\"#\");\n      -1 !== w && (g = k.slice(w + 1), n = h[k.slice(0, w)]);\n      if (!n)\n        throw Error('Could not find the module \"' + k + '\" in the React Client Manifest. This is probably a bug in the React Server Components bundler.');\n    }\n    var u = true === c.$$async ? [n.id, n.chunks, g, 1] : [\n      n.id,\n      n.chunks,\n      g\n    ];\n    a.pendingChunks++;\n    var H = a.nextChunkId++, dc = K(u), ec = H.toString(16) + \":I\" + dc + \"\\n\";\n    a.completedImportChunks.push(ec);\n    f.set(e, H);\n    return b[0] === B && \"1\" === d ? \"$L\" + H.toString(16) : S(H);\n  } catch (fc) {\n    return a.pendingChunks++, b = a.nextChunkId++, d = O(a, fc), P(a, b, d), S(b);\n  }\n}\nfunction T(a, b) {\n  a.pendingChunks++;\n  b = wb(a, b, D, a.abortableTasks);\n  Ib(a, b);\n  return b.id;\n}\nfunction U(a, b, d) {\n  if (mb.has(d.byteLength)) {\n    var c = L.get(String.fromCharCode.apply(String, new Uint8Array(d.buffer, d.byteOffset, d.byteLength)));\n    void 0 !== c && M(c.message);\n  }\n  a.pendingChunks += 2;\n  c = a.nextChunkId++;\n  d = new Uint8Array(d.buffer, d.byteOffset, d.byteLength);\n  var e = d.byteLength;\n  b = c.toString(16) + \":\" + b + e.toString(16) + \",\";\n  a.completedRegularChunks.push(b, d);\n  return S(c);\n}\nvar V = false;\nfunction ub(a, b, d, c) {\n  switch (c) {\n    case B:\n      return \"$\";\n  }\n  for (; \"object\" === typeof c && null !== c && (c.$$typeof === B || c.$$typeof === C); )\n    try {\n      switch (c.$$typeof) {\n        case B:\n          var e = a.writtenObjects, f = e.get(c);\n          if (void 0 !== f) {\n            if (-1 === f) {\n              var g = T(a, c);\n              return S(g);\n            }\n            if (V === c)\n              V = null;\n            else\n              return S(f);\n          } else\n            e.set(c, -1);\n          var h = c;\n          c = R(a, h.type, h.key, h.ref, h.props, null);\n          break;\n        case C:\n          var k = c._init;\n          c = k(c._payload);\n      }\n    } catch (n) {\n      d = n === Pa ? Ta() : n;\n      if (\"object\" === typeof d && null !== d) {\n        if (\"function\" === typeof d.then)\n          return a.pendingChunks++, a = wb(a, c, D, a.abortableTasks), c = a.ping, d.then(c, c), a.thenableState = Va(), \"$L\" + a.id.toString(16);\n        if (d.$$typeof === Ga)\n          return c = d, a.pendingChunks++, d = a.nextChunkId++, Ab(a, c.message), Bb(a, d), \"$L\" + d.toString(16);\n      }\n      a.pendingChunks++;\n      c = a.nextChunkId++;\n      d = O(a, d);\n      P(a, c, d);\n      return \"$L\" + c.toString(16);\n    }\n  if (null === c)\n    return null;\n  if (\"object\" === typeof c) {\n    e = lb.get(c);\n    void 0 !== e && M(e);\n    if (c.$$typeof === t)\n      return Hb(a, b, d, c);\n    b = a.writtenObjects;\n    e = b.get(c);\n    if (\"function\" === typeof c.then) {\n      if (void 0 !== e)\n        if (V === c)\n          V = null;\n        else\n          return \"$@\" + e.toString(16);\n      a = yb(a, c);\n      b.set(c, a);\n      return \"$@\" + a.toString(16);\n    }\n    if (c.$$typeof === ya)\n      return c = c._context._globalName, b = a.writtenProviders, d = b.get(d), void 0 === d && (a.pendingChunks++, d = a.nextChunkId++, b.set(c, d), c = Gb(a, d, \"$P\" + c), a.completedRegularChunks.push(c)), S(d);\n    if (c === xb) {\n      a = D;\n      if (null === a)\n        throw Error(\"Tried to pop a Context at the root of the app. This is a bug in React.\");\n      c = a.parentValue;\n      a.context._currentValue = c === Ea ? a.context._defaultValue : c;\n      D = a.parent;\n      return;\n    }\n    if (void 0 !== e) {\n      if (-1 === e)\n        return a = T(a, c), S(a);\n      if (V === c)\n        V = null;\n      else\n        return S(e);\n    } else\n      b.set(c, -1);\n    if (db(c))\n      return c;\n    if (c instanceof Map) {\n      c = Array.from(c);\n      for (d = 0; d < c.length; d++)\n        b = c[d][0], \"object\" === typeof b && null !== b && (e = a.writtenObjects, void 0 === e.get(b) && e.set(b, -1));\n      return \"$Q\" + T(a, c).toString(16);\n    }\n    if (c instanceof Set) {\n      c = Array.from(c);\n      for (d = 0; d < c.length; d++)\n        b = c[d], \"object\" === typeof b && null !== b && (e = a.writtenObjects, void 0 === e.get(b) && e.set(b, -1));\n      return \"$W\" + T(a, c).toString(16);\n    }\n    if (c instanceof ArrayBuffer)\n      return U(a, \"A\", new Uint8Array(c));\n    if (c instanceof Int8Array)\n      return U(\n        a,\n        \"C\",\n        c\n      );\n    if (c instanceof Uint8Array)\n      return U(a, \"c\", c);\n    if (c instanceof Uint8ClampedArray)\n      return U(a, \"U\", c);\n    if (c instanceof Int16Array)\n      return U(a, \"S\", c);\n    if (c instanceof Uint16Array)\n      return U(a, \"s\", c);\n    if (c instanceof Int32Array)\n      return U(a, \"L\", c);\n    if (c instanceof Uint32Array)\n      return U(a, \"l\", c);\n    if (c instanceof Float32Array)\n      return U(a, \"F\", c);\n    if (c instanceof Float64Array)\n      return U(a, \"D\", c);\n    if (c instanceof BigInt64Array)\n      return U(a, \"N\", c);\n    if (c instanceof BigUint64Array)\n      return U(a, \"m\", c);\n    if (c instanceof DataView)\n      return U(\n        a,\n        \"V\",\n        c\n      );\n    null === c || \"object\" !== typeof c ? a = null : (a = Ha && c[Ha] || c[\"@@iterator\"], a = \"function\" === typeof a ? a : null);\n    if (a)\n      return Array.from(c);\n    a = eb(c);\n    if (a !== kb && (null === a || null !== eb(a)))\n      throw Error(\"Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.\");\n    return c;\n  }\n  if (\"string\" === typeof c) {\n    e = L.get(c);\n    void 0 !== e && M(e.message);\n    if (\"Z\" === c[c.length - 1] && b[d] instanceof Date)\n      return \"$D\" + c;\n    if (1024 <= c.length)\n      return a.pendingChunks += 2, d = a.nextChunkId++, b = \"string\" === typeof c ? Buffer.byteLength(c, \"utf8\") : c.byteLength, b = d.toString(16) + \":T\" + b.toString(16) + \",\", a.completedRegularChunks.push(b, c), S(d);\n    a = \"$\" === c[0] ? \"$\" + c : c;\n    return a;\n  }\n  if (\"boolean\" === typeof c)\n    return c;\n  if (\"number\" === typeof c)\n    return a = c, Number.isFinite(a) ? 0 === a && -Infinity === 1 / a ? \"$-0\" : a : Infinity === a ? \"$Infinity\" : -Infinity === a ? \"$-Infinity\" : \"$NaN\";\n  if (\"undefined\" === typeof c)\n    return \"$undefined\";\n  if (\"function\" === typeof c) {\n    e = lb.get(c);\n    void 0 !== e && M(e);\n    if (c.$$typeof === t)\n      return Hb(\n        a,\n        b,\n        d,\n        c\n      );\n    if (c.$$typeof === v)\n      return d = a.writtenServerReferences, b = d.get(c), void 0 !== b ? a = \"$F\" + b.toString(16) : (b = c.$$bound, b = { id: c.$$id, bound: b ? Promise.resolve(b) : null }, a = T(a, b), d.set(c, a), a = \"$F\" + a.toString(16)), a;\n    if (/^on[A-Z]/.test(d))\n      throw Error(\"Event handlers cannot be passed to Client Component props.\" + I(b, d) + \"\\nIf you need interactivity, consider converting part of this to a Client Component.\");\n    throw Error('Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with \"use server\".' + I(b, d));\n  }\n  if (\"symbol\" === typeof c) {\n    e = a.writtenSymbols;\n    f = e.get(c);\n    if (void 0 !== f)\n      return S(f);\n    f = c.description;\n    if (Symbol.for(f) !== c)\n      throw Error(\"Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(\" + (c.description + \") cannot be found among global symbols.\") + I(b, d));\n    a.pendingChunks++;\n    d = a.nextChunkId++;\n    b = Gb(a, d, \"$S\" + f);\n    a.completedImportChunks.push(b);\n    e.set(c, d);\n    return S(d);\n  }\n  if (\"bigint\" === typeof c)\n    return a = L.get(c), void 0 !== a && M(a.message), \"$n\" + c.toString(10);\n  throw Error(\"Type \" + typeof c + \" is not supported in Client Component props.\" + I(b, d));\n}\nfunction Ab(a, b) {\n  a = a.onPostpone;\n  a(b);\n}\nfunction O(a, b) {\n  a = a.onError;\n  b = a(b);\n  if (null != b && \"string\" !== typeof b)\n    throw Error('onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"' + typeof b + '\" instead');\n  return b || \"\";\n}\nfunction Jb(a, b) {\n  qb(a);\n  null !== a.destination ? (a.status = 2, a.destination.destroy(b)) : (a.status = 1, a.fatalError = b);\n}\nfunction Bb(a, b) {\n  b = b.toString(16) + \":P\\n\";\n  a.completedErrorChunks.push(b);\n}\nfunction P(a, b, d) {\n  d = { digest: d };\n  b = b.toString(16) + \":E\" + K(d) + \"\\n\";\n  a.completedErrorChunks.push(b);\n}\nfunction Ib(a, b) {\n  if (0 === b.status) {\n    Na(b.context);\n    try {\n      var d = b.model;\n      if (\"object\" === typeof d && null !== d && d.$$typeof === B) {\n        a.writtenObjects.set(d, b.id);\n        var c = d, e = b.thenableState;\n        b.model = d;\n        d = R(a, c.type, c.key, c.ref, c.props, e);\n        for (b.thenableState = null; \"object\" === typeof d && null !== d && d.$$typeof === B; )\n          a.writtenObjects.set(d, b.id), c = d, b.model = d, d = R(a, c.type, c.key, c.ref, c.props, null);\n      }\n      \"object\" === typeof d && null !== d && a.writtenObjects.set(d, b.id);\n      var f = b.id;\n      V = d;\n      var g = K(d, a.toJSON), h = f.toString(16) + \":\" + g + \"\\n\";\n      a.completedRegularChunks.push(h);\n      a.abortableTasks.delete(b);\n      b.status = 1;\n    } catch (k) {\n      f = k === Pa ? Ta() : k;\n      if (\"object\" === typeof f && null !== f) {\n        if (\"function\" === typeof f.then) {\n          a = b.ping;\n          f.then(a, a);\n          b.thenableState = Va();\n          return;\n        }\n        if (f.$$typeof === Ga) {\n          a.abortableTasks.delete(b);\n          b.status = 4;\n          Ab(a, f.message);\n          Bb(a, b.id);\n          return;\n        }\n      }\n      a.abortableTasks.delete(b);\n      b.status = 4;\n      f = O(a, f);\n      P(a, b.id, f);\n    }\n  }\n}\nfunction Fb(a) {\n  var b = pb.current;\n  pb.current = $a;\n  var d = N;\n  E = N = a;\n  try {\n    var c = a.pingedTasks;\n    a.pingedTasks = [];\n    for (var e = 0; e < c.length; e++)\n      Ib(a, c[e]);\n    null !== a.destination && Q(a, a.destination);\n  } catch (f) {\n    O(a, f), Jb(a, f);\n  } finally {\n    pb.current = b, E = null, N = d;\n  }\n}\nfunction Q(a, b) {\n  l = new Uint8Array(2048);\n  m = 0;\n  p = true;\n  try {\n    for (var d = a.completedImportChunks, c = 0; c < d.length; c++)\n      if (a.pendingChunks--, !r(b, d[c])) {\n        a.destination = null;\n        c++;\n        break;\n      }\n    d.splice(0, c);\n    var e = a.completedHintChunks;\n    for (c = 0; c < e.length; c++)\n      if (!r(b, e[c])) {\n        a.destination = null;\n        c++;\n        break;\n      }\n    e.splice(0, c);\n    var f = a.completedRegularChunks;\n    for (c = 0; c < f.length; c++)\n      if (a.pendingChunks--, !r(b, f[c])) {\n        a.destination = null;\n        c++;\n        break;\n      }\n    f.splice(0, c);\n    var g = a.completedErrorChunks;\n    for (c = 0; c < g.length; c++)\n      if (a.pendingChunks--, !r(b, g[c])) {\n        a.destination = null;\n        c++;\n        break;\n      }\n    g.splice(0, c);\n  } finally {\n    a.flushScheduled = false, l && 0 < m && b.write(l.subarray(0, m)), l = null, m = 0, p = true;\n  }\n  \"function\" === typeof b.flush && b.flush();\n  0 === a.pendingChunks && (qb(a), b.end());\n}\nfunction Kb(a) {\n  a.flushScheduled = null !== a.destination;\n  setImmediate(function() {\n    return wa.run(a, Fb, a);\n  });\n}\nfunction Cb(a) {\n  if (false === a.flushScheduled && 0 === a.pingedTasks.length && null !== a.destination) {\n    var b = a.destination;\n    a.flushScheduled = true;\n    setImmediate(function() {\n      return Q(a, b);\n    });\n  }\n}\nfunction Lb(a, b) {\n  if (1 === a.status)\n    a.status = 2, b.destroy(a.fatalError);\n  else if (2 !== a.status && null === a.destination) {\n    a.destination = b;\n    try {\n      Q(a, b);\n    } catch (d) {\n      O(a, d), Jb(a, d);\n    }\n  }\n}\nfunction Mb(a, b) {\n  try {\n    var d = a.abortableTasks;\n    if (0 < d.size) {\n      a.pendingChunks++;\n      var c = a.nextChunkId++;\n      if (\"object\" === typeof b && null !== b && b.$$typeof === Ga)\n        Ab(a, b.message), Bb(a, c, b);\n      else {\n        var e = void 0 === b ? Error(\"The render was aborted by the server without a reason.\") : b, f = O(a, e);\n        P(a, c, f, e);\n      }\n      d.forEach(function(g) {\n        g.status = 3;\n        var h = S(c);\n        g = Gb(a, g.id, h);\n        a.completedErrorChunks.push(g);\n      });\n      d.clear();\n    }\n    null !== a.destination && Q(a, a.destination);\n  } catch (g) {\n    O(a, g), Jb(a, g);\n  }\n}\nfunction vb(a) {\n  if (a) {\n    var b = D;\n    Na(null);\n    for (var d = 0; d < a.length; d++) {\n      var c = a[d], e = c[0];\n      c = c[1];\n      if (!jb[e]) {\n        var f = { $$typeof: za, _currentValue: Ea, _currentValue2: Ea, _defaultValue: Ea, _threadCount: 0, Provider: null, Consumer: null, _globalName: e };\n        f.Provider = { $$typeof: ya, _context: f };\n        jb[e] = f;\n      }\n      Oa(jb[e], c);\n    }\n    a = D;\n    Na(b);\n    return a;\n  }\n  return null;\n}\nfunction Nb(a, b) {\n  var d = \"\", c = a[b];\n  if (c)\n    d = c.name;\n  else {\n    var e = b.lastIndexOf(\"#\");\n    -1 !== e && (d = b.slice(e + 1), c = a[b.slice(0, e)]);\n    if (!c)\n      throw Error('Could not find the module \"' + b + '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.');\n  }\n  return [c.id, c.chunks, d];\n}\nvar Ob = /* @__PURE__ */ new Map();\nfunction Pb(a) {\n  var b = __webpack_require__(a);\n  if (\"function\" !== typeof b.then || \"fulfilled\" === b.status)\n    return null;\n  b.then(function(d) {\n    b.status = \"fulfilled\";\n    b.value = d;\n  }, function(d) {\n    b.status = \"rejected\";\n    b.reason = d;\n  });\n  return b;\n}\nfunction Qb() {\n}\nfunction Rb(a) {\n  for (var b = a[1], d = [], c = 0; c < b.length; ) {\n    var e = b[c++];\n    b[c++];\n    var f = Ob.get(e);\n    if (void 0 === f) {\n      f = __webpack_chunk_load__(e);\n      d.push(f);\n      var g = Ob.set.bind(Ob, e, null);\n      f.then(g, Qb);\n      Ob.set(e, f);\n    } else\n      null !== f && d.push(f);\n  }\n  return 4 === a.length ? 0 === d.length ? Pb(a[0]) : Promise.all(d).then(function() {\n    return Pb(a[0]);\n  }) : 0 < d.length ? Promise.all(d) : null;\n}\nfunction W(a) {\n  var b = __webpack_require__(a[0]);\n  if (4 === a.length && \"function\" === typeof b.then)\n    if (\"fulfilled\" === b.status)\n      b = b.value;\n    else\n      throw b.reason;\n  return \"*\" === a[2] ? b : \"\" === a[2] ? b.__esModule ? b.default : b : b[a[2]];\n}\nfunction Sb(a, b, d, c) {\n  this.status = a;\n  this.value = b;\n  this.reason = d;\n  this._response = c;\n}\nSb.prototype = Object.create(Promise.prototype);\nSb.prototype.then = function(a, b) {\n  switch (this.status) {\n    case \"resolved_model\":\n      Tb(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      a(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n      a && (null === this.value && (this.value = []), this.value.push(a));\n      b && (null === this.reason && (this.reason = []), this.reason.push(b));\n      break;\n    default:\n      b(this.reason);\n  }\n};\nfunction Ub(a, b) {\n  for (var d = 0; d < a.length; d++)\n    (0, a[d])(b);\n}\nfunction Vb(a, b) {\n  if (\"pending\" === a.status || \"blocked\" === a.status) {\n    var d = a.reason;\n    a.status = \"rejected\";\n    a.reason = b;\n    null !== d && Ub(d, b);\n  }\n}\nfunction Wb(a, b, d, c, e, f) {\n  var g = Nb(a._bundlerConfig, b);\n  a = Rb(g);\n  if (d)\n    d = Promise.all([d, a]).then(function(h) {\n      h = h[0];\n      var k = W(g);\n      return k.bind.apply(k, [null].concat(h));\n    });\n  else if (a)\n    d = Promise.resolve(a).then(function() {\n      return W(g);\n    });\n  else\n    return W(g);\n  d.then(Xb(c, e, f), Yb(c));\n  return null;\n}\nvar X = null, Y = null;\nfunction Tb(a) {\n  var b = X, d = Y;\n  X = a;\n  Y = null;\n  try {\n    var c = JSON.parse(a.value, a._response._fromJSON);\n    null !== Y && 0 < Y.deps ? (Y.value = c, a.status = \"blocked\", a.value = null, a.reason = null) : (a.status = \"fulfilled\", a.value = c);\n  } catch (e) {\n    a.status = \"rejected\", a.reason = e;\n  } finally {\n    X = b, Y = d;\n  }\n}\nfunction Zb(a, b) {\n  a._chunks.forEach(function(d) {\n    \"pending\" === d.status && Vb(d, b);\n  });\n}\nfunction Z(a, b) {\n  var d = a._chunks, c = d.get(b);\n  c || (c = a._formData.get(a._prefix + b), c = null != c ? new Sb(\"resolved_model\", c, null, a) : new Sb(\"pending\", null, null, a), d.set(b, c));\n  return c;\n}\nfunction Xb(a, b, d) {\n  if (Y) {\n    var c = Y;\n    c.deps++;\n  } else\n    c = Y = { deps: 1, value: null };\n  return function(e) {\n    b[d] = e;\n    c.deps--;\n    0 === c.deps && \"blocked\" === a.status && (e = a.value, a.status = \"fulfilled\", a.value = c.value, null !== e && Ub(e, c.value));\n  };\n}\nfunction Yb(a) {\n  return function(b) {\n    return Vb(a, b);\n  };\n}\nfunction $b(a, b) {\n  a = Z(a, b);\n  \"resolved_model\" === a.status && Tb(a);\n  if (\"fulfilled\" !== a.status)\n    throw a.reason;\n  return a.value;\n}\nfunction ac(a, b, d, c) {\n  if (\"$\" === c[0])\n    switch (c[1]) {\n      case \"$\":\n        return c.slice(1);\n      case \"@\":\n        return b = parseInt(c.slice(2), 16), Z(a, b);\n      case \"S\":\n        return Symbol.for(c.slice(2));\n      case \"F\":\n        return c = parseInt(c.slice(2), 16), c = $b(a, c), Wb(a, c.id, c.bound, X, b, d);\n      case \"Q\":\n        return b = parseInt(c.slice(2), 16), a = $b(a, b), new Map(a);\n      case \"W\":\n        return b = parseInt(c.slice(2), 16), a = $b(a, b), new Set(a);\n      case \"K\":\n        b = c.slice(2);\n        var e = a._prefix + b + \"_\", f = new FormData();\n        a._formData.forEach(function(g, h) {\n          h.startsWith(e) && f.append(\n            h.slice(e.length),\n            g\n          );\n        });\n        return f;\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === c ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(c.slice(2)));\n      case \"n\":\n        return BigInt(c.slice(2));\n      default:\n        c = parseInt(c.slice(1), 16);\n        a = Z(a, c);\n        switch (a.status) {\n          case \"resolved_model\":\n            Tb(a);\n        }\n        switch (a.status) {\n          case \"fulfilled\":\n            return a.value;\n          case \"pending\":\n          case \"blocked\":\n            return c = X, a.then(Xb(c, b, d), Yb(c)), null;\n          default:\n            throw a.reason;\n        }\n    }\n  return c;\n}\nfunction bc(a, b) {\n  var d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : new FormData(), c = /* @__PURE__ */ new Map(), e = { _bundlerConfig: a, _prefix: b, _formData: d, _chunks: c, _fromJSON: function(f, g) {\n    return \"string\" === typeof g ? ac(e, this, f, g) : g;\n  } };\n  return e;\n}\nfunction cc(a, b, d) {\n  a._formData.append(b, d);\n  var c = a._prefix;\n  if (b.startsWith(c) && (a = a._chunks, b = +b.slice(c.length), (b = a.get(b)) && \"pending\" === b.status && (c = b.value, a = b.reason, b.status = \"resolved_model\", b.value = d, null !== c)))\n    switch (Tb(b), b.status) {\n      case \"fulfilled\":\n        Ub(c, b.value);\n        break;\n      case \"pending\":\n      case \"blocked\":\n        b.value = c;\n        b.reason = a;\n        break;\n      case \"rejected\":\n        a && Ub(a, b.reason);\n    }\n}\nfunction gc(a) {\n  Zb(a, Error(\"Connection closed.\"));\n}\nfunction hc(a, b, d) {\n  var c = Nb(a, b);\n  a = Rb(c);\n  return d ? Promise.all([d, a]).then(function(e) {\n    e = e[0];\n    var f = W(c);\n    return f.bind.apply(f, [null].concat(e));\n  }) : a ? Promise.resolve(a).then(function() {\n    return W(c);\n  }) : Promise.resolve(W(c));\n}\nfunction ic(a, b, d) {\n  a = bc(b, d, a);\n  gc(a);\n  a = Z(a, 0);\n  a.then(function() {\n  });\n  if (\"fulfilled\" !== a.status)\n    throw a.reason;\n  return a.value;\n}\nfunction jc(a, b) {\n  return function() {\n    return Lb(b, a);\n  };\n}\nfunction kc(a, b) {\n  return function() {\n    a.destination = null;\n    Mb(a, Error(b));\n  };\n}\nexports.createClientModuleProxy = function(a) {\n  a = x({}, a, false);\n  return new Proxy(a, ma);\n};\nexports.decodeAction = function(a, b) {\n  var d = new FormData(), c = null;\n  a.forEach(function(e, f) {\n    f.startsWith(\"$ACTION_\") ? f.startsWith(\"$ACTION_REF_\") ? (e = \"$ACTION_\" + f.slice(12) + \":\", e = ic(a, b, e), c = hc(b, e.id, e.bound)) : f.startsWith(\"$ACTION_ID_\") && (e = f.slice(11), c = hc(b, e, null)) : d.append(f, e);\n  });\n  return null === c ? null : c.then(function(e) {\n    return e.bind(null, d);\n  });\n};\nexports.decodeFormState = function(a, b, d) {\n  var c = b.get(\"$ACTION_KEY\");\n  if (\"string\" !== typeof c)\n    return Promise.resolve(null);\n  var e = null;\n  b.forEach(function(g, h) {\n    h.startsWith(\"$ACTION_REF_\") && (g = \"$ACTION_\" + h.slice(12) + \":\", e = ic(b, d, g));\n  });\n  if (null === e)\n    return Promise.resolve(null);\n  var f = e.id;\n  return Promise.resolve(e.bound).then(function(g) {\n    return null === g ? null : [a, c, f, g.length - 1];\n  });\n};\nexports.decodeReply = function(a, b) {\n  if (\"string\" === typeof a) {\n    var d = new FormData();\n    d.append(\"0\", a);\n    a = d;\n  }\n  a = bc(b, \"\", a);\n  b = Z(a, 0);\n  gc(a);\n  return b;\n};\nexports.decodeReplyFromBusboy = function(a, b) {\n  var d = bc(b, \"\"), c = 0, e = [];\n  a.on(\"field\", function(f, g) {\n    0 < c ? e.push(f, g) : cc(d, f, g);\n  });\n  a.on(\"file\", function(f, g, h) {\n    var k = h.filename, n = h.mimeType;\n    if (\"base64\" === h.encoding.toLowerCase())\n      throw Error(\"React doesn't accept base64 encoded file uploads because we don't expect form data passed from a browser to ever encode data that way. If that's the wrong assumption, we can easily fix it.\");\n    c++;\n    var w = [];\n    g.on(\"data\", function(u) {\n      w.push(u);\n    });\n    g.on(\"end\", function() {\n      var u = new Blob(w, { type: n });\n      d._formData.append(f, u, k);\n      c--;\n      if (0 === c) {\n        for (u = 0; u < e.length; u += 2)\n          cc(d, e[u], e[u + 1]);\n        e.length = 0;\n      }\n    });\n  });\n  a.on(\"finish\", function() {\n    gc(d);\n  });\n  a.on(\"error\", function(f) {\n    Zb(d, f);\n  });\n  return Z(d, 0);\n};\nexports.registerClientReference = function(a, b, d) {\n  return x(a, b + \"#\" + d, false);\n};\nexports.registerServerReference = function(a, b, d) {\n  return Object.defineProperties(a, { $$typeof: { value: v }, $$id: { value: null === d ? b : b + \"#\" + d }, $$bound: { value: null }, bind: { value: ia } });\n};\nexports.renderToPipeableStream = function(a, b, d) {\n  var c = tb(a, b, d ? d.onError : void 0, d ? d.context : void 0, d ? d.identifierPrefix : void 0, d ? d.onPostpone : void 0), e = false;\n  Kb(c);\n  return { pipe: function(f) {\n    if (e)\n      throw Error(\"React currently only supports piping to one writable stream.\");\n    e = true;\n    Lb(c, f);\n    f.on(\"drain\", jc(f, c));\n    f.on(\"error\", kc(c, \"The destination stream errored while writing data.\"));\n    f.on(\"close\", kc(c, \"The destination stream closed early.\"));\n    return f;\n  }, abort: function(f) {\n    Mb(c, f);\n  } };\n};\n","\"use strict\";\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./cjs/react-server-dom-webpack-server.node.production.min.js\");\n} else {\n  module.exports = require(\"./cjs/react-server-dom-webpack-server.node.development.js\");\n}\n","\"use strict\";\nvar f = require(\"react\"), k = Symbol.for(\"react.element\"), l = Symbol.for(\"react.fragment\"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = { key: true, ref: true, __self: true, __source: true };\nfunction q(c, a, g) {\n  var b, d = {}, e = null, h = null;\n  void 0 !== g && (e = \"\" + g);\n  void 0 !== a.key && (e = \"\" + a.key);\n  void 0 !== a.ref && (h = a.ref);\n  for (b in a)\n    m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);\n  if (c && c.defaultProps)\n    for (b in a = c.defaultProps, a)\n      void 0 === d[b] && (d[b] = a[b]);\n  return { $$typeof: k, type: c, key: e, ref: h, props: d, _owner: n.current };\n}\nexports.Fragment = l;\nexports.jsx = q;\nexports.jsxs = q;\n","\"use strict\";\nvar l = Object.assign, n = { current: null };\nfunction p() {\n  return /* @__PURE__ */ new Map();\n}\nif (\"function\" === typeof fetch) {\n  var q = fetch, r = function(a, b) {\n    var c = n.current;\n    if (!c || b && b.signal && b.signal !== c.getCacheSignal())\n      return q(a, b);\n    if (\"string\" !== typeof a || b) {\n      var d = \"string\" === typeof a || a instanceof URL ? new Request(a, b) : a;\n      if (\"GET\" !== d.method && \"HEAD\" !== d.method || d.keepalive)\n        return q(a, b);\n      var e = JSON.stringify([d.method, Array.from(d.headers.entries()), d.mode, d.redirect, d.credentials, d.referrer, d.referrerPolicy, d.integrity]);\n      d = d.url;\n    } else\n      e = '[\"GET\",[],null,\"follow\",null,null,null,null]', d = a;\n    var f = c.getCacheForType(p);\n    c = f.get(d);\n    if (void 0 === c)\n      a = q(a, b), f.set(d, [e, a]);\n    else {\n      d = 0;\n      for (f = c.length; d < f; d += 2) {\n        var h = c[d + 1];\n        if (c[d] === e)\n          return a = h, a.then(function(g) {\n            return g.clone();\n          });\n      }\n      a = q(a, b);\n      c.push(e, a);\n    }\n    return a.then(function(g) {\n      return g.clone();\n    });\n  };\n  l(r, q);\n  try {\n    fetch = r;\n  } catch (a) {\n    try {\n      globalThis.fetch = r;\n    } catch (b) {\n      console.warn(\"React was unable to patch the fetch() function in this environment. Suspensey APIs might not work correctly as a result.\");\n    }\n  }\n}\nvar t = { current: null }, u = { current: null }, v = {}, w = { ReactCurrentDispatcher: t, ReactCurrentOwner: u, ContextRegistry: v }, x = /* @__PURE__ */ new WeakMap(), y = /* @__PURE__ */ new Map(), z = /* @__PURE__ */ new Set(), A = /* @__PURE__ */ new Set(), B = { ReactCurrentCache: n, TaintRegistryObjects: x, TaintRegistryValues: y, TaintRegistryByteLengths: z, TaintRegistryPendingRequests: A };\nfunction C(a) {\n  for (var b = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 1; c < arguments.length; c++)\n    b += \"&args[]=\" + encodeURIComponent(arguments[c]);\n  return \"Minified React error #\" + a + \"; visit \" + b + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\";\n}\nvar D = Object.getPrototypeOf, E = B.TaintRegistryObjects, F = B.TaintRegistryValues, G = B.TaintRegistryByteLengths, aa = B.TaintRegistryPendingRequests, ba = D(Uint32Array.prototype).constructor;\nfunction ca(a) {\n  var b = F.get(a);\n  void 0 !== b && (aa.forEach(function(c) {\n    c.push(a);\n    b.count++;\n  }), 1 === b.count ? F.delete(a) : b.count--);\n}\nvar H = \"function\" === typeof FinalizationRegistry ? new FinalizationRegistry(ca) : null, I = Symbol.for(\"react.element\"), da = Symbol.for(\"react.portal\"), ea = Symbol.for(\"react.fragment\"), fa = Symbol.for(\"react.strict_mode\"), ha = Symbol.for(\"react.profiler\"), ia = Symbol.for(\"react.provider\"), ja = Symbol.for(\"react.server_context\"), ka = Symbol.for(\"react.forward_ref\"), la = Symbol.for(\"react.suspense\"), ma = Symbol.for(\"react.suspense_list\"), na = Symbol.for(\"react.memo\"), oa = Symbol.for(\"react.lazy\"), pa = Symbol.for(\"react.debug_trace_mode\"), J = Symbol.for(\"react.default_value\"), qa = Symbol.for(\"react.postpone\"), K = Symbol.iterator;\nfunction ra(a) {\n  if (null === a || \"object\" !== typeof a)\n    return null;\n  a = K && a[K] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\nvar L = { isMounted: function() {\n  return false;\n}, enqueueForceUpdate: function() {\n}, enqueueReplaceState: function() {\n}, enqueueSetState: function() {\n} }, M = {};\nfunction N(a, b, c) {\n  this.props = a;\n  this.context = b;\n  this.refs = M;\n  this.updater = c || L;\n}\nN.prototype.isReactComponent = {};\nN.prototype.setState = function(a, b) {\n  if (\"object\" !== typeof a && \"function\" !== typeof a && null != a)\n    throw Error(C(85));\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\nN.prototype.forceUpdate = function(a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\nfunction O() {\n}\nO.prototype = N.prototype;\nfunction P(a, b, c) {\n  this.props = a;\n  this.context = b;\n  this.refs = M;\n  this.updater = c || L;\n}\nvar Q = P.prototype = new O();\nQ.constructor = P;\nl(Q, N.prototype);\nQ.isPureReactComponent = true;\nvar R = Array.isArray, S = Object.prototype.hasOwnProperty, T = { key: true, ref: true, __self: true, __source: true };\nfunction sa(a, b) {\n  return { $$typeof: I, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };\n}\nfunction U(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === I;\n}\nfunction escape(a) {\n  var b = { \"=\": \"=0\", \":\": \"=2\" };\n  return \"$\" + a.replace(/[=:]/g, function(c) {\n    return b[c];\n  });\n}\nvar V = /\\/+/g;\nfunction W(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(\"\" + a.key) : b.toString(36);\n}\nfunction X(a, b, c, d, e) {\n  var f = typeof a;\n  if (\"undefined\" === f || \"boolean\" === f)\n    a = null;\n  var h = false;\n  if (null === a)\n    h = true;\n  else\n    switch (f) {\n      case \"string\":\n      case \"number\":\n        h = true;\n        break;\n      case \"object\":\n        switch (a.$$typeof) {\n          case I:\n          case da:\n            h = true;\n        }\n    }\n  if (h)\n    return h = a, e = e(h), a = \"\" === d ? \".\" + W(h, 0) : d, R(e) ? (c = \"\", null != a && (c = a.replace(V, \"$&/\") + \"/\"), X(e, b, c, \"\", function(m) {\n      return m;\n    })) : null != e && (U(e) && (e = sa(e, c + (!e.key || h && h.key === e.key ? \"\" : (\"\" + e.key).replace(V, \"$&/\") + \"/\") + a)), b.push(e)), 1;\n  h = 0;\n  d = \"\" === d ? \".\" : d + \":\";\n  if (R(a))\n    for (var g = 0; g < a.length; g++) {\n      f = a[g];\n      var k = d + W(f, g);\n      h += X(f, b, c, k, e);\n    }\n  else if (k = ra(a), \"function\" === typeof k)\n    for (a = k.call(a), g = 0; !(f = a.next()).done; )\n      f = f.value, k = d + W(f, g++), h += X(f, b, c, k, e);\n  else if (\"object\" === f)\n    throw b = String(a), Error(C(31, \"[object Object]\" === b ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : b));\n  return h;\n}\nfunction Y(a, b, c) {\n  if (null == a)\n    return a;\n  var d = [], e = 0;\n  X(a, d, \"\", \"\", function(f) {\n    return b.call(c, f, e++);\n  });\n  return d;\n}\nfunction ta(a) {\n  if (-1 === a._status) {\n    var b = a._result;\n    b = b();\n    b.then(function(c) {\n      if (0 === a._status || -1 === a._status)\n        a._status = 1, a._result = c;\n    }, function(c) {\n      if (0 === a._status || -1 === a._status)\n        a._status = 2, a._result = c;\n    });\n    -1 === a._status && (a._status = 0, a._result = b);\n  }\n  if (1 === a._status)\n    return a._result.default;\n  throw a._result;\n}\nfunction ua() {\n  return /* @__PURE__ */ new WeakMap();\n}\nfunction Z() {\n  return { s: 0, v: void 0, o: null, p: null };\n}\nexports.Children = { map: Y, forEach: function(a, b, c) {\n  Y(a, function() {\n    b.apply(this, arguments);\n  }, c);\n}, count: function(a) {\n  var b = 0;\n  Y(a, function() {\n    b++;\n  });\n  return b;\n}, toArray: function(a) {\n  return Y(a, function(b) {\n    return b;\n  }) || [];\n}, only: function(a) {\n  if (!U(a))\n    throw Error(C(143));\n  return a;\n} };\nexports.Fragment = ea;\nexports.Profiler = ha;\nexports.StrictMode = fa;\nexports.Suspense = la;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = w;\nexports.__SECRET_SERVER_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = B;\nexports.cache = function(a) {\n  return function() {\n    var b = n.current;\n    if (!b)\n      return a.apply(null, arguments);\n    var c = b.getCacheForType(ua);\n    b = c.get(a);\n    void 0 === b && (b = Z(), c.set(a, b));\n    c = 0;\n    for (var d = arguments.length; c < d; c++) {\n      var e = arguments[c];\n      if (\"function\" === typeof e || \"object\" === typeof e && null !== e) {\n        var f = b.o;\n        null === f && (b.o = f = /* @__PURE__ */ new WeakMap());\n        b = f.get(e);\n        void 0 === b && (b = Z(), f.set(e, b));\n      } else\n        f = b.p, null === f && (b.p = f = /* @__PURE__ */ new Map()), b = f.get(e), void 0 === b && (b = Z(), f.set(e, b));\n    }\n    if (1 === b.s)\n      return b.v;\n    if (2 === b.s)\n      throw b.v;\n    try {\n      var h = a.apply(\n        null,\n        arguments\n      );\n      c = b;\n      c.s = 1;\n      return c.v = h;\n    } catch (g) {\n      throw h = b, h.s = 2, h.v = g, g;\n    }\n  };\n};\nexports.cloneElement = function(a, b, c) {\n  if (null === a || void 0 === a)\n    throw Error(C(267, a));\n  var d = l({}, a.props), e = a.key, f = a.ref, h = a._owner;\n  if (null != b) {\n    void 0 !== b.ref && (f = b.ref, h = u.current);\n    void 0 !== b.key && (e = \"\" + b.key);\n    if (a.type && a.type.defaultProps)\n      var g = a.type.defaultProps;\n    for (k in b)\n      S.call(b, k) && !T.hasOwnProperty(k) && (d[k] = void 0 === b[k] && void 0 !== g ? g[k] : b[k]);\n  }\n  var k = arguments.length - 2;\n  if (1 === k)\n    d.children = c;\n  else if (1 < k) {\n    g = Array(k);\n    for (var m = 0; m < k; m++)\n      g[m] = arguments[m + 2];\n    d.children = g;\n  }\n  return {\n    $$typeof: I,\n    type: a.type,\n    key: e,\n    ref: f,\n    props: d,\n    _owner: h\n  };\n};\nexports.createElement = function(a, b, c) {\n  var d, e = {}, f = null, h = null;\n  if (null != b)\n    for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (f = \"\" + b.key), b)\n      S.call(b, d) && !T.hasOwnProperty(d) && (e[d] = b[d]);\n  var g = arguments.length - 2;\n  if (1 === g)\n    e.children = c;\n  else if (1 < g) {\n    for (var k = Array(g), m = 0; m < g; m++)\n      k[m] = arguments[m + 2];\n    e.children = k;\n  }\n  if (a && a.defaultProps)\n    for (d in g = a.defaultProps, g)\n      void 0 === e[d] && (e[d] = g[d]);\n  return { $$typeof: I, type: a, key: f, ref: h, props: e, _owner: u.current };\n};\nexports.createRef = function() {\n  return { current: null };\n};\nexports.createServerContext = function(a, b) {\n  var c = true;\n  if (!v[a]) {\n    c = false;\n    var d = { $$typeof: ja, _currentValue: b, _currentValue2: b, _defaultValue: b, _threadCount: 0, Provider: null, Consumer: null, _globalName: a };\n    d.Provider = { $$typeof: ia, _context: d };\n    v[a] = d;\n  }\n  d = v[a];\n  if (d._defaultValue === J)\n    d._defaultValue = b, d._currentValue === J && (d._currentValue = b), d._currentValue2 === J && (d._currentValue2 = b);\n  else if (c)\n    throw Error(C(429, a));\n  return d;\n};\nexports.experimental_taintObjectReference = function(a, b) {\n  a = \"\" + (a || \"A tainted value was attempted to be serialized to a Client Component or Action closure. This would leak it to the client.\");\n  if (\"string\" === typeof b || \"bigint\" === typeof b)\n    throw Error(C(496));\n  if (null === b || \"object\" !== typeof b && \"function\" !== typeof b)\n    throw Error(C(497));\n  E.set(b, a);\n};\nexports.experimental_taintUniqueValue = function(a, b, c) {\n  a = \"\" + (a || \"A tainted value was attempted to be serialized to a Client Component or Action closure. This would leak it to the client.\");\n  if (null === b || \"object\" !== typeof b && \"function\" !== typeof b)\n    throw Error(C(493));\n  if (\"string\" !== typeof c && \"bigint\" !== typeof c)\n    if (c instanceof ba || c instanceof DataView)\n      G.add(c.byteLength), c = String.fromCharCode.apply(String, new Uint8Array(c.buffer, c.byteOffset, c.byteLength));\n    else {\n      a = null === c ? \"null\" : typeof c;\n      if (\"object\" === a || \"function\" === a)\n        throw Error(C(494));\n      throw Error(C(495, a));\n    }\n  var d = F.get(c);\n  void 0 === d ? F.set(c, { message: a, count: 1 }) : d.count++;\n  null !== H && H.register(b, c);\n};\nexports.forwardRef = function(a) {\n  return { $$typeof: ka, render: a };\n};\nexports.isValidElement = U;\nexports.lazy = function(a) {\n  return { $$typeof: oa, _payload: { _status: -1, _result: a }, _init: ta };\n};\nexports.memo = function(a, b) {\n  return { $$typeof: na, type: a, compare: void 0 === b ? null : b };\n};\nexports.startTransition = function(a) {\n  a();\n};\nexports.unstable_DebugTracingMode = pa;\nexports.unstable_SuspenseList = ma;\nexports.unstable_getCacheForType = function(a) {\n  var b = n.current;\n  return b ? b.getCacheForType(a) : a();\n};\nexports.unstable_getCacheSignal = function() {\n  var a = n.current;\n  if (!a) {\n    a = new AbortController();\n    var b = Error(C(455));\n    a.abort(b);\n    return a.signal;\n  }\n  return a.getCacheSignal();\n};\nexports.unstable_postpone = function(a) {\n  a = Error(a);\n  a.$$typeof = qa;\n  throw a;\n};\nexports.use = function(a) {\n  return t.current.use(a);\n};\nexports.useCallback = function(a, b) {\n  return t.current.useCallback(a, b);\n};\nexports.useContext = function(a) {\n  return t.current.useContext(a);\n};\nexports.useDebugValue = function() {\n};\nexports.useId = function() {\n  return t.current.useId();\n};\nexports.useMemo = function(a, b) {\n  return t.current.useMemo(a, b);\n};\nexports.version = \"18.3.0-experimental-6b3834a45-20231110\";\n","\"use strict\";\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./cjs/react-jsx-runtime.production.min.js\");\n} else {\n  module.exports = require(\"./cjs/react-jsx-runtime.development.js\");\n}\n","\"use strict\";\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./cjs/react.shared-subset.production.min.js\");\n} else {\n  module.exports = require(\"./cjs/react.shared-subset.development.js\");\n}\n","\"use strict\";\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false\n};\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n  options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value;\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n  var cookie = {\n    name,\n    value\n  };\n  parts.forEach(function(part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value2 = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value2);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value2, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value2;\n    } else {\n      cookie[key] = value2;\n    }\n  });\n  return cookie;\n}\nfunction parseNameValuePair(nameValuePairStr) {\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\");\n  } else {\n    value = nameValuePairStr;\n  }\n  return { name, value };\n}\nfunction parse(input, options) {\n  options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      input = input.headers[\"set-cookie\"];\n    } else {\n      var sch = input.headers[Object.keys(input.headers).find(function(key) {\n        return key.toLowerCase() === \"set-cookie\";\n      })];\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n  options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function(str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n      var cookie = parseString(str, options);\n      cookies2[cookie.name] = cookie;\n      return cookies2;\n    }, cookies);\n  }\n}\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n","var util = require(\"util\");\nvar Transform = require(\"stream\").Transform;\nutil.inherits(SliceStream, Transform);\nfunction SliceStream(start, end) {\n  if (!(this instanceof SliceStream)) {\n    return new SliceStream();\n  }\n  Transform.call(this);\n  this._start = start || 0;\n  this._end = end || Infinity;\n  this._offset = 0;\n  this._state = 0;\n  this._emitUp = false;\n  this._emitDown = false;\n}\nSliceStream.prototype._transform = function(chunk, encoding, done) {\n  this._offset += chunk.length;\n  if (!this._emitUp && this._offset >= this._start) {\n    this._emitUp = true;\n    var start = chunk.length - (this._offset - this._start);\n    if (this._offset > this._end) {\n      var end = chunk.length - (this._offset - this._end);\n      this._emitDown = true;\n      this.push(chunk.slice(start, end));\n    } else {\n      this.push(chunk.slice(start, chunk.length));\n    }\n    return done();\n  }\n  if (this._emitUp && !this._emitDown) {\n    if (this._offset >= this._end) {\n      this._emitDown = true;\n      this.push(chunk.slice(0, chunk.length - (this._offset - this._end)));\n    } else {\n      this.push(chunk);\n    }\n    return done();\n  }\n  return done();\n};\nexports.slice = function(start, end) {\n  return new SliceStream(start, end);\n};\n","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"async_hooks\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"buffer\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"crypto\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"http\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"https\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:crypto\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:fs/promises\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:os\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:path\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:stream\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:util\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"stream\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"url\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"util\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"zlib\");","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar webEncoding = require('web-encoding');\nvar webStream = require('@remix-run/web-stream');\n\n/**\n * @implements {globalThis.Blob}\n */\nconst WebBlob = class Blob {\n  /**\n   * @param {BlobPart[]} [init]\n   * @param {BlobPropertyBag} [options]\n   */\n  constructor(init = [], options = {}) {\n    /** @type {Uint8Array[]} */\n    const parts = [];\n\n    let size = 0;\n    for (const part of init) {\n      if (typeof part === \"string\") {\n        const bytes = new webEncoding.TextEncoder().encode(part);\n        parts.push(bytes);\n        size += bytes.byteLength;\n      } else if (part instanceof WebBlob) {\n        size += part.size;\n        // @ts-ignore - `_parts` is marked private so TS will complain about\n        // accessing it.\n        parts.push(...part._parts);\n      } else if (part instanceof ArrayBuffer) {\n        parts.push(new Uint8Array(part));\n        size += part.byteLength;\n      } else if (part instanceof Uint8Array) {\n        parts.push(part);\n        size += part.byteLength;\n      } else if (ArrayBuffer.isView(part)) {\n        const { buffer, byteOffset, byteLength } = part;\n        parts.push(new Uint8Array(buffer, byteOffset, byteLength));\n        size += byteLength;\n      } else {\n        const bytes = new webEncoding.TextEncoder().encode(String(part));\n        parts.push(bytes);\n        size += bytes.byteLength;\n      }\n    }\n\n    /** @private */\n    this._size = size;\n    /** @private */\n    this._type = readType(options.type);\n    /** @private */\n    this._parts = parts;\n\n    Object.defineProperties(this, {\n      _size: { enumerable: false },\n      _type: { enumerable: false },\n      _parts: { enumerable: false },\n    });\n  }\n\n  /**\n   * A string indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   * @type {string}\n   */\n  get type() {\n    return this._type\n  }\n  /**\n   * The size, in bytes, of the data contained in the Blob object.\n   * @type {number}\n   */\n  get size() {\n    return this._size\n  }\n\n  /**\n   * Returns a new Blob object containing the data in the specified range of\n   * bytes of the blob on which it's called.\n   * @param {number} [start=0] - An index into the Blob indicating the first\n   * byte to include in the new Blob. If you specify a negative value, it's\n   * treated as an offset from the end of the Blob toward the beginning. For\n   * example, `-10` would be the 10th from last byte in the Blob. The default\n   * value is `0`. If you specify a value for start that is larger than the\n   * size of the source Blob, the returned Blob has size 0 and contains no\n   * data.\n   * @param {number} [end] - An index into the `Blob` indicating the first byte\n   *  that will *not* be included in the new `Blob` (i.e. the byte exactly at\n   * this index is not included). If you specify a negative value, it's treated\n   * as an offset from the end of the Blob toward the beginning. For example,\n   * `-10` would be the 10th from last byte in the `Blob`. The default value is\n   * size.\n   * @param {string} [type] - The content type to assign to the new Blob;\n   * this will be the value of its type property. The default value is an empty\n   * string.\n   * @returns {Blob}\n   */\n  slice(start = 0, end = this.size, type = \"\") {\n    const { size, _parts } = this;\n    let offset = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n\n    let limit = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n    const span = Math.max(limit - offset, 0);\n    const blob = new Blob([], { type });\n\n    if (span === 0) {\n      return blob\n    }\n\n    let blobSize = 0;\n    const blobParts = [];\n    for (const part of _parts) {\n      const { byteLength } = part;\n      if (offset > 0 && byteLength <= offset) {\n        offset -= byteLength;\n        limit -= byteLength;\n      } else {\n        const chunk = part.subarray(offset, Math.min(byteLength, limit));\n        blobParts.push(chunk);\n        blobSize += chunk.byteLength;\n        // no longer need to take that into account\n        offset = 0;\n\n        // don't add the overflow to new blobParts\n        if (blobSize >= span) {\n          break\n        }\n      }\n    }\n\n    blob._parts = blobParts;\n    blob._size = blobSize;\n\n    return blob\n  }\n\n  /**\n   * Returns a promise that resolves with an ArrayBuffer containing the entire\n   * contents of the Blob as binary data.\n   * @returns {Promise<ArrayBuffer>}\n   */\n  // eslint-disable-next-line require-await\n  async arrayBuffer() {\n    const buffer = new ArrayBuffer(this.size);\n    const bytes = new Uint8Array(buffer);\n    let offset = 0;\n    for (const part of this._parts) {\n      bytes.set(part, offset);\n      offset += part.byteLength;\n    }\n    return buffer\n  }\n\n  /**\n   * Returns a promise that resolves with a USVString containing the entire\n   * contents of the Blob interpreted as UTF-8 text.\n   * @returns {Promise<string>}\n   */\n  // eslint-disable-next-line require-await\n  async text() {\n    const decoder = new webEncoding.TextDecoder();\n    let text = \"\";\n    for (const part of this._parts) {\n      text += decoder.decode(part);\n    }\n    return text\n  }\n\n  /**\n   * @returns {BlobStream}\n   */\n  stream() {\n    return new BlobStream(this._parts)\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return \"[object Blob]\"\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"Blob\"\n  }\n};\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.Blob} */\nconst Blob = WebBlob;\n\n/**\n * Blob stream is a `ReadableStream` extension optimized to have minimal\n * overhead when consumed as `AsyncIterable<Uint8Array>`.\n * @extends {ReadableStream<Uint8Array>}\n * @implements {AsyncIterable<Uint8Array>}\n */\nclass BlobStream extends webStream.ReadableStream {\n  /**\n   * @param {Uint8Array[]} chunks\n   */\n  constructor(chunks) {\n    // @ts-ignore\n    super(new BlobStreamController(chunks.values()), { type: \"bytes\" });\n    /** @private */\n    this._chunks = chunks;\n  }\n\n  /**\n   * @param {Object} [_options]\n   * @property {boolean} [_options.preventCancel]\n   * @returns {AsyncIterator<Uint8Array>}\n   */\n  async *[Symbol.asyncIterator](_options) {\n    const reader = this.getReader();\n    yield* this._chunks;\n    reader.releaseLock();\n  }\n}\n\nclass BlobStreamController {\n  /**\n   * @param {Iterator<Uint8Array>} chunks\n   */\n  constructor(chunks) {\n    this.chunks = chunks;\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  start(controller) {\n    this.work(controller);\n    this.isWorking = false;\n    this.isCancelled = false;\n  }\n  /**\n   *\n   * @param {ReadableStreamDefaultController} controller\n   */\n  async work(controller) {\n    const { chunks } = this;\n\n    this.isWorking = true;\n    while (!this.isCancelled && (controller.desiredSize || 0) > 0) {\n      let next = null;\n      try {\n        next = chunks.next();\n      } catch (error) {\n        controller.error(error);\n        break\n      }\n\n      if (next) {\n        if (!next.done && !this.isCancelled) {\n          controller.enqueue(next.value);\n        } else {\n          controller.close();\n        }\n      }\n    }\n\n    this.isWorking = false;\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  pull(controller) {\n    if (!this.isWorking) {\n      this.work(controller);\n    }\n  }\n  cancel() {\n    this.isCancelled = true;\n  }\n}\n\n/**\n * @param {string} [input]\n * @returns {string}\n */\nconst readType = (input = \"\") => {\n  const type = String(input).toLowerCase();\n  return /[^\\u0020-\\u007E]/.test(type) ? \"\" : type\n};\n\nObject.defineProperty(exports, 'TextDecoder', {\n  enumerable: true,\n  get: function () {\n    return webEncoding.TextDecoder;\n  }\n});\nObject.defineProperty(exports, 'TextEncoder', {\n  enumerable: true,\n  get: function () {\n    return webEncoding.TextEncoder;\n  }\n});\nObject.defineProperty(exports, 'ReadableStream', {\n  enumerable: true,\n  get: function () {\n    return webStream.ReadableStream;\n  }\n});\nexports.Blob = Blob;\n//# sourceMappingURL=blob.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar webEncoding = require('web-encoding');\nvar webStream = require('@remix-run/web-stream');\nvar blob = require('./blob.cjs');\n\n/** @type {typeof globalThis.Blob} */\n// Our first choise is to use global `Blob` because it may be available e.g. in\n// electron renderrer process. If not available fall back to node native\n// implementation, if also not available use our implementation.\nconst Blob =\n  globalThis.Blob || \n  // Disable node native blob until impractical perf issue is fixed\n  // @see https://github.com/nodejs/node/issues/42108\n  // NodeBlob ||\n  blob.Blob;\n\nObject.defineProperty(exports, 'TextDecoder', {\n  enumerable: true,\n  get: function () {\n    return webEncoding.TextDecoder;\n  }\n});\nObject.defineProperty(exports, 'TextEncoder', {\n  enumerable: true,\n  get: function () {\n    return webEncoding.TextEncoder;\n  }\n});\nObject.defineProperty(exports, 'ReadableStream', {\n  enumerable: true,\n  get: function () {\n    return webStream.ReadableStream;\n  }\n});\nexports.Blob = Blob;\n//# sourceMappingURL=lib.node.cjs.map\n","'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst zlib = require('zlib');\nconst fs = require('fs');\nconst mime = require('mrmime');\nconst dataUriToBuffer = require('data-uri-to-buffer');\nconst buffer = require('buffer');\nconst Stream = require('stream');\nconst util = require('util');\nconst webBlob = require('@remix-run/web-blob');\nconst webFile = require('@remix-run/web-file');\nconst webFormData = require('@remix-run/web-form-data');\nconst crypto = require('crypto');\nconst multipartParser = require('@web3-storage/multipart-parser');\nconst url = require('url');\nconst abortController = require('abort-controller');\n\nclass FetchBaseError extends Error {\n\t/**\n\t * @param {string} message \n\t * @param {string} type \n\t */\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n/**\n * @typedef {{\n * address?: string\n * code: string\n * dest?: string\n * errno: number\n * info?: object\n * message: string\n * path?: string\n * port?: number\n * syscall: string\n * }} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} type -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {any} object\n * @return {obj is URLSearchParams}\n */\nconst isURLSearchParameters = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.has === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.sort === \"function\" &&\n\t\tobject[NAME] === \"URLSearchParams\"\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} object\n * @return {object is Blob}\n */\nconst isBlob = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.arrayBuffer === \"function\" &&\n\t\ttypeof object.type === \"string\" &&\n\t\ttypeof object.stream === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {object is FormData}\n */\nfunction isFormData(object) {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.keys === \"function\" &&\n\t\ttypeof object.values === \"function\" &&\n\t\ttypeof object.entries === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\tobject[NAME] === \"FormData\"\n\t);\n}\n\n/**\n * Detect form data input from form-data module\n *\n * @param {any} value\n * @returns {value is Stream & {getBoundary():string, hasKnownLength():boolean, getLengthSync():number|null}}\n */\nconst isMultipartFormDataStream = (value) => {\n\treturn (\n\t\tvalue instanceof Stream === true &&\n\t\ttypeof value.getBoundary === \"function\" &&\n\t\ttypeof value.hasKnownLength === \"function\" &&\n\t\ttypeof value.getLengthSync === \"function\"\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {any} object\n * @return {obj is AbortSignal}\n */\nconst isAbortSignal = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\t(object[NAME] === \"AbortSignal\" || object[NAME] === \"EventTarget\")\n\t);\n};\n\n/**\n * Check if `value` is a ReadableStream.\n *\n * @param {*} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) => {\n\treturn (\n\t\ttypeof value === \"object\" &&\n\t\ttypeof value.getReader === \"function\" &&\n\t\ttypeof value.cancel === \"function\" &&\n\t\ttypeof value.tee === \"function\"\n\t);\n};\n\n/**\n *\n * @param {any} value\n * @returns {value is Iterable<unknown>}\n */\nconst isIterable = (value) => value && Symbol.iterator in value;\n\nconst carriage = '\\r\\n';\nconst dashes = '-'.repeat(2);\nconst carriageLength = Buffer.byteLength(carriage);\n\n/**\n * @param {string} boundary\n */\nconst getFooter = boundary => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;\n\n/**\n * @param {string} boundary\n * @param {string} name\n * @param {*} field\n *\n * @return {string}\n */\nfunction getHeader(boundary, name, field) {\n\tlet header = '';\n\n\theader += `${dashes}${boundary}${carriage}`;\n\theader += `Content-Disposition: form-data; name=\"${name}\"`;\n\n\tif (isBlob(field)) {\n\t\tconst { name = 'blob', type } = /** @type {Blob & {name?:string}} */ (field);\n\t\theader += `; filename=\"${name}\"${carriage}`;\n\t\theader += `Content-Type: ${type || 'application/octet-stream'}`;\n\t}\n\n\treturn `${header}${carriage.repeat(2)}`;\n}\n\n/**\n * @return {string}\n */\nconst getBoundary = () => crypto.randomBytes(8).toString('hex');\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nasync function * formDataIterator(form, boundary) {\n\tconst encoder = new TextEncoder();\n\tfor (const [name, value] of form) {\n\t\tyield encoder.encode(getHeader(boundary, name, value));\n\n\t\tif (isBlob(value)) {\n\t\t\t// @ts-ignore - we know our streams implement aysnc iteration\n\t\t\tyield * value.stream();\n\t\t} else {\n\t\t\tyield encoder.encode(value);\n\t\t}\n\n\t\tyield encoder.encode(carriage);\n\t}\n\n\tyield encoder.encode(getFooter(boundary));\n}\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nfunction getFormDataLength(form, boundary) {\n\tlet length = 0;\n\n\tfor (const [name, value] of form) {\n\t\tlength += Buffer.byteLength(getHeader(boundary, name, value));\n\n\t\tif (isBlob(value)) {\n\t\t\tlength += value.size;\n\t\t} else {\n\t\t\tlength += Buffer.byteLength(String(value));\n\t\t}\n\n\t\tlength += carriageLength;\n\t}\n\n\tlength += Buffer.byteLength(getFooter(boundary));\n\n\treturn length;\n}\n\n/**\n * @param {Body & {headers?:Headers}} source\n */\nconst toFormData = async (source) => {\n  let { body, headers } = source;\n  const contentType = headers?.get('Content-Type') || '';\n\n  if (contentType.startsWith('application/x-www-form-urlencoded') && body != null) {\n\t\tconst form = new webFormData.FormData();\n\t\tlet bodyText = await source.text();\n\t\tnew URLSearchParams(bodyText).forEach((v, k) => form.append(k, v));\n\t\treturn form;\n  }\n\n  const [type, boundary] = contentType.split(/\\s*;\\s*boundary=/);\n  if (type === 'multipart/form-data' && boundary != null && body != null) {\n    const form = new webFormData.FormData();\n    const parts = multipartParser.iterateMultipart(body, boundary);\n    for await (const { name, data, filename, contentType } of parts) {\n      if (typeof filename === 'string') {\n        form.append(name, new webFile.File([data], filename, { type: contentType }));\n      } else if (typeof filename !== 'undefined') {\n        form.append(name, new webFile.File([], '', { type: contentType }));\n      } else {\n        form.append(name, new TextDecoder().decode(data), filename);\n      }\n    }\n    return form\n  } else {\n    throw new TypeError('Could not parse content as FormData.')\n  }\n};\n\nconst encoder = new util.TextEncoder();\nconst decoder = new util.TextDecoder();\n\n/**\n * @param {string} text\n */\nconst encode = text => encoder.encode(text);\n\n/**\n * @param {Uint8Array} bytes\n */\nconst decode = bytes => decoder.decode(bytes);\n\n// @ts-check\nconst {readableHighWaterMark} = new Stream.Readable();\n\nconst INTERNALS$2 = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n * @implements {globalThis.Body}\n */\n\nclass Body {\n\t/**\n\t * @param {BodyInit|Stream|null} body\n\t * @param {{size?:number}} options\n\t */\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tconst state = {\n\t\t\t/** @type {null|ReadableStream<Uint8Array>} */\n\t\t\tbody: null,\n\t\t\t/** @type {string|null} */\n\t\t\ttype: null,\n\t\t\t/** @type {number|null} */\n\t\t\tsize: null,\n\t\t\t/** @type {null|string} */\n\t\t\tboundary: null,\n\t\t\tdisturbed: false,\n\t\t\t/** @type {null|Error} */\n\t\t\terror: null\n\t\t};\n\t\t/** @private */\n\t\tthis[INTERNALS$2] = state;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tstate.body = null;\n\t\t\tstate.size = 0;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t// Body is a URLSearchParams\n\t\t\tconst bytes = encode(body.toString());\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.type = 'application/x-www-form-urlencoded;charset=UTF-8';\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t\tstate.size = body.size;\n\t\t\tstate.type = body.type || null;\n\t\t\tstate.body = body.stream();\n\t\t} else if (body instanceof Uint8Array) {\n\t\t\t// Body is Buffer\n\t\t\tstate.body = fromBytes(body);\n\t\t\tstate.size = body.byteLength;\n\t\t} else if (util.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tconst bytes = new Uint8Array(body);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tconst bytes = new Uint8Array(body.buffer, body.byteOffset, body.byteLength);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if (isReadableStream(body)) {\n\t\t\t// Body is stream\n\t\t\tstate.body = body;\n\t\t} else if (isFormData(body)) {\n\t\t\t// Body is an instance of formdata-node\n\t\t\tconst boundary = `NodeFetchFormDataBoundary${getBoundary()}`;\n\t\t\tstate.type = `multipart/form-data; boundary=${boundary}`;\n\t\t\tstate.size = getFormDataLength(body, boundary);\n\t\t\tstate.body = fromAsyncIterable(formDataIterator(body, boundary));\n\t\t} else if (isMultipartFormDataStream(body)) {\n\t\t\tstate.type = `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t\tstate.size = body.hasKnownLength() ? body.getLengthSync() : null;\n\t\t\tstate.body = fromStream(body);\n\t\t} else if (body instanceof Stream) {\n\t\t\tstate.body = fromStream(body);\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tconst bytes = encode(String(body));\n\t\t\tstate.type = 'text/plain;charset=UTF-8';\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.body = fromBytes(bytes);\n\t\t}\n\n\t\tthis.size = size;\n\n\t\t// if (body instanceof Stream) {\n\t\t// \tbody.on('error', err => {\n\t\t// \t\tconst error = err instanceof FetchBaseError ?\n\t\t// \t\t\terr :\n\t\t// \t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${err.message}`, 'system', err);\n\t\t// \t\tthis[INTERNALS].error = error;\n\t\t// \t});\n\t\t// }\n\t}\n\n\t/** @type {Headers} */\n\t/* c8 ignore next 3 */\n\tget headers() {\n\t\tthrow new TypeError(`'get headers' called on an object that does not implements interface.`)\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS$2].body;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS$2].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS$2].body && this[INTERNALS$2].type) || '';\n\t\tconst buf = await consumeBody(this);\n\n\t\treturn new webBlob.Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\treturn JSON.parse(await this.text());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn decode(buffer);\n\t}\n\n\t/**\n\t * @returns {Promise<FormData>}\n\t */\n\tasync formData() {\n\t\treturn toFormData(this)\n\t}\n}\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tformData: {enumerable: true}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @param {Body & {url?:string}} data\n * @return {Promise<Uint8Array>}\n */\nasync function consumeBody(data) {\n\tconst state = data[INTERNALS$2];\n\tif (state.disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tstate.disturbed = true;\n\n\tif (state.error) {\n\t\tthrow state.error;\n\t}\n\n\tconst {body} = state;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\t/** @type {[Uint8Array|null, Uint8Array[], number]} */\n\tconst [buffer, chunks, limit] = data.size > 0 ?\n\t\t[new Uint8Array(data.size), [], data.size] :\n\t\t[null, [], Infinity];\n\tlet offset = 0;\n\n\tconst source = streamIterator(body);\n\ttry {\n\t\tfor await (const chunk of source) {\n\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\tchunk :\n\t\t\t\tBuffer.from(chunk);\n\n\t\t\tif (offset + bytes.byteLength > limit) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${limit}`, 'max-size');\n\t\t\t\tsource.throw(error);\n\t\t\t\tthrow error;\n\t\t\t} else if (buffer) {\n\t\t\t\tbuffer.set(bytes, offset);\n\t\t\t} else {\n\t\t\t\tchunks.push(bytes);\n\t\t\t}\n\n\t\t\toffset += bytes.byteLength;\n\t\t}\n\n\t\tif (buffer) {\n\t\t\tif (offset < buffer.byteLength) {\n\t\t\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`, 'premature-close');\n\t\t\t} else {\n\t\t\t\treturn buffer;\n\t\t\t}\n\t\t} else {\n\t\t\treturn writeBytes(new Uint8Array(offset), chunks);\n\t\t}\n\t} catch (error) {\n\t\tif (error instanceof FetchBaseError) {\n\t\t\tthrow error;\n\t\t// @ts-expect-error - we know it will have a name\n\t\t} else if (error && error.name === 'AbortError') {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconst e = /** @type {import('./errors/fetch-error').SystemError} */(error);\n\t\t\t// Other errors, such as incorrect content-encoding\n\t\t\tthrow new FetchError(`Invalid response body while trying to fetch ${data.url}: ${e.message}`, 'system', e);\n\t\t}\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param {Body} instance       Response or Request instance\n * @return {ReadableStream<Uint8Array> | null}\n */\nconst clone = instance => {\n\tconst {body} = instance;\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\tif (!body) {\n\t\treturn null;\n\t}\n\n\tconst [left, right] = body.tee();\n\tinstance[INTERNALS$2].body = left;\n\treturn right;\n};\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {Body} source Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = source => source[INTERNALS$2].type;\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {Body} source - Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = source => source[INTERNALS$2].size;\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest - The stream to write to.\n * @param {Body} source - Body object from the Body instance.\n * @returns {void}\n */\nconst writeToStream = (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\tStream.Readable.from(streamIterator(body)).pipe(dest);\n\t}\n};\n\n/**\n * @template T\n * @implements {AsyncGenerator<T, void, void>}\n */\nclass StreamIterableIterator {\n\t/**\n\t * @param {ReadableStream<T>} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.stream = stream;\n\t\tthis.reader = null;\n\t}\n\n\t/**\n\t * @returns {AsyncGenerator<T, void, void>}\n\t */\n\t[Symbol.asyncIterator]() {\n\t\treturn this;\n\t}\n\n\tgetReader() {\n\t\tif (this.reader) {\n\t\t\treturn this.reader;\n\t\t}\n\n\t\tconst reader = this.stream.getReader();\n\t\tthis.reader = reader;\n\t\treturn reader;\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tnext() {\n\t\treturn /** @type {Promise<IteratorResult<T, void>>} */ (this.getReader().read());\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync return() {\n\t\tif (this.reader) {\n\t\t\tawait this.reader.cancel();\n\t\t}\n\n\t\treturn {done: true, value: undefined};\n\t}\n\n\t/**\n\t * \n\t * @param {any} error \n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync throw(error) {\n\t\tawait this.getReader().cancel(error);\n\t\treturn {done: true, value: undefined};\n\t}\n}\n\n/**\n * @template T\n * @param {ReadableStream<T>} stream\n */\nconst streamIterator = stream => new StreamIterableIterator(stream);\n\n/**\n * @param {Uint8Array} buffer\n * @param {Uint8Array[]} chunks\n */\nconst writeBytes = (buffer, chunks) => {\n\tlet offset = 0;\n\tfor (const chunk of chunks) {\n\t\tbuffer.set(chunk, offset);\n\t\toffset += chunk.byteLength;\n\t}\n\n\treturn buffer;\n};\n\n/**\n * @param {Uint8Array} bytes\n * @returns {ReadableStream<Uint8Array>}\n */\n// @ts-ignore\nconst fromBytes = bytes => new webBlob.ReadableStream({\n\tstart(controller) {\n\t\tcontroller.enqueue(bytes);\n\t\tcontroller.close();\n\t}\n});\n\n/**\n * @param {AsyncIterable<Uint8Array>} content\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromAsyncIterable = content =>\n\tnew webBlob.ReadableStream(new AsyncIterablePump(content));\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n */\nclass AsyncIterablePump {\n\t/**\n\t * @param {AsyncIterable<Uint8Array>} source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source[Symbol.asyncIterator]();\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tasync pull(controller) {\n\t\ttry {\n\t\t\twhile (controller.desiredSize || 0 > 0) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst next = await this.source.next();\n\t\t\t\tif (next.done) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(next.value);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcontroller.error(error);\n\t\t}\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (reason) {\n\t\t\tif (typeof this.source.throw === 'function') {\n\t\t\t\tthis.source.throw(reason);\n\t\t\t} else if (typeof this.source.return === 'function') {\n\t\t\t\tthis.source.return();\n\t\t\t}\n\t\t} else if (typeof this.source.return === 'function') {\n\t\t\tthis.source.return();\n\t\t}\n\t}\n}\n\n/**\n * @param {Stream & {readableHighWaterMark?:number}} source\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromStream = source => {\n\tconst pump = new StreamPump(source);\n\tconst stream = new webBlob.ReadableStream(pump, pump);\n\treturn stream;\n};\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n * @implements {QueuingStrategy<Uint8Array>}\n */\nclass StreamPump {\n\t/**\n\t * @param {Stream & {\n\t * \treadableHighWaterMark?: number\n\t * \treadable?:boolean,\n\t * \tresume?: () => void,\n\t * \tpause?: () => void\n\t * \tdestroy?: (error?:Error) => void\n\t * }} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.highWaterMark = stream.readableHighWaterMark || readableHighWaterMark;\n\t\tthis.accumalatedSize = 0;\n\t\tthis.stream = stream;\n\t\tthis.enqueue = this.enqueue.bind(this);\n\t\tthis.error = this.error.bind(this);\n\t\tthis.close = this.close.bind(this);\n\t}\n\n\t/**\n\t * @param {Uint8Array} [chunk]\n\t */\n\tsize(chunk) {\n\t\treturn chunk?.byteLength || 0;\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tstart(controller) {\n\t\tthis.controller = controller;\n\t\tthis.stream.on('data', this.enqueue);\n\t\tthis.stream.once('error', this.error);\n\t\tthis.stream.once('end', this.close);\n\t\tthis.stream.once('close', this.close);\n\t}\n\n\tpull() {\n\t\tthis.resume();\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (this.stream.destroy) {\n\t\t\tthis.stream.destroy(reason);\n\t\t}\n\n\t\tthis.stream.off('data', this.enqueue);\n\t\tthis.stream.off('error', this.error);\n\t\tthis.stream.off('end', this.close);\n\t\tthis.stream.off('close', this.close);\n\t}\n\n\t/**\n\t * @param {Uint8Array|string} chunk\n\t */\n\tenqueue(chunk) {\n\t\tif (this.controller) {\n\t\t\ttry {\n\t\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\t\tchunk :\n\t\t\t\t\tBuffer.from(chunk);\n\n\t\t\t\tconst available = (this.controller.desiredSize || 0) - bytes.byteLength;\n\t\t\t\tthis.controller.enqueue(bytes);\n\t\t\t\tif (available <= 0) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.controller.error(new Error('Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object'));\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (this.stream.pause) {\n\t\t\tthis.stream.pause();\n\t\t}\n\t}\n\n\tresume() {\n\t\tif (this.stream.readable && this.stream.resume) {\n\t\t\tthis.stream.resume();\n\t\t}\n\t}\n\n\tclose() {\n\t\tif (this.controller) {\n\t\t\tthis.controller.close();\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Error} error \n\t */\n\terror(error) {\n\t\tif (this.controller) {\n\t\t\tthis.controller.error(error);\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n}\n\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst validators = /** @type {{validateHeaderName?:(name:string) => any, validateHeaderValue?:(name:string, value:string) => any}} */\n(http);\n\nconst validateHeaderName = typeof validators.validateHeaderName === 'function' ?\n\tvalidators.validateHeaderName :\n\t/**\n\t * @param {string} name\n\t */\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst err = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\nconst validateHeaderValue = typeof validators.validateHeaderValue === 'function' ?\n\tvalidators.validateHeaderValue :\n\t/**\n\t * @param {string} name\n\t * @param {string} value\n\t */\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst err = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n * @implements {globalThis.Headers}\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) ; else if (isIterable(init)) {\n\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\tresult = [...init]\n\t\t\t\t.map(pair => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof pair !== 'object' || util.types.isBoxedPrimitive(pair)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t}).map(pair => {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t});\n\t\t} else if (typeof init === \"object\" && init !== null) {\n\t\t\t// Record<ByteString, ByteString>\n\t\t\tresult.push(...Object.entries(init));\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\t[];\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t * @param {string} value\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* c8 ignore next */\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\t/**\n\t *\n\t * @param {string} name\n\t */\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @param {(value: string, key: string, parent: this) => void} callback\n\t * @param {any} thisArg\n\t * @returns {void}\n\t */\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tReflect.apply(callback, thisArg, [cookies.shift(), name, this]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<string>}\n\t */\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield /** @type {string} */(cookies.shift());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield /** @type {string} */(this.get(name));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield [name, /** @type {string} */(cookies.shift())];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield [name, /** @type {string} */(this.get(name))];\n\t\t\t}\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string[]>} */({}));\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string|string[]>} */({}));\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, /** @type {Record<string, {enumerable:true}>} */ ({}))\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, /** @type {string[][]} */([]))\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n/**\n * Response class\n * \n * @typedef {Object} Ext\n * @property {number} [size]\n * @property {string} [url]\n * @property {number} [counter]\n * @property {number} [highWaterMark]\n * \n * @implements {globalThis.Response}\n */\nclass Response extends Body {\n\t/**\n\t * @param {BodyInit|import('stream').Stream|null} [body] - Readable stream\n\t * @param {ResponseInit & Ext} [options] - Response options\n\t */\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\tconst status = options.status || 200;\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @private\n\t\t*/\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter || 0,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\t/**\n\t * @type {ResponseType}\n\t */\n\tget type() {\n\t\treturn \"default\"\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\t/**\n\t * @type {Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS$1].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @returns {Response}\n\t */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tsize: this.size\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\n/**\n * @param {URL} parsedURL \n * @returns {string}\n */\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n\nconst INTERNALS = Symbol('Request internals');\n\nconst forbiddenMethods = new Set([\"CONNECT\", \"TRACE\", \"TRACK\"]);\nconst normalizedMethods = new Set([\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"POST\", \"PUT\"]);\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {any} object\n * @return {object is Request}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\n\n/**\n * Request class\n * @implements {globalThis.Request}\n *\n * @typedef {Object} RequestState\n * @property {string} method\n * @property {RequestRedirect} redirect\n * @property {globalThis.Headers} headers\n * @property {RequestCredentials} credentials\n * @property {URL} parsedURL\n * @property {AbortSignal|null} signal\n *\n * @typedef {Object} RequestExtraOptions\n * @property {number} [follow]\n * @property {boolean} [compress]\n * @property {number} [size]\n * @property {number} [counter]\n * @property {Agent} [agent]\n * @property {number} [highWaterMark]\n * @property {boolean} [insecureHTTPParser]\n *\n * @typedef {((url:URL) => import('http').Agent | import('https').Agent) | import('http').Agent | import('https').Agent} Agent\n *\n * @typedef {Object} RequestOptions\n * @property {string} [method]\n * @property {ReadableStream<Uint8Array>|null} [body]\n * @property {globalThis.Headers} [headers]\n * @property {RequestRedirect} [redirect]\n *\n */\nclass Request extends Body {\n\t/**\n\t * @param {string|Request|URL} info  Url or Request instance\n\t * @param {RequestInit & RequestExtraOptions} init   Custom options\n\t */\n\tconstructor(info, init = {}) {\n\t\tlet parsedURL;\n\t\t/** @type {RequestOptions & RequestExtraOptions} */\n\t\tlet settings;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(info)) {\n\t\t\tparsedURL = new URL(info.url);\n\t\t\tsettings = (info);\n\t\t} else {\n\t\t\tparsedURL = new URL(info);\n\t\t\tsettings = {};\n\t\t}\n\n\n\n\t\t// Normalize method: https://fetch.spec.whatwg.org/#methods\n\t\tlet method = init.method || settings.method || 'GET';\n\t\tif (forbiddenMethods.has(method.toUpperCase())) {\n\t\t\tthrow new TypeError(`Failed to construct 'Request': '${method}' HTTP method is unsupported.`)\n\t\t} else if (normalizedMethods.has(method.toUpperCase())) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tconst inputBody = init.body != null\n\t\t\t? init.body\n\t\t\t: (isRequest(info) && info.body !== null)\n\t\t\t? clone(info)\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (inputBody != null && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || settings.size || 0\n\t\t});\n\t\tconst input = settings;\n\n\n\t\tconst headers = /** @type {globalThis.Headers} */\n\t\t\t(new Headers(init.headers || input.headers || {}));\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = 'signal' in init\n\t\t\t? init.signal\n\t\t\t: isRequest(input)\n\t\t\t? input.signal\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\tif (!signal) {\n\t\t\tlet AbortControllerConstructor = typeof AbortController != \"undefined\"\n\t\t\t? AbortController\n\t\t\t: abortController.AbortController;\n\t\t\t/** @type {any} */\n\t\t\tlet newSignal = new AbortControllerConstructor().signal;\n\t\t\tsignal = newSignal;\n\t\t}\n\n\t\t/** @type {RequestState} */\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tcredentials: init.credentials || 'same-origin',\n\t\t\tparsedURL,\n\t\t\tsignal: signal || null\n\t\t};\n\n\t\t/** @type {boolean} */\n\t\tthis.keepalive;\n\n\t\t// Node-fetch-only options\n\t\t/** @type {number} */\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\t/** @type {boolean} */\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\t/** @type {number} */\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\t/** @type {Agent|undefined} */\n\t\tthis.agent = init.agent || input.agent;\n\t\t/** @type {number} */\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\t/** @type {boolean} */\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\t/**\n\t * @type {RequestCache}\n\t */\n\tget cache() {\n\t\treturn \"default\"\n\t}\n\n\t/**\n\t * @type {RequestCredentials}\n\t */\n\n\tget credentials() {\n\t\treturn this[INTERNALS].credentials\n\t}\n\n\t/**\n\t * @type {RequestDestination}\n\t */\n\tget destination() {\n\t\treturn \"\"\n\t}\n\n\tget integrity() {\n\t\treturn \"\"\n\t}\n\n\t/** @type {RequestMode} */\n\tget mode() {\n\t\treturn \"cors\"\n\t}\n\n\t/** @type {string} */\n\tget referrer() {\n\t\treturn  \"\"\n\t}\n\n\t/** @type {ReferrerPolicy} */\n\tget referrerPolicy() {\n\t\treturn \"\"\n\t}\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget url() {\n\t\treturn url.format(this[INTERNALS].parsedURL);\n\t}\n\n\t/**\n\t * @type {globalThis.Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/**\n\t * @returns {AbortSignal}\n\t */\n\tget signal() {\n\t\t// @ts-ignore\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  {globalThis.Request}\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n * The options object to be passed to http.request\n *\n * @param {Request & Record<INTERNALS, RequestState>} request -  A Request instance\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\t// @ts-ignore - it does not has a query\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\t// @ts-ignore - not sure what this supposed to do\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends FetchBaseError {\n\t/**\n\t * @param {string} message \n\t * @param {string} [type]\n\t */\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:', 'file:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request.js').default} url - Absolute url or Request instance\n * @param   {RequestInit & import('./request.js').RequestExtraOptions} [options_] - Fetch options\n * @return  {Promise<import('./response.js').default>}\n */\nasync function fetch(url, options_ = {}) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst options = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(options.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${options.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (options.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url.toString());\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.protocol === 'file:') {\n\t\t\tconst stream = fs.createReadStream(new URL(request.url));\n\t\t\tconst type = mime.lookup(request.url) || 'application/octet-stream';\n\t\t\tconst response = new Response(stream, {headers: {'Content-Type': type }});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\t/** @type {Response|null} */\n\t\tlet response = null;\n\t\t/** @type {import('http').IncomingMessage|null} */\n\t\tlet response_ = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body) {\n\t\t\t\trequest.body.cancel(error);\n\t\t\t}\n\n\t\t\tif (!response_) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse_.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', err => {\n\t\t\t// @ts-expect-error - err may not be SystemError\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, err => {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tresponse_?.emit(\"error\", err);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = Object.assign(new Error('Premature close'), {\n\t\t\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse_?.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', incoming => {\n\t\t\tresponse_ = incoming;\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(Number(response_.statusCode))) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : new URL(location, request.url);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL.toString());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\t// Note: We can not use `request.body` because send would have\n\t\t\t\t\t\t\t// consumed it already.\n\t\t\t\t\t\t\tbody: options_.body,\n\t\t\t\t\t\t\tsignal: signal,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tconst isStreamBody =\n\t\t\t\t\t\t\trequestOptions.body instanceof webBlob.ReadableStream ||\n\t\t\t\t\t\t\trequestOptions.body instanceof Stream.Readable;\n\t\t\t\t\t\tif (response_.statusCode !== 303 && isStreamBody) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tfetch(new Request(locationURL.href, requestOptions)).then(resolve, reject);\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = Stream.pipeline(response_, new Stream.PassThrough(), reject);\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = Stream.pipeline(body, zlib.createGunzip(zlibOptions), reject);\n\t\t\t\tresponse = new Response(fromAsyncIterable(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = Stream.pipeline(response_, new Stream.PassThrough(), reject);\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib.createInflate(), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib.createInflateRaw(), reject);\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(fromAsyncIterable(body), responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = Stream.pipeline(body, zlib.createBrotliDecompress(), reject);\n\t\t\t\tresponse = new Response(fromAsyncIterable(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(fromAsyncIterable(body), responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(request_, request);\n\t});\n}\n\n/**\n *\n * @param {import('http').ClientRequest} request\n * @param {(error:Error) => void} errorCallback\n */\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = buffer.Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\t/** @type {Buffer | undefined} */\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = Object.assign(new Error('Premature close'), {\n\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t});\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\t/** @param {Buffer} buf */\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = buffer.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tbuffer.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tbuffer.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\tconst removeSocketListeners = () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t};\n\n\t\trequest.on('close', removeSocketListeners);\n\t\trequest.on('abort', removeSocketListeners);\n\t});\n}\n\nObject.defineProperty(exports, 'Blob', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn webBlob.Blob;\n\t}\n});\nObject.defineProperty(exports, 'ReadableStream', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn webBlob.ReadableStream;\n\t}\n});\nObject.defineProperty(exports, 'File', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn webFile.File;\n\t}\n});\nObject.defineProperty(exports, 'FormData', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn webFormData.FormData;\n\t}\n});\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.default = fetch;\nexports.fetch = fetch;\n\nexports = module.exports = Object.assign(fetch, exports);\n//# sourceMappingURL=lib.node.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar webBlob = require('@remix-run/web-blob');\n\n/**\n * @implements {globalThis.File}\n */\nclass File extends webBlob.Blob {\n  /**\n   *\n   * @param {BlobPart[]} init\n   * @param {string} name - A USVString representing the file name or the path\n   * to the file.\n   * @param {FilePropertyBag} [options]\n   */\n  constructor(\n    init,\n    name = panic(new TypeError(\"File constructor requires name argument\")),\n    options = {}\n  ) {\n    super(init, options);\n    // Per File API spec https://w3c.github.io/FileAPI/#file-constructor\n    // Every \"/\" character of file name must be replaced with a \":\".\n    /** @private */\n    this._name = name;\n    // It appears that browser do not follow the spec here.\n    // String(name).replace(/\\//g, \":\")\n    /** @private */\n    this._lastModified = options.lastModified || Date.now();\n  }\n\n  /**\n   * The name of the file referenced by the File object.\n   * @type {string}\n   */\n  get name() {\n    return this._name\n  }\n\n  /**\n   * The path the URL of the File is relative to.\n   * @type {string}\n   */\n  get webkitRelativePath() {\n    return \"\"\n  }\n\n  /**\n   * Returns the last modified time of the file, in millisecond since the UNIX\n   * epoch (January 1st, 1970 at Midnight).\n   * @returns {number}\n   */\n  get lastModified() {\n    return this._lastModified\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n};\n\nexports.File = File;\n//# sourceMappingURL=file.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar webBlob = require('@remix-run/web-blob');\nvar file = require('./file.cjs');\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.File} */\nconst File = file.File;\n\nObject.defineProperty(exports, 'Blob', {\n\tenumerable: true,\n\tget: function () {\n\t\treturn webBlob.Blob;\n\t}\n});\nexports.File = File;\n//# sourceMappingURL=lib.node.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * @implements {globalThis.FormData}\n */\nclass FormData {\n  /**\n   * @param {HTMLFormElement} [form]\n   */\n  constructor(form) {\n    /**\n     * @private\n     * @readonly\n     * @type {Array<[string, FormDataEntryValue]>}\n     */\n    this._entries = [];\n\n    Object.defineProperty(this, \"_entries\", { enumerable: false });\n\n    if (isHTMLFormElement(form)) {\n      for (const element of form.elements) {\n        if (isSelectElement(element)) {\n          for (const option of element.options) {\n            if (option.selected) {\n              this.append(element.name, option.value);\n            }\n          }\n        } else if (\n          isInputElement(element) &&\n          (element.checked || ![\"radio\", \"checkbox\"].includes(element.type)) &&\n          element.name\n        ) {\n          this.append(element.name, element.value);\n        }\n      }\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"FormData\";\n  }\n\n  /**\n   * Appends a new value onto an existing key inside a FormData object, or adds\n   * the key if it does not already exist.\n   *\n   * The difference between `set` and `append` is that if the specified key\n   * already exists, `set` will overwrite all existing values with the new one,\n   * whereas `append` will append the new value onto the end of the existing\n   * set of values.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value - The name of the field whose data is\n   * contained in value.\n   * @param {string} [filename] - The filename reported to the server, when a\n   * value is a `Blob` or a `File`. The default filename for a `Blob` objects is\n   * `\"blob\"`. The default filename for a `File` is the it's name.\n   */\n  append(\n    name,\n    value = panic(\n      new TypeError(\"FormData.append: requires at least 2 arguments\")\n    ),\n    filename\n  ) {\n    this._entries.push([name, toEntryValue(value, filename)]);\n  }\n\n  /**\n   * Deletes a key and all its values from a FormData object.\n   *\n   * @param {string} name\n   */\n  delete(\n    name = panic(new TypeError(\"FormData.delete: requires string argument\"))\n  ) {\n    const entries = this._entries;\n    let index = 0;\n    while (index < entries.length) {\n      const [entryName] = /** @type {[string, FormDataEntryValue]}*/ (\n        entries[index]\n      );\n      if (entryName === name) {\n        entries.splice(index, 1);\n      } else {\n        index++;\n      }\n    }\n  }\n\n  /**\n   * Returns the first value associated with a given key from within a\n   * FormData object.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue|null}\n   */\n\n  get(name = panic(new TypeError(\"FormData.get: requires string argument\"))) {\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns an array of all the values associated with a given key from within\n   * a FormData.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue[]}\n   */\n  getAll(\n    name = panic(new TypeError(\"FormData.getAll: requires string argument\"))\n  ) {\n    const values = [];\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n   * Returns a boolean stating whether a FormData object contains a certain key.\n   *\n   * @param {string} name\n   */\n\n  has(name = panic(new TypeError(\"FormData.has: requires string argument\"))) {\n    for (const [entryName] of this._entries) {\n      if (entryName === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets a new value for an existing key inside a FormData object, or adds the\n   * key/value if it does not already exist.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value\n   * @param {string} [filename]\n   */\n\n  set(\n    name,\n    value = panic(new TypeError(\"FormData.set: requires at least 2 arguments\")),\n    filename\n  ) {\n    let index = 0;\n    const { _entries: entries } = this;\n    const entryValue = toEntryValue(value, filename);\n    let wasSet = false;\n    while (index < entries.length) {\n      const entry = /** @type {[string, FormDataEntryValue]}*/ (entries[index]);\n      if (entry[0] === name) {\n        if (wasSet) {\n          entries.splice(index, 1);\n        } else {\n          wasSet = true;\n          entry[1] = entryValue;\n          index++;\n        }\n      } else {\n        index++;\n      }\n    }\n\n    if (!wasSet) {\n      entries.push([name, entryValue]);\n    }\n  }\n\n  /**\n   * Method returns an iterator allowing to go through all key/value pairs\n   * contained in this object.\n   */\n  entries() {\n    return this._entries.values();\n  }\n\n  /**\n   * Returns an iterator allowing to go through all keys of the key/value pairs\n   * contained in this object.\n   *\n   * @returns {IterableIterator<string>}\n   */\n  *keys() {\n    for (const [name] of this._entries) {\n      yield name;\n    }\n  }\n\n  /**\n   * Returns an iterator allowing to go through all values contained in this\n   * object.\n   *\n   * @returns {IterableIterator<FormDataEntryValue>}\n   */\n  *values() {\n    for (const [_, value] of this._entries) {\n      yield value;\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this._entries.values();\n  }\n\n  /**\n   * @param {(value: FormDataEntryValue, key: string, parent: globalThis.FormData) => void} fn\n   * @param {any} [thisArg]\n   * @returns {void}\n   */\n  forEach(fn, thisArg) {\n    for (const [key, value] of this._entries) {\n      fn.call(thisArg, value, key, this);\n    }\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is HTMLFormElement}\n */\nconst isHTMLFormElement = (value) =>\n  Object.prototype.toString.call(value) === \"[object HTMLFormElement]\";\n\n/**\n * @param {string|Blob|File} value\n * @param {string} [filename]\n * @returns {FormDataEntryValue}\n */\nconst toEntryValue = (value, filename) => {\n  if (isFile(value)) {\n    return filename != null ? new BlobFile([value], filename, value) : value;\n  } else if (isBlob(value)) {\n    return new BlobFile([value], filename != null ? filename : \"blob\");\n  } else {\n    if (filename != null && filename != \"\") {\n      throw new TypeError(\n        \"filename is only supported when value is Blob or File\"\n      );\n    }\n    return `${value}`;\n  }\n};\n\n/**\n * @param {any} value\n * @returns {value is File}\n */\nconst isFile = (value) =>\n  Object.prototype.toString.call(value) === \"[object File]\" &&\n  typeof value.name === \"string\";\n\n/**\n * @param {any} value\n * @returns {value is Blob}\n */\nconst isBlob = (value) =>\n  Object.prototype.toString.call(value) === \"[object Blob]\";\n\n/**\n * Simple `File` implementation that just wraps a given blob.\n * @implements {globalThis.File}\n */\nconst BlobFile = class File {\n  /**\n   * @param {[Blob]} parts\n   * @param {string} name\n   * @param {FilePropertyBag} [options]\n   */\n  constructor([blob], name, { lastModified = Date.now() } = {}) {\n    this.blob = blob;\n    this.name = name;\n    this.lastModified = lastModified;\n  }\n  get webkitRelativePath() {\n    return \"\";\n  }\n  get size() {\n    return this.blob.size;\n  }\n  get type() {\n    return this.blob.type;\n  }\n  /**\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [contentType]\n   */\n  slice(start, end, contentType) {\n    return this.blob.slice(start, end, contentType);\n  }\n  stream() {\n    return this.blob.stream();\n  }\n  text() {\n    return this.blob.text();\n  }\n  arrayBuffer() {\n    return this.blob.arrayBuffer();\n  }\n  get [Symbol.toStringTag]() {\n    return \"File\";\n  }\n};\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = (error) => {\n  throw error;\n};\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLSelectElement}\n */\nfunction isSelectElement(element) {\n  return element.tagName === \"SELECT\";\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLInputElement}\n */\nfunction isInputElement(element) {\n  return element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\";\n}\n\nexports.FormData = FormData;\n//# sourceMappingURL=form-data.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar formData = require('./form-data.cjs');\n\n// @ts-check\n\nconst FormData = formData.FormData;\n\nexports.FormData = FormData;\n//# sourceMappingURL=lib.node.cjs.map\n","module.exports = require(\"web-streams-polyfill/ponyfill\");\n","export const mimes = {\n  \"ez\": \"application/andrew-inset\",\n  \"aw\": \"application/applixware\",\n  \"atom\": \"application/atom+xml\",\n  \"atomcat\": \"application/atomcat+xml\",\n  \"atomdeleted\": \"application/atomdeleted+xml\",\n  \"atomsvc\": \"application/atomsvc+xml\",\n  \"dwd\": \"application/atsc-dwd+xml\",\n  \"held\": \"application/atsc-held+xml\",\n  \"rsat\": \"application/atsc-rsat+xml\",\n  \"bdoc\": \"application/bdoc\",\n  \"xcs\": \"application/calendar+xml\",\n  \"ccxml\": \"application/ccxml+xml\",\n  \"cdfx\": \"application/cdfx+xml\",\n  \"cdmia\": \"application/cdmi-capability\",\n  \"cdmic\": \"application/cdmi-container\",\n  \"cdmid\": \"application/cdmi-domain\",\n  \"cdmio\": \"application/cdmi-object\",\n  \"cdmiq\": \"application/cdmi-queue\",\n  \"cu\": \"application/cu-seeme\",\n  \"mpd\": \"application/dash+xml\",\n  \"davmount\": \"application/davmount+xml\",\n  \"dbk\": \"application/docbook+xml\",\n  \"dssc\": \"application/dssc+der\",\n  \"xdssc\": \"application/dssc+xml\",\n  \"es\": \"application/ecmascript\",\n  \"ecma\": \"application/ecmascript\",\n  \"emma\": \"application/emma+xml\",\n  \"emotionml\": \"application/emotionml+xml\",\n  \"epub\": \"application/epub+zip\",\n  \"exi\": \"application/exi\",\n  \"fdt\": \"application/fdt+xml\",\n  \"pfr\": \"application/font-tdpfr\",\n  \"geojson\": \"application/geo+json\",\n  \"gml\": \"application/gml+xml\",\n  \"gpx\": \"application/gpx+xml\",\n  \"gxf\": \"application/gxf\",\n  \"gz\": \"application/gzip\",\n  \"hjson\": \"application/hjson\",\n  \"stk\": \"application/hyperstudio\",\n  \"ink\": \"application/inkml+xml\",\n  \"inkml\": \"application/inkml+xml\",\n  \"ipfix\": \"application/ipfix\",\n  \"its\": \"application/its+xml\",\n  \"jar\": \"application/java-archive\",\n  \"war\": \"application/java-archive\",\n  \"ear\": \"application/java-archive\",\n  \"ser\": \"application/java-serialized-object\",\n  \"class\": \"application/java-vm\",\n  \"js\": \"application/javascript\",\n  \"mjs\": \"application/javascript\",\n  \"json\": \"application/json\",\n  \"map\": \"application/json\",\n  \"json5\": \"application/json5\",\n  \"jsonml\": \"application/jsonml+json\",\n  \"jsonld\": \"application/ld+json\",\n  \"lgr\": \"application/lgr+xml\",\n  \"lostxml\": \"application/lost+xml\",\n  \"hqx\": \"application/mac-binhex40\",\n  \"cpt\": \"application/mac-compactpro\",\n  \"mads\": \"application/mads+xml\",\n  \"webmanifest\": \"application/manifest+json\",\n  \"mrc\": \"application/marc\",\n  \"mrcx\": \"application/marcxml+xml\",\n  \"ma\": \"application/mathematica\",\n  \"nb\": \"application/mathematica\",\n  \"mb\": \"application/mathematica\",\n  \"mathml\": \"application/mathml+xml\",\n  \"mbox\": \"application/mbox\",\n  \"mscml\": \"application/mediaservercontrol+xml\",\n  \"metalink\": \"application/metalink+xml\",\n  \"meta4\": \"application/metalink4+xml\",\n  \"mets\": \"application/mets+xml\",\n  \"maei\": \"application/mmt-aei+xml\",\n  \"musd\": \"application/mmt-usd+xml\",\n  \"mods\": \"application/mods+xml\",\n  \"m21\": \"application/mp21\",\n  \"mp21\": \"application/mp21\",\n  \"mp4s\": \"application/mp4\",\n  \"m4p\": \"application/mp4\",\n  \"doc\": \"application/msword\",\n  \"dot\": \"application/msword\",\n  \"mxf\": \"application/mxf\",\n  \"nq\": \"application/n-quads\",\n  \"nt\": \"application/n-triples\",\n  \"cjs\": \"application/node\",\n  \"bin\": \"application/octet-stream\",\n  \"dms\": \"application/octet-stream\",\n  \"lrf\": \"application/octet-stream\",\n  \"mar\": \"application/octet-stream\",\n  \"so\": \"application/octet-stream\",\n  \"dist\": \"application/octet-stream\",\n  \"distz\": \"application/octet-stream\",\n  \"pkg\": \"application/octet-stream\",\n  \"bpk\": \"application/octet-stream\",\n  \"dump\": \"application/octet-stream\",\n  \"elc\": \"application/octet-stream\",\n  \"deploy\": \"application/octet-stream\",\n  \"exe\": \"application/octet-stream\",\n  \"dll\": \"application/octet-stream\",\n  \"deb\": \"application/octet-stream\",\n  \"dmg\": \"application/octet-stream\",\n  \"iso\": \"application/octet-stream\",\n  \"img\": \"application/octet-stream\",\n  \"msi\": \"application/octet-stream\",\n  \"msp\": \"application/octet-stream\",\n  \"msm\": \"application/octet-stream\",\n  \"buffer\": \"application/octet-stream\",\n  \"oda\": \"application/oda\",\n  \"opf\": \"application/oebps-package+xml\",\n  \"ogx\": \"application/ogg\",\n  \"omdoc\": \"application/omdoc+xml\",\n  \"onetoc\": \"application/onenote\",\n  \"onetoc2\": \"application/onenote\",\n  \"onetmp\": \"application/onenote\",\n  \"onepkg\": \"application/onenote\",\n  \"oxps\": \"application/oxps\",\n  \"relo\": \"application/p2p-overlay+xml\",\n  \"xer\": \"application/patch-ops-error+xml\",\n  \"pdf\": \"application/pdf\",\n  \"pgp\": \"application/pgp-encrypted\",\n  \"asc\": \"application/pgp-signature\",\n  \"sig\": \"application/pgp-signature\",\n  \"prf\": \"application/pics-rules\",\n  \"p10\": \"application/pkcs10\",\n  \"p7m\": \"application/pkcs7-mime\",\n  \"p7c\": \"application/pkcs7-mime\",\n  \"p7s\": \"application/pkcs7-signature\",\n  \"p8\": \"application/pkcs8\",\n  \"ac\": \"application/pkix-attr-cert\",\n  \"cer\": \"application/pkix-cert\",\n  \"crl\": \"application/pkix-crl\",\n  \"pkipath\": \"application/pkix-pkipath\",\n  \"pki\": \"application/pkixcmp\",\n  \"pls\": \"application/pls+xml\",\n  \"ai\": \"application/postscript\",\n  \"eps\": \"application/postscript\",\n  \"ps\": \"application/postscript\",\n  \"provx\": \"application/provenance+xml\",\n  \"cww\": \"application/prs.cww\",\n  \"pskcxml\": \"application/pskc+xml\",\n  \"raml\": \"application/raml+yaml\",\n  \"rdf\": \"application/rdf+xml\",\n  \"owl\": \"application/rdf+xml\",\n  \"rif\": \"application/reginfo+xml\",\n  \"rnc\": \"application/relax-ng-compact-syntax\",\n  \"rl\": \"application/resource-lists+xml\",\n  \"rld\": \"application/resource-lists-diff+xml\",\n  \"rs\": \"application/rls-services+xml\",\n  \"rapd\": \"application/route-apd+xml\",\n  \"sls\": \"application/route-s-tsid+xml\",\n  \"rusd\": \"application/route-usd+xml\",\n  \"gbr\": \"application/rpki-ghostbusters\",\n  \"mft\": \"application/rpki-manifest\",\n  \"roa\": \"application/rpki-roa\",\n  \"rsd\": \"application/rsd+xml\",\n  \"rss\": \"application/rss+xml\",\n  \"rtf\": \"application/rtf\",\n  \"sbml\": \"application/sbml+xml\",\n  \"scq\": \"application/scvp-cv-request\",\n  \"scs\": \"application/scvp-cv-response\",\n  \"spq\": \"application/scvp-vp-request\",\n  \"spp\": \"application/scvp-vp-response\",\n  \"sdp\": \"application/sdp\",\n  \"senmlx\": \"application/senml+xml\",\n  \"sensmlx\": \"application/sensml+xml\",\n  \"setpay\": \"application/set-payment-initiation\",\n  \"setreg\": \"application/set-registration-initiation\",\n  \"shf\": \"application/shf+xml\",\n  \"siv\": \"application/sieve\",\n  \"sieve\": \"application/sieve\",\n  \"smi\": \"application/smil+xml\",\n  \"smil\": \"application/smil+xml\",\n  \"rq\": \"application/sparql-query\",\n  \"srx\": \"application/sparql-results+xml\",\n  \"gram\": \"application/srgs\",\n  \"grxml\": \"application/srgs+xml\",\n  \"sru\": \"application/sru+xml\",\n  \"ssdl\": \"application/ssdl+xml\",\n  \"ssml\": \"application/ssml+xml\",\n  \"swidtag\": \"application/swid+xml\",\n  \"tei\": \"application/tei+xml\",\n  \"teicorpus\": \"application/tei+xml\",\n  \"tfi\": \"application/thraud+xml\",\n  \"tsd\": \"application/timestamped-data\",\n  \"toml\": \"application/toml\",\n  \"trig\": \"application/trig\",\n  \"ttml\": \"application/ttml+xml\",\n  \"ubj\": \"application/ubjson\",\n  \"rsheet\": \"application/urc-ressheet+xml\",\n  \"td\": \"application/urc-targetdesc+xml\",\n  \"vxml\": \"application/voicexml+xml\",\n  \"wasm\": \"application/wasm\",\n  \"wgt\": \"application/widget\",\n  \"hlp\": \"application/winhlp\",\n  \"wsdl\": \"application/wsdl+xml\",\n  \"wspolicy\": \"application/wspolicy+xml\",\n  \"xaml\": \"application/xaml+xml\",\n  \"xav\": \"application/xcap-att+xml\",\n  \"xca\": \"application/xcap-caps+xml\",\n  \"xdf\": \"application/xcap-diff+xml\",\n  \"xel\": \"application/xcap-el+xml\",\n  \"xns\": \"application/xcap-ns+xml\",\n  \"xenc\": \"application/xenc+xml\",\n  \"xhtml\": \"application/xhtml+xml\",\n  \"xht\": \"application/xhtml+xml\",\n  \"xlf\": \"application/xliff+xml\",\n  \"xml\": \"application/xml\",\n  \"xsl\": \"application/xml\",\n  \"xsd\": \"application/xml\",\n  \"rng\": \"application/xml\",\n  \"dtd\": \"application/xml-dtd\",\n  \"xop\": \"application/xop+xml\",\n  \"xpl\": \"application/xproc+xml\",\n  \"xslt\": \"application/xml\",\n  \"xspf\": \"application/xspf+xml\",\n  \"mxml\": \"application/xv+xml\",\n  \"xhvml\": \"application/xv+xml\",\n  \"xvml\": \"application/xv+xml\",\n  \"xvm\": \"application/xv+xml\",\n  \"yang\": \"application/yang\",\n  \"yin\": \"application/yin+xml\",\n  \"zip\": \"application/zip\",\n  \"3gpp\": \"video/3gpp\",\n  \"adp\": \"audio/adpcm\",\n  \"amr\": \"audio/amr\",\n  \"au\": \"audio/basic\",\n  \"snd\": \"audio/basic\",\n  \"mid\": \"audio/midi\",\n  \"midi\": \"audio/midi\",\n  \"kar\": \"audio/midi\",\n  \"rmi\": \"audio/midi\",\n  \"mxmf\": \"audio/mobile-xmf\",\n  \"mp3\": \"audio/mpeg\",\n  \"m4a\": \"audio/mp4\",\n  \"mp4a\": \"audio/mp4\",\n  \"mpga\": \"audio/mpeg\",\n  \"mp2\": \"audio/mpeg\",\n  \"mp2a\": \"audio/mpeg\",\n  \"m2a\": \"audio/mpeg\",\n  \"m3a\": \"audio/mpeg\",\n  \"oga\": \"audio/ogg\",\n  \"ogg\": \"audio/ogg\",\n  \"spx\": \"audio/ogg\",\n  \"opus\": \"audio/ogg\",\n  \"s3m\": \"audio/s3m\",\n  \"sil\": \"audio/silk\",\n  \"wav\": \"audio/wav\",\n  \"weba\": \"audio/webm\",\n  \"xm\": \"audio/xm\",\n  \"ttc\": \"font/collection\",\n  \"otf\": \"font/otf\",\n  \"ttf\": \"font/ttf\",\n  \"woff\": \"font/woff\",\n  \"woff2\": \"font/woff2\",\n  \"exr\": \"image/aces\",\n  \"apng\": \"image/apng\",\n  \"avif\": \"image/avif\",\n  \"bmp\": \"image/bmp\",\n  \"cgm\": \"image/cgm\",\n  \"drle\": \"image/dicom-rle\",\n  \"emf\": \"image/emf\",\n  \"fits\": \"image/fits\",\n  \"g3\": \"image/g3fax\",\n  \"gif\": \"image/gif\",\n  \"heic\": \"image/heic\",\n  \"heics\": \"image/heic-sequence\",\n  \"heif\": \"image/heif\",\n  \"heifs\": \"image/heif-sequence\",\n  \"hej2\": \"image/hej2k\",\n  \"hsj2\": \"image/hsj2\",\n  \"ief\": \"image/ief\",\n  \"jls\": \"image/jls\",\n  \"jp2\": \"image/jp2\",\n  \"jpg2\": \"image/jp2\",\n  \"jpeg\": \"image/jpeg\",\n  \"jpg\": \"image/jpeg\",\n  \"jpe\": \"image/jpeg\",\n  \"jph\": \"image/jph\",\n  \"jhc\": \"image/jphc\",\n  \"jpm\": \"image/jpm\",\n  \"jpx\": \"image/jpx\",\n  \"jpf\": \"image/jpx\",\n  \"jxr\": \"image/jxr\",\n  \"jxra\": \"image/jxra\",\n  \"jxrs\": \"image/jxrs\",\n  \"jxs\": \"image/jxs\",\n  \"jxsc\": \"image/jxsc\",\n  \"jxsi\": \"image/jxsi\",\n  \"jxss\": \"image/jxss\",\n  \"ktx\": \"image/ktx\",\n  \"ktx2\": \"image/ktx2\",\n  \"png\": \"image/png\",\n  \"btif\": \"image/prs.btif\",\n  \"pti\": \"image/prs.pti\",\n  \"sgi\": \"image/sgi\",\n  \"svg\": \"image/svg+xml\",\n  \"svgz\": \"image/svg+xml\",\n  \"t38\": \"image/t38\",\n  \"tif\": \"image/tiff\",\n  \"tiff\": \"image/tiff\",\n  \"tfx\": \"image/tiff-fx\",\n  \"webp\": \"image/webp\",\n  \"wmf\": \"image/wmf\",\n  \"disposition-notification\": \"message/disposition-notification\",\n  \"u8msg\": \"message/global\",\n  \"u8dsn\": \"message/global-delivery-status\",\n  \"u8mdn\": \"message/global-disposition-notification\",\n  \"u8hdr\": \"message/global-headers\",\n  \"eml\": \"message/rfc822\",\n  \"mime\": \"message/rfc822\",\n  \"3mf\": \"model/3mf\",\n  \"gltf\": \"model/gltf+json\",\n  \"glb\": \"model/gltf-binary\",\n  \"igs\": \"model/iges\",\n  \"iges\": \"model/iges\",\n  \"msh\": \"model/mesh\",\n  \"mesh\": \"model/mesh\",\n  \"silo\": \"model/mesh\",\n  \"mtl\": \"model/mtl\",\n  \"obj\": \"model/obj\",\n  \"stpz\": \"model/step+zip\",\n  \"stpxz\": \"model/step-xml+zip\",\n  \"stl\": \"model/stl\",\n  \"wrl\": \"model/vrml\",\n  \"vrml\": \"model/vrml\",\n  \"x3db\": \"model/x3d+fastinfoset\",\n  \"x3dbz\": \"model/x3d+binary\",\n  \"x3dv\": \"model/x3d-vrml\",\n  \"x3dvz\": \"model/x3d+vrml\",\n  \"x3d\": \"model/x3d+xml\",\n  \"x3dz\": \"model/x3d+xml\",\n  \"appcache\": \"text/cache-manifest\",\n  \"manifest\": \"text/cache-manifest\",\n  \"ics\": \"text/calendar\",\n  \"ifb\": \"text/calendar\",\n  \"coffee\": \"text/coffeescript\",\n  \"litcoffee\": \"text/coffeescript\",\n  \"css\": \"text/css\",\n  \"csv\": \"text/csv\",\n  \"html\": \"text/html\",\n  \"htm\": \"text/html\",\n  \"shtml\": \"text/html\",\n  \"jade\": \"text/jade\",\n  \"jsx\": \"text/jsx\",\n  \"less\": \"text/less\",\n  \"markdown\": \"text/markdown\",\n  \"md\": \"text/markdown\",\n  \"mml\": \"text/mathml\",\n  \"mdx\": \"text/mdx\",\n  \"n3\": \"text/n3\",\n  \"txt\": \"text/plain\",\n  \"text\": \"text/plain\",\n  \"conf\": \"text/plain\",\n  \"def\": \"text/plain\",\n  \"list\": \"text/plain\",\n  \"log\": \"text/plain\",\n  \"in\": \"text/plain\",\n  \"ini\": \"text/plain\",\n  \"dsc\": \"text/prs.lines.tag\",\n  \"rtx\": \"text/richtext\",\n  \"sgml\": \"text/sgml\",\n  \"sgm\": \"text/sgml\",\n  \"shex\": \"text/shex\",\n  \"slim\": \"text/slim\",\n  \"slm\": \"text/slim\",\n  \"spdx\": \"text/spdx\",\n  \"stylus\": \"text/stylus\",\n  \"styl\": \"text/stylus\",\n  \"tsv\": \"text/tab-separated-values\",\n  \"t\": \"text/troff\",\n  \"tr\": \"text/troff\",\n  \"roff\": \"text/troff\",\n  \"man\": \"text/troff\",\n  \"me\": \"text/troff\",\n  \"ms\": \"text/troff\",\n  \"ttl\": \"text/turtle\",\n  \"uri\": \"text/uri-list\",\n  \"uris\": \"text/uri-list\",\n  \"urls\": \"text/uri-list\",\n  \"vcard\": \"text/vcard\",\n  \"vtt\": \"text/vtt\",\n  \"yaml\": \"text/yaml\",\n  \"yml\": \"text/yaml\",\n  \"3gp\": \"video/3gpp\",\n  \"3g2\": \"video/3gpp2\",\n  \"h261\": \"video/h261\",\n  \"h263\": \"video/h263\",\n  \"h264\": \"video/h264\",\n  \"m4s\": \"video/iso.segment\",\n  \"jpgv\": \"video/jpeg\",\n  \"jpgm\": \"image/jpm\",\n  \"mj2\": \"video/mj2\",\n  \"mjp2\": \"video/mj2\",\n  \"ts\": \"video/mp2t\",\n  \"mp4\": \"video/mp4\",\n  \"mp4v\": \"video/mp4\",\n  \"mpg4\": \"video/mp4\",\n  \"mpeg\": \"video/mpeg\",\n  \"mpg\": \"video/mpeg\",\n  \"mpe\": \"video/mpeg\",\n  \"m1v\": \"video/mpeg\",\n  \"m2v\": \"video/mpeg\",\n  \"ogv\": \"video/ogg\",\n  \"qt\": \"video/quicktime\",\n  \"mov\": \"video/quicktime\",\n  \"webm\": \"video/webm\"\n};\n\nexport function lookup(extn) {\n\tlet tmp = ('' + extn).trim().toLowerCase();\n\tlet idx = tmp.lastIndexOf('.');\n\treturn mimes[!~idx ? tmp : tmp.substring(++idx)];\n}\n","// In node `export { TextEncoder }` throws:\n// \"Export 'TextEncoder' is not defined in module\"\n// To workaround we first define constants and then export with as.\nconst Encoder = TextEncoder\nconst Decoder = TextDecoder\n\nexport { Encoder as TextEncoder, Decoder as TextDecoder }\n","/**\n * web-streams-polyfill v3.2.1\n */\n/// <reference lib=\"es2015.symbol\" />\nvar SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    function (description) { return \"Symbol(\" + description + \")\"; };\n\n/// <reference lib=\"dom\" />\nfunction noop() {\n    return undefined;\n}\nfunction getGlobals() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    else if (typeof window !== 'undefined') {\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        return global;\n    }\n    return undefined;\n}\nvar globals = getGlobals();\n\nfunction typeIsObject(x) {\n    return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\nvar rethrowAssertionErrorRejection = noop;\n\nvar originalPromise = Promise;\nvar originalPromiseThen = Promise.prototype.then;\nvar originalPromiseResolve = Promise.resolve.bind(originalPromise);\nvar originalPromiseReject = Promise.reject.bind(originalPromise);\nfunction newPromise(executor) {\n    return new originalPromise(executor);\n}\nfunction promiseResolvedWith(value) {\n    return originalPromiseResolve(value);\n}\nfunction promiseRejectedWith(reason) {\n    return originalPromiseReject(reason);\n}\nfunction PerformPromiseThen(promise, onFulfilled, onRejected) {\n    // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n    // approximation.\n    return originalPromiseThen.call(promise, onFulfilled, onRejected);\n}\nfunction uponPromise(promise, onFulfilled, onRejected) {\n    PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n}\nfunction uponFulfillment(promise, onFulfilled) {\n    uponPromise(promise, onFulfilled);\n}\nfunction uponRejection(promise, onRejected) {\n    uponPromise(promise, undefined, onRejected);\n}\nfunction transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n    return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\nfunction setPromiseIsHandledToTrue(promise) {\n    PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\nvar queueMicrotask = (function () {\n    var globalQueueMicrotask = globals && globals.queueMicrotask;\n    if (typeof globalQueueMicrotask === 'function') {\n        return globalQueueMicrotask;\n    }\n    var resolvedPromise = promiseResolvedWith(undefined);\n    return function (fn) { return PerformPromiseThen(resolvedPromise, fn); };\n})();\nfunction reflectCall(F, V, args) {\n    if (typeof F !== 'function') {\n        throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n}\nfunction promiseCall(F, V, args) {\n    try {\n        return promiseResolvedWith(reflectCall(F, V, args));\n    }\n    catch (value) {\n        return promiseRejectedWith(value);\n    }\n}\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\nvar QUEUE_MAX_ARRAY_SIZE = 16384;\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nvar SimpleQueue = /** @class */ (function () {\n    function SimpleQueue() {\n        this._cursor = 0;\n        this._size = 0;\n        // _front and _back are always defined.\n        this._front = {\n            _elements: [],\n            _next: undefined\n        };\n        this._back = this._front;\n        // The cursor is used to avoid calling Array.shift().\n        // It contains the index of the front element of the array inside the\n        // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n        this._cursor = 0;\n        // When there is only one node, size === elements.length - cursor.\n        this._size = 0;\n    }\n    Object.defineProperty(SimpleQueue.prototype, \"length\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // For exception safety, this method is structured in order:\n    // 1. Read state\n    // 2. Calculate required state mutations\n    // 3. Perform state mutations\n    SimpleQueue.prototype.push = function (element) {\n        var oldBack = this._back;\n        var newBack = oldBack;\n        if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n            newBack = {\n                _elements: [],\n                _next: undefined\n            };\n        }\n        // push() is the mutation most likely to throw an exception, so it\n        // goes first.\n        oldBack._elements.push(element);\n        if (newBack !== oldBack) {\n            this._back = newBack;\n            oldBack._next = newBack;\n        }\n        ++this._size;\n    };\n    // Like push(), shift() follows the read -> calculate -> mutate pattern for\n    // exception safety.\n    SimpleQueue.prototype.shift = function () { // must not be called on an empty queue\n        var oldFront = this._front;\n        var newFront = oldFront;\n        var oldCursor = this._cursor;\n        var newCursor = oldCursor + 1;\n        var elements = oldFront._elements;\n        var element = elements[oldCursor];\n        if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n            newFront = oldFront._next;\n            newCursor = 0;\n        }\n        // No mutations before this point.\n        --this._size;\n        this._cursor = newCursor;\n        if (oldFront !== newFront) {\n            this._front = newFront;\n        }\n        // Permit shifted element to be garbage collected.\n        elements[oldCursor] = undefined;\n        return element;\n    };\n    // The tricky thing about forEach() is that it can be called\n    // re-entrantly. The queue may be mutated inside the callback. It is easy to\n    // see that push() within the callback has no negative effects since the end\n    // of the queue is checked for on every iteration. If shift() is called\n    // repeatedly within the callback then the next iteration may return an\n    // element that has been removed. In this case the callback will be called\n    // with undefined values until we either \"catch up\" with elements that still\n    // exist or reach the back of the queue.\n    SimpleQueue.prototype.forEach = function (callback) {\n        var i = this._cursor;\n        var node = this._front;\n        var elements = node._elements;\n        while (i !== elements.length || node._next !== undefined) {\n            if (i === elements.length) {\n                node = node._next;\n                elements = node._elements;\n                i = 0;\n                if (elements.length === 0) {\n                    break;\n                }\n            }\n            callback(elements[i]);\n            ++i;\n        }\n    };\n    // Return the element that would be returned if shift() was called now,\n    // without modifying the queue.\n    SimpleQueue.prototype.peek = function () { // must not be called on an empty queue\n        var front = this._front;\n        var cursor = this._cursor;\n        return front._elements[cursor];\n    };\n    return SimpleQueue;\n}());\n\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n        defaultReaderClosedPromiseInitialize(reader);\n    }\n    else if (stream._state === 'closed') {\n        defaultReaderClosedPromiseInitializeAsResolved(reader);\n    }\n    else {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n    }\n}\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    return ReadableStreamCancel(stream, reason);\n}\nfunction ReadableStreamReaderGenericRelease(reader) {\n    if (reader._ownerReadableStream._state === 'readable') {\n        defaultReaderClosedPromiseReject(reader, new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\"));\n    }\n    else {\n        defaultReaderClosedPromiseResetToRejected(reader, new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\"));\n    }\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n}\n// Helper functions for the readers.\nfunction readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n// Helper functions for the ReadableStreamDefaultReader.\nfunction defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = newPromise(function (resolve, reject) {\n        reader._closedPromise_resolve = resolve;\n        reader._closedPromise_reject = reject;\n    });\n}\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    defaultReaderClosedPromiseInitialize(reader);\n    defaultReaderClosedPromiseReject(reader, reason);\n}\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    defaultReaderClosedPromiseInitialize(reader);\n    defaultReaderClosedPromiseResolve(reader);\n}\nfunction defaultReaderClosedPromiseReject(reader, reason) {\n    if (reader._closedPromise_reject === undefined) {\n        return;\n    }\n    setPromiseIsHandledToTrue(reader._closedPromise);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n}\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\nfunction defaultReaderClosedPromiseResolve(reader) {\n    if (reader._closedPromise_resolve === undefined) {\n        return;\n    }\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n}\n\nvar AbortSteps = SymbolPolyfill('[[AbortSteps]]');\nvar ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\nvar CancelSteps = SymbolPolyfill('[[CancelSteps]]');\nvar PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n/// <reference lib=\"es2015.core\" />\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nvar NumberIsFinite = Number.isFinite || function (x) {\n    return typeof x === 'number' && isFinite(x);\n};\n\n/// <reference lib=\"es2015.core\" />\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nvar MathTrunc = Math.trunc || function (v) {\n    return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nfunction isDictionary(x) {\n    return typeof x === 'object' || typeof x === 'function';\n}\nfunction assertDictionary(obj, context) {\n    if (obj !== undefined && !isDictionary(obj)) {\n        throw new TypeError(context + \" is not an object.\");\n    }\n}\n// https://heycam.github.io/webidl/#idl-callback-functions\nfunction assertFunction(x, context) {\n    if (typeof x !== 'function') {\n        throw new TypeError(context + \" is not a function.\");\n    }\n}\n// https://heycam.github.io/webidl/#idl-object\nfunction isObject(x) {\n    return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\nfunction assertObject(x, context) {\n    if (!isObject(x)) {\n        throw new TypeError(context + \" is not an object.\");\n    }\n}\nfunction assertRequiredArgument(x, position, context) {\n    if (x === undefined) {\n        throw new TypeError(\"Parameter \" + position + \" is required in '\" + context + \"'.\");\n    }\n}\nfunction assertRequiredField(x, field, context) {\n    if (x === undefined) {\n        throw new TypeError(field + \" is required in '\" + context + \"'.\");\n    }\n}\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nfunction convertUnrestrictedDouble(value) {\n    return Number(value);\n}\nfunction censorNegativeZero(x) {\n    return x === 0 ? 0 : x;\n}\nfunction integerPart(x) {\n    return censorNegativeZero(MathTrunc(x));\n}\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nfunction convertUnsignedLongLongWithEnforceRange(value, context) {\n    var lowerBound = 0;\n    var upperBound = Number.MAX_SAFE_INTEGER;\n    var x = Number(value);\n    x = censorNegativeZero(x);\n    if (!NumberIsFinite(x)) {\n        throw new TypeError(context + \" is not a finite number\");\n    }\n    x = integerPart(x);\n    if (x < lowerBound || x > upperBound) {\n        throw new TypeError(context + \" is outside the accepted range of \" + lowerBound + \" to \" + upperBound + \", inclusive\");\n    }\n    if (!NumberIsFinite(x) || x === 0) {\n        return 0;\n    }\n    // TODO Use BigInt if supported?\n    // let xBigInt = BigInt(integerPart(x));\n    // xBigInt = BigInt.asUintN(64, xBigInt);\n    // return Number(xBigInt);\n    return x;\n}\n\nfunction assertReadableStream(x, context) {\n    if (!IsReadableStream(x)) {\n        throw new TypeError(context + \" is not a ReadableStream.\");\n    }\n}\n\n// Abstract operations for the ReadableStream.\nfunction AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n}\n// ReadableStream API exposed for controllers.\nfunction ReadableStreamAddReadRequest(stream, readRequest) {\n    stream._reader._readRequests.push(readRequest);\n}\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    var readRequest = reader._readRequests.shift();\n    if (done) {\n        readRequest._closeSteps();\n    }\n    else {\n        readRequest._chunkSteps(chunk);\n    }\n}\nfunction ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n}\nfunction ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n        return false;\n    }\n    if (!IsReadableStreamDefaultReader(reader)) {\n        return false;\n    }\n    return true;\n}\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nvar ReadableStreamDefaultReader = /** @class */ (function () {\n    function ReadableStreamDefaultReader(stream) {\n        assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n        assertReadableStream(stream, 'First parameter');\n        if (IsReadableStreamLocked(stream)) {\n            throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n        }\n        ReadableStreamReaderGenericInitialize(this, stream);\n        this._readRequests = new SimpleQueue();\n    }\n    Object.defineProperty(ReadableStreamDefaultReader.prototype, \"closed\", {\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get: function () {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n     */\n    ReadableStreamDefaultReader.prototype.cancel = function (reason) {\n        if (reason === void 0) { reason = undefined; }\n        if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n    };\n    /**\n     * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n     *\n     * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n     */\n    ReadableStreamDefaultReader.prototype.read = function () {\n        if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('read from'));\n        }\n        var resolvePromise;\n        var rejectPromise;\n        var promise = newPromise(function (resolve, reject) {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n        });\n        var readRequest = {\n            _chunkSteps: function (chunk) { return resolvePromise({ value: chunk, done: false }); },\n            _closeSteps: function () { return resolvePromise({ value: undefined, done: true }); },\n            _errorSteps: function (e) { return rejectPromise(e); }\n        };\n        ReadableStreamDefaultReaderRead(this, readRequest);\n        return promise;\n    };\n    /**\n     * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n     * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n     * from now on; otherwise, the reader will appear closed.\n     *\n     * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n     * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n     * do so will throw a `TypeError` and leave the reader locked to the stream.\n     */\n    ReadableStreamDefaultReader.prototype.releaseLock = function () {\n        if (!IsReadableStreamDefaultReader(this)) {\n            throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n            return;\n        }\n        if (this._readRequests.length > 0) {\n            throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n    };\n    return ReadableStreamDefaultReader;\n}());\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n    cancel: { enumerable: true },\n    read: { enumerable: true },\n    releaseLock: { enumerable: true },\n    closed: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamDefaultReader',\n        configurable: true\n    });\n}\n// Abstract operations for the readers.\nfunction IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n        return false;\n    }\n    return x instanceof ReadableStreamDefaultReader;\n}\nfunction ReadableStreamDefaultReaderRead(reader, readRequest) {\n    var stream = reader._ownerReadableStream;\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n        readRequest._closeSteps();\n    }\n    else if (stream._state === 'errored') {\n        readRequest._errorSteps(stream._storedError);\n    }\n    else {\n        stream._readableStreamController[PullSteps](readRequest);\n    }\n}\n// Helper functions for the ReadableStreamDefaultReader.\nfunction defaultReaderBrandCheckException(name) {\n    return new TypeError(\"ReadableStreamDefaultReader.prototype.\" + name + \" can only be used on a ReadableStreamDefaultReader\");\n}\n\n/// <reference lib=\"es2018.asynciterable\" />\nvar _a;\nvar AsyncIteratorPrototype;\nif (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n    // We're running inside a ES2018+ environment, but we're compiling to an older syntax.\n    // We cannot access %AsyncIteratorPrototype% without non-ES2018 syntax, but we can re-create it.\n    AsyncIteratorPrototype = (_a = {},\n        // 25.1.3.1 %AsyncIteratorPrototype% [ @@asyncIterator ] ( )\n        // https://tc39.github.io/ecma262/#sec-asynciteratorprototype-asynciterator\n        _a[SymbolPolyfill.asyncIterator] = function () {\n            return this;\n        },\n        _a);\n    Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, { enumerable: false });\n}\n\n/// <reference lib=\"es2018.asynciterable\" />\nvar ReadableStreamAsyncIteratorImpl = /** @class */ (function () {\n    function ReadableStreamAsyncIteratorImpl(reader, preventCancel) {\n        this._ongoingPromise = undefined;\n        this._isFinished = false;\n        this._reader = reader;\n        this._preventCancel = preventCancel;\n    }\n    ReadableStreamAsyncIteratorImpl.prototype.next = function () {\n        var _this = this;\n        var nextSteps = function () { return _this._nextSteps(); };\n        this._ongoingPromise = this._ongoingPromise ?\n            transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n            nextSteps();\n        return this._ongoingPromise;\n    };\n    ReadableStreamAsyncIteratorImpl.prototype.return = function (value) {\n        var _this = this;\n        var returnSteps = function () { return _this._returnSteps(value); };\n        return this._ongoingPromise ?\n            transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n            returnSteps();\n    };\n    ReadableStreamAsyncIteratorImpl.prototype._nextSteps = function () {\n        var _this = this;\n        if (this._isFinished) {\n            return Promise.resolve({ value: undefined, done: true });\n        }\n        var reader = this._reader;\n        if (reader._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('iterate'));\n        }\n        var resolvePromise;\n        var rejectPromise;\n        var promise = newPromise(function (resolve, reject) {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n        });\n        var readRequest = {\n            _chunkSteps: function (chunk) {\n                _this._ongoingPromise = undefined;\n                // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                // FIXME Is this a bug in the specification, or in the test?\n                queueMicrotask(function () { return resolvePromise({ value: chunk, done: false }); });\n            },\n            _closeSteps: function () {\n                _this._ongoingPromise = undefined;\n                _this._isFinished = true;\n                ReadableStreamReaderGenericRelease(reader);\n                resolvePromise({ value: undefined, done: true });\n            },\n            _errorSteps: function (reason) {\n                _this._ongoingPromise = undefined;\n                _this._isFinished = true;\n                ReadableStreamReaderGenericRelease(reader);\n                rejectPromise(reason);\n            }\n        };\n        ReadableStreamDefaultReaderRead(reader, readRequest);\n        return promise;\n    };\n    ReadableStreamAsyncIteratorImpl.prototype._returnSteps = function (value) {\n        if (this._isFinished) {\n            return Promise.resolve({ value: value, done: true });\n        }\n        this._isFinished = true;\n        var reader = this._reader;\n        if (reader._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('finish iterating'));\n        }\n        if (!this._preventCancel) {\n            var result = ReadableStreamReaderGenericCancel(reader, value);\n            ReadableStreamReaderGenericRelease(reader);\n            return transformPromiseWith(result, function () { return ({ value: value, done: true }); });\n        }\n        ReadableStreamReaderGenericRelease(reader);\n        return promiseResolvedWith({ value: value, done: true });\n    };\n    return ReadableStreamAsyncIteratorImpl;\n}());\nvar ReadableStreamAsyncIteratorPrototype = {\n    next: function () {\n        if (!IsReadableStreamAsyncIterator(this)) {\n            return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n        }\n        return this._asyncIteratorImpl.next();\n    },\n    return: function (value) {\n        if (!IsReadableStreamAsyncIterator(this)) {\n            return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n        }\n        return this._asyncIteratorImpl.return(value);\n    }\n};\nif (AsyncIteratorPrototype !== undefined) {\n    Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n// Abstract operations for the ReadableStream.\nfunction AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n    var iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n    iterator._asyncIteratorImpl = impl;\n    return iterator;\n}\nfunction IsReadableStreamAsyncIterator(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n        return false;\n    }\n    try {\n        // noinspection SuspiciousTypeOfGuard\n        return x._asyncIteratorImpl instanceof\n            ReadableStreamAsyncIteratorImpl;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// Helper functions for the ReadableStream.\nfunction streamAsyncIteratorBrandCheckException(name) {\n    return new TypeError(\"ReadableStreamAsyncIterator.\" + name + \" can only be used on a ReadableSteamAsyncIterator\");\n}\n\n/// <reference lib=\"es2015.core\" />\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nvar NumberIsNaN = Number.isNaN || function (x) {\n    // eslint-disable-next-line no-self-compare\n    return x !== x;\n};\n\nfunction CreateArrayFromList(elements) {\n    // We use arrays to represent lists, so this is basically a no-op.\n    // Do a slice though just in case we happen to depend on the unique-ness.\n    return elements.slice();\n}\nfunction CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n// Not implemented correctly\nfunction TransferArrayBuffer(O) {\n    return O;\n}\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction IsDetachedBuffer(O) {\n    return false;\n}\nfunction ArrayBufferSlice(buffer, begin, end) {\n    // ArrayBuffer.prototype.slice is not available on IE10\n    // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n    if (buffer.slice) {\n        return buffer.slice(begin, end);\n    }\n    var length = end - begin;\n    var slice = new ArrayBuffer(length);\n    CopyDataBlockBytes(slice, 0, buffer, begin, length);\n    return slice;\n}\n\nfunction IsNonNegativeNumber(v) {\n    if (typeof v !== 'number') {\n        return false;\n    }\n    if (NumberIsNaN(v)) {\n        return false;\n    }\n    if (v < 0) {\n        return false;\n    }\n    return true;\n}\nfunction CloneAsUint8Array(O) {\n    var buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n    return new Uint8Array(buffer);\n}\n\nfunction DequeueValue(container) {\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n        container._queueTotalSize = 0;\n    }\n    return pair.value;\n}\nfunction EnqueueValueWithSize(container, value, size) {\n    if (!IsNonNegativeNumber(size) || size === Infinity) {\n        throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({ value: value, size: size });\n    container._queueTotalSize += size;\n}\nfunction PeekQueueValue(container) {\n    var pair = container._queue.peek();\n    return pair.value;\n}\nfunction ResetQueue(container) {\n    container._queue = new SimpleQueue();\n    container._queueTotalSize = 0;\n}\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nvar ReadableStreamBYOBRequest = /** @class */ (function () {\n    function ReadableStreamBYOBRequest() {\n        throw new TypeError('Illegal constructor');\n    }\n    Object.defineProperty(ReadableStreamBYOBRequest.prototype, \"view\", {\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get: function () {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ReadableStreamBYOBRequest.prototype.respond = function (bytesWritten) {\n        if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException('respond');\n        }\n        assertRequiredArgument(bytesWritten, 1, 'respond');\n        bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n        if (this._associatedReadableByteStreamController === undefined) {\n            throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (IsDetachedBuffer(this._view.buffer)) ;\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n    };\n    ReadableStreamBYOBRequest.prototype.respondWithNewView = function (view) {\n        if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException('respondWithNewView');\n        }\n        assertRequiredArgument(view, 1, 'respondWithNewView');\n        if (!ArrayBuffer.isView(view)) {\n            throw new TypeError('You can only respond with array buffer views');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n            throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (IsDetachedBuffer(view.buffer)) ;\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n    };\n    return ReadableStreamBYOBRequest;\n}());\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n    respond: { enumerable: true },\n    respondWithNewView: { enumerable: true },\n    view: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamBYOBRequest',\n        configurable: true\n    });\n}\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nvar ReadableByteStreamController = /** @class */ (function () {\n    function ReadableByteStreamController() {\n        throw new TypeError('Illegal constructor');\n    }\n    Object.defineProperty(ReadableByteStreamController.prototype, \"byobRequest\", {\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get: function () {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReadableByteStreamController.prototype, \"desiredSize\", {\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get: function () {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n     * the stream, but once those are read, the stream will become closed.\n     */\n    ReadableByteStreamController.prototype.close = function () {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested) {\n            throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableByteStream._state;\n        if (state !== 'readable') {\n            throw new TypeError(\"The stream (in \" + state + \" state) is not in the readable state and cannot be closed\");\n        }\n        ReadableByteStreamControllerClose(this);\n    };\n    ReadableByteStreamController.prototype.enqueue = function (chunk) {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        assertRequiredArgument(chunk, 1, 'enqueue');\n        if (!ArrayBuffer.isView(chunk)) {\n            throw new TypeError('chunk must be an array buffer view');\n        }\n        if (chunk.byteLength === 0) {\n            throw new TypeError('chunk must have non-zero byteLength');\n        }\n        if (chunk.buffer.byteLength === 0) {\n            throw new TypeError(\"chunk's buffer must have non-zero byteLength\");\n        }\n        if (this._closeRequested) {\n            throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableByteStream._state;\n        if (state !== 'readable') {\n            throw new TypeError(\"The stream (in \" + state + \" state) is not in the readable state and cannot be enqueued to\");\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n    };\n    /**\n     * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n     */\n    ReadableByteStreamController.prototype.error = function (e) {\n        if (e === void 0) { e = undefined; }\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('error');\n        }\n        ReadableByteStreamControllerError(this, e);\n    };\n    /** @internal */\n    ReadableByteStreamController.prototype[CancelSteps] = function (reason) {\n        ReadableByteStreamControllerClearPendingPullIntos(this);\n        ResetQueue(this);\n        var result = this._cancelAlgorithm(reason);\n        ReadableByteStreamControllerClearAlgorithms(this);\n        return result;\n    };\n    /** @internal */\n    ReadableByteStreamController.prototype[PullSteps] = function (readRequest) {\n        var stream = this._controlledReadableByteStream;\n        if (this._queueTotalSize > 0) {\n            var entry = this._queue.shift();\n            this._queueTotalSize -= entry.byteLength;\n            ReadableByteStreamControllerHandleQueueDrain(this);\n            var view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n            readRequest._chunkSteps(view);\n            return;\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n            var buffer = void 0;\n            try {\n                buffer = new ArrayBuffer(autoAllocateChunkSize);\n            }\n            catch (bufferE) {\n                readRequest._errorSteps(bufferE);\n                return;\n            }\n            var pullIntoDescriptor = {\n                buffer: buffer,\n                bufferByteLength: autoAllocateChunkSize,\n                byteOffset: 0,\n                byteLength: autoAllocateChunkSize,\n                bytesFilled: 0,\n                elementSize: 1,\n                viewConstructor: Uint8Array,\n                readerType: 'default'\n            };\n            this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        ReadableStreamAddReadRequest(stream, readRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n    };\n    return ReadableByteStreamController;\n}());\nObject.defineProperties(ReadableByteStreamController.prototype, {\n    close: { enumerable: true },\n    enqueue: { enumerable: true },\n    error: { enumerable: true },\n    byobRequest: { enumerable: true },\n    desiredSize: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableByteStreamController',\n        configurable: true\n    });\n}\n// Abstract operations for the ReadableByteStreamController.\nfunction IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n        return false;\n    }\n    return x instanceof ReadableByteStreamController;\n}\nfunction IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n        return false;\n    }\n    return x instanceof ReadableStreamBYOBRequest;\n}\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (!shouldPull) {\n        return;\n    }\n    if (controller._pulling) {\n        controller._pullAgain = true;\n        return;\n    }\n    controller._pulling = true;\n    // TODO: Test controller argument\n    var pullPromise = controller._pullAlgorithm();\n    uponPromise(pullPromise, function () {\n        controller._pulling = false;\n        if (controller._pullAgain) {\n            controller._pullAgain = false;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }, function (e) {\n        ReadableByteStreamControllerError(controller, e);\n    });\n}\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = new SimpleQueue();\n}\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    var done = false;\n    if (stream._state === 'closed') {\n        done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n        ReadableStreamFulfillReadRequest(stream, filledView, done);\n    }\n    else {\n        ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n}\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n}\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({ buffer: buffer, byteOffset: byteOffset, byteLength: byteLength });\n    controller._queueTotalSize += byteLength;\n}\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n        totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n        ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n        var headOfQueue = queue.peek();\n        var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n        var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n        CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n        if (headOfQueue.byteLength === bytesToCopy) {\n            queue.shift();\n        }\n        else {\n            headOfQueue.byteOffset += bytesToCopy;\n            headOfQueue.byteLength -= bytesToCopy;\n        }\n        controller._queueTotalSize -= bytesToCopy;\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n        totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    return ready;\n}\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    pullIntoDescriptor.bytesFilled += size;\n}\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\n    if (controller._queueTotalSize === 0 && controller._closeRequested) {\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(controller._controlledReadableByteStream);\n    }\n    else {\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n}\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === null) {\n        return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = null;\n    controller._byobRequest = null;\n}\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    while (controller._pendingPullIntos.length > 0) {\n        if (controller._queueTotalSize === 0) {\n            return;\n        }\n        var pullIntoDescriptor = controller._pendingPullIntos.peek();\n        if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n            ReadableByteStreamControllerShiftPendingPullInto(controller);\n            ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        }\n    }\n}\nfunction ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n    var stream = controller._controlledReadableByteStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n        elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    // try {\n    var buffer = TransferArrayBuffer(view.buffer);\n    // } catch (e) {\n    //   readIntoRequest._errorSteps(e);\n    //   return;\n    // }\n    var pullIntoDescriptor = {\n        buffer: buffer,\n        bufferByteLength: buffer.byteLength,\n        byteOffset: view.byteOffset,\n        byteLength: view.byteLength,\n        bytesFilled: 0,\n        elementSize: elementSize,\n        viewConstructor: ctor,\n        readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n        // - No change happens on desiredSize\n        // - The source has already been notified of that there's at least 1 pending read(view)\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        return;\n    }\n    if (stream._state === 'closed') {\n        var emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n        readIntoRequest._closeSteps(emptyView);\n        return;\n    }\n    if (controller._queueTotalSize > 0) {\n        if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n            var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n            ReadableByteStreamControllerHandleQueueDrain(controller);\n            readIntoRequest._chunkSteps(filledView);\n            return;\n        }\n        if (controller._closeRequested) {\n            var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n            ReadableByteStreamControllerError(controller, e);\n            readIntoRequest._errorSteps(e);\n            return;\n        }\n    }\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    var stream = controller._controlledReadableByteStream;\n    if (ReadableStreamHasBYOBReader(stream)) {\n        while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n            ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n        }\n    }\n}\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n        return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n        var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n        var remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos.peek();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    var state = controller._controlledReadableByteStream._state;\n    if (state === 'closed') {\n        ReadableByteStreamControllerRespondInClosedState(controller);\n    }\n    else {\n        ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    return descriptor;\n}\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableByteStream;\n    if (stream._state !== 'readable') {\n        return false;\n    }\n    if (controller._closeRequested) {\n        return false;\n    }\n    if (!controller._started) {\n        return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n        return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        return true;\n    }\n    var desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n        return true;\n    }\n    return false;\n}\nfunction ReadableByteStreamControllerClearAlgorithms(controller) {\n    controller._pullAlgorithm = undefined;\n    controller._cancelAlgorithm = undefined;\n}\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\nfunction ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableByteStream;\n    if (controller._closeRequested || stream._state !== 'readable') {\n        return;\n    }\n    if (controller._queueTotalSize > 0) {\n        controller._closeRequested = true;\n        return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n        var firstPendingPullInto = controller._pendingPullIntos.peek();\n        if (firstPendingPullInto.bytesFilled > 0) {\n            var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n            ReadableByteStreamControllerError(controller, e);\n            throw e;\n        }\n    }\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n}\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableByteStream;\n    if (controller._closeRequested || stream._state !== 'readable') {\n        return;\n    }\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (controller._pendingPullIntos.length > 0) {\n        var firstPendingPullInto = controller._pendingPullIntos.peek();\n        if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n        firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n    }\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    if (ReadableStreamHasDefaultReader(stream)) {\n        if (ReadableStreamGetNumReadRequests(stream) === 0) {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        else {\n            if (controller._pendingPullIntos.length > 0) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n            }\n            var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n            ReadableStreamFulfillReadRequest(stream, transferredView, false);\n        }\n    }\n    else if (ReadableStreamHasBYOBReader(stream)) {\n        // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    else {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\nfunction ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableByteStream;\n    if (stream._state !== 'readable') {\n        return;\n    }\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamError(stream, e);\n}\nfunction ReadableByteStreamControllerGetBYOBRequest(controller) {\n    if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n        var firstDescriptor = controller._pendingPullIntos.peek();\n        var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n        var byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n        SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n        controller._byobRequest = byobRequest;\n    }\n    return controller._byobRequest;\n}\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\n    var state = controller._controlledReadableByteStream._state;\n    if (state === 'errored') {\n        return null;\n    }\n    if (state === 'closed') {\n        return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n}\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos.peek();\n    var state = controller._controlledReadableByteStream._state;\n    if (state === 'closed') {\n        if (bytesWritten !== 0) {\n            throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n        }\n    }\n    else {\n        if (bytesWritten === 0) {\n            throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n        }\n        if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n            throw new RangeError('bytesWritten out of range');\n        }\n    }\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    var firstDescriptor = controller._pendingPullIntos.peek();\n    var state = controller._controlledReadableByteStream._state;\n    if (state === 'closed') {\n        if (view.byteLength !== 0) {\n            throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n        }\n    }\n    else {\n        if (view.byteLength === 0) {\n            throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n        }\n    }\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n        throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n        throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n        throw new RangeError('The region specified by view is larger than byobRequest');\n    }\n    var viewByteLength = view.byteLength;\n    firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n    ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n}\nfunction SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n    controller._controlledReadableByteStream = stream;\n    controller._pullAgain = false;\n    controller._pulling = false;\n    controller._byobRequest = null;\n    // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n    controller._queue = controller._queueTotalSize = undefined;\n    ResetQueue(controller);\n    controller._closeRequested = false;\n    controller._started = false;\n    controller._strategyHWM = highWaterMark;\n    controller._pullAlgorithm = pullAlgorithm;\n    controller._cancelAlgorithm = cancelAlgorithm;\n    controller._autoAllocateChunkSize = autoAllocateChunkSize;\n    controller._pendingPullIntos = new SimpleQueue();\n    stream._readableStreamController = controller;\n    var startResult = startAlgorithm();\n    uponPromise(promiseResolvedWith(startResult), function () {\n        controller._started = true;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }, function (r) {\n        ReadableByteStreamControllerError(controller, r);\n    });\n}\nfunction SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n    var controller = Object.create(ReadableByteStreamController.prototype);\n    var startAlgorithm = function () { return undefined; };\n    var pullAlgorithm = function () { return promiseResolvedWith(undefined); };\n    var cancelAlgorithm = function () { return promiseResolvedWith(undefined); };\n    if (underlyingByteSource.start !== undefined) {\n        startAlgorithm = function () { return underlyingByteSource.start(controller); };\n    }\n    if (underlyingByteSource.pull !== undefined) {\n        pullAlgorithm = function () { return underlyingByteSource.pull(controller); };\n    }\n    if (underlyingByteSource.cancel !== undefined) {\n        cancelAlgorithm = function (reason) { return underlyingByteSource.cancel(reason); };\n    }\n    var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n    if (autoAllocateChunkSize === 0) {\n        throw new TypeError('autoAllocateChunkSize must be greater than 0');\n    }\n    SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n}\nfunction SetUpReadableStreamBYOBRequest(request, controller, view) {\n    request._associatedReadableByteStreamController = controller;\n    request._view = view;\n}\n// Helper functions for the ReadableStreamBYOBRequest.\nfunction byobRequestBrandCheckException(name) {\n    return new TypeError(\"ReadableStreamBYOBRequest.prototype.\" + name + \" can only be used on a ReadableStreamBYOBRequest\");\n}\n// Helper functions for the ReadableByteStreamController.\nfunction byteStreamControllerBrandCheckException(name) {\n    return new TypeError(\"ReadableByteStreamController.prototype.\" + name + \" can only be used on a ReadableByteStreamController\");\n}\n\n// Abstract operations for the ReadableStream.\nfunction AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n}\n// ReadableStream API exposed for controllers.\nfunction ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n    stream._reader._readIntoRequests.push(readIntoRequest);\n}\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    var readIntoRequest = reader._readIntoRequests.shift();\n    if (done) {\n        readIntoRequest._closeSteps(chunk);\n    }\n    else {\n        readIntoRequest._chunkSteps(chunk);\n    }\n}\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n}\nfunction ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n        return false;\n    }\n    if (!IsReadableStreamBYOBReader(reader)) {\n        return false;\n    }\n    return true;\n}\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nvar ReadableStreamBYOBReader = /** @class */ (function () {\n    function ReadableStreamBYOBReader(stream) {\n        assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n        assertReadableStream(stream, 'First parameter');\n        if (IsReadableStreamLocked(stream)) {\n            throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n        }\n        if (!IsReadableByteStreamController(stream._readableStreamController)) {\n            throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                'source');\n        }\n        ReadableStreamReaderGenericInitialize(this, stream);\n        this._readIntoRequests = new SimpleQueue();\n    }\n    Object.defineProperty(ReadableStreamBYOBReader.prototype, \"closed\", {\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get: function () {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n     */\n    ReadableStreamBYOBReader.prototype.cancel = function (reason) {\n        if (reason === void 0) { reason = undefined; }\n        if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n    };\n    /**\n     * Attempts to reads bytes into view, and returns a promise resolved with the result.\n     *\n     * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n     */\n    ReadableStreamBYOBReader.prototype.read = function (view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException('read'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n            return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n            return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n        }\n        if (view.buffer.byteLength === 0) {\n            return promiseRejectedWith(new TypeError(\"view's buffer must have non-zero byteLength\"));\n        }\n        if (IsDetachedBuffer(view.buffer)) ;\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('read from'));\n        }\n        var resolvePromise;\n        var rejectPromise;\n        var promise = newPromise(function (resolve, reject) {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n        });\n        var readIntoRequest = {\n            _chunkSteps: function (chunk) { return resolvePromise({ value: chunk, done: false }); },\n            _closeSteps: function (chunk) { return resolvePromise({ value: chunk, done: true }); },\n            _errorSteps: function (e) { return rejectPromise(e); }\n        };\n        ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n        return promise;\n    };\n    /**\n     * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n     * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n     * from now on; otherwise, the reader will appear closed.\n     *\n     * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n     * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n     * do so will throw a `TypeError` and leave the reader locked to the stream.\n     */\n    ReadableStreamBYOBReader.prototype.releaseLock = function () {\n        if (!IsReadableStreamBYOBReader(this)) {\n            throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n            return;\n        }\n        if (this._readIntoRequests.length > 0) {\n            throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n    };\n    return ReadableStreamBYOBReader;\n}());\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n    cancel: { enumerable: true },\n    read: { enumerable: true },\n    releaseLock: { enumerable: true },\n    closed: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamBYOBReader',\n        configurable: true\n    });\n}\n// Abstract operations for the readers.\nfunction IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n        return false;\n    }\n    return x instanceof ReadableStreamBYOBReader;\n}\nfunction ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n    var stream = reader._ownerReadableStream;\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n        readIntoRequest._errorSteps(stream._storedError);\n    }\n    else {\n        ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n    }\n}\n// Helper functions for the ReadableStreamBYOBReader.\nfunction byobReaderBrandCheckException(name) {\n    return new TypeError(\"ReadableStreamBYOBReader.prototype.\" + name + \" can only be used on a ReadableStreamBYOBReader\");\n}\n\nfunction ExtractHighWaterMark(strategy, defaultHWM) {\n    var highWaterMark = strategy.highWaterMark;\n    if (highWaterMark === undefined) {\n        return defaultHWM;\n    }\n    if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n        throw new RangeError('Invalid highWaterMark');\n    }\n    return highWaterMark;\n}\nfunction ExtractSizeAlgorithm(strategy) {\n    var size = strategy.size;\n    if (!size) {\n        return function () { return 1; };\n    }\n    return size;\n}\n\nfunction convertQueuingStrategy(init, context) {\n    assertDictionary(init, context);\n    var highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n    var size = init === null || init === void 0 ? void 0 : init.size;\n    return {\n        highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n        size: size === undefined ? undefined : convertQueuingStrategySize(size, context + \" has member 'size' that\")\n    };\n}\nfunction convertQueuingStrategySize(fn, context) {\n    assertFunction(fn, context);\n    return function (chunk) { return convertUnrestrictedDouble(fn(chunk)); };\n}\n\nfunction convertUnderlyingSink(original, context) {\n    assertDictionary(original, context);\n    var abort = original === null || original === void 0 ? void 0 : original.abort;\n    var close = original === null || original === void 0 ? void 0 : original.close;\n    var start = original === null || original === void 0 ? void 0 : original.start;\n    var type = original === null || original === void 0 ? void 0 : original.type;\n    var write = original === null || original === void 0 ? void 0 : original.write;\n    return {\n        abort: abort === undefined ?\n            undefined :\n            convertUnderlyingSinkAbortCallback(abort, original, context + \" has member 'abort' that\"),\n        close: close === undefined ?\n            undefined :\n            convertUnderlyingSinkCloseCallback(close, original, context + \" has member 'close' that\"),\n        start: start === undefined ?\n            undefined :\n            convertUnderlyingSinkStartCallback(start, original, context + \" has member 'start' that\"),\n        write: write === undefined ?\n            undefined :\n            convertUnderlyingSinkWriteCallback(write, original, context + \" has member 'write' that\"),\n        type: type\n    };\n}\nfunction convertUnderlyingSinkAbortCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (reason) { return promiseCall(fn, original, [reason]); };\n}\nfunction convertUnderlyingSinkCloseCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function () { return promiseCall(fn, original, []); };\n}\nfunction convertUnderlyingSinkStartCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (controller) { return reflectCall(fn, original, [controller]); };\n}\nfunction convertUnderlyingSinkWriteCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (chunk, controller) { return promiseCall(fn, original, [chunk, controller]); };\n}\n\nfunction assertWritableStream(x, context) {\n    if (!IsWritableStream(x)) {\n        throw new TypeError(context + \" is not a WritableStream.\");\n    }\n}\n\nfunction isAbortSignal(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        return typeof value.aborted === 'boolean';\n    }\n    catch (_a) {\n        // AbortSignal.prototype.aborted throws if its brand check fails\n        return false;\n    }\n}\nvar supportsAbortController = typeof AbortController === 'function';\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nfunction createAbortController() {\n    if (supportsAbortController) {\n        return new AbortController();\n    }\n    return undefined;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nvar WritableStream = /** @class */ (function () {\n    function WritableStream(rawUnderlyingSink, rawStrategy) {\n        if (rawUnderlyingSink === void 0) { rawUnderlyingSink = {}; }\n        if (rawStrategy === void 0) { rawStrategy = {}; }\n        if (rawUnderlyingSink === undefined) {\n            rawUnderlyingSink = null;\n        }\n        else {\n            assertObject(rawUnderlyingSink, 'First parameter');\n        }\n        var strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n        var underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n        InitializeWritableStream(this);\n        var type = underlyingSink.type;\n        if (type !== undefined) {\n            throw new RangeError('Invalid type is specified');\n        }\n        var sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n        var highWaterMark = ExtractHighWaterMark(strategy, 1);\n        SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n    }\n    Object.defineProperty(WritableStream.prototype, \"locked\", {\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get: function () {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n     * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n     * mechanism of the underlying sink.\n     *\n     * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n     * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n     * the stream) if the stream is currently locked.\n     */\n    WritableStream.prototype.abort = function (reason) {\n        if (reason === void 0) { reason = undefined; }\n        if (!IsWritableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$2('abort'));\n        }\n        if (IsWritableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n    };\n    /**\n     * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n     * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n     *\n     * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n     * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n     * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n     */\n    WritableStream.prototype.close = function () {\n        if (!IsWritableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$2('close'));\n        }\n        if (IsWritableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(this)) {\n            return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n        }\n        return WritableStreamClose(this);\n    };\n    /**\n     * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n     * is locked, no other writer can be acquired until this one is released.\n     *\n     * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n     * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n     * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n     */\n    WritableStream.prototype.getWriter = function () {\n        if (!IsWritableStream(this)) {\n            throw streamBrandCheckException$2('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n    };\n    return WritableStream;\n}());\nObject.defineProperties(WritableStream.prototype, {\n    abort: { enumerable: true },\n    close: { enumerable: true },\n    getWriter: { enumerable: true },\n    locked: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n        value: 'WritableStream',\n        configurable: true\n    });\n}\n// Abstract operations for the WritableStream.\nfunction AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n}\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n    if (highWaterMark === void 0) { highWaterMark = 1; }\n    if (sizeAlgorithm === void 0) { sizeAlgorithm = function () { return 1; }; }\n    var stream = Object.create(WritableStream.prototype);\n    InitializeWritableStream(stream);\n    var controller = Object.create(WritableStreamDefaultController.prototype);\n    SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    return stream;\n}\nfunction InitializeWritableStream(stream) {\n    stream._state = 'writable';\n    // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n    // 'erroring' or 'errored'. May be set to an undefined value.\n    stream._storedError = undefined;\n    stream._writer = undefined;\n    // Initialize to undefined first because the constructor of the controller checks this\n    // variable to validate the caller.\n    stream._writableStreamController = undefined;\n    // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n    // producer without waiting for the queued writes to finish.\n    stream._writeRequests = new SimpleQueue();\n    // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n    // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n    stream._inFlightWriteRequest = undefined;\n    // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n    // has been detached.\n    stream._closeRequest = undefined;\n    // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n    // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n    stream._inFlightCloseRequest = undefined;\n    // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n    stream._pendingAbortRequest = undefined;\n    // The backpressure signal set by the controller.\n    stream._backpressure = false;\n}\nfunction IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n        return false;\n    }\n    return x instanceof WritableStream;\n}\nfunction IsWritableStreamLocked(stream) {\n    if (stream._writer === undefined) {\n        return false;\n    }\n    return true;\n}\nfunction WritableStreamAbort(stream, reason) {\n    var _a;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n        return promiseResolvedWith(undefined);\n    }\n    stream._writableStreamController._abortReason = reason;\n    (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n    // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n    // but it doesn't know that signaling abort runs author code that might have changed the state.\n    // Widen the type again by casting to WritableStreamState.\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n        return promiseResolvedWith(undefined);\n    }\n    if (stream._pendingAbortRequest !== undefined) {\n        return stream._pendingAbortRequest._promise;\n    }\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n        wasAlreadyErroring = true;\n        // reason will not be used, so don't keep a reference to it.\n        reason = undefined;\n    }\n    var promise = newPromise(function (resolve, reject) {\n        stream._pendingAbortRequest = {\n            _promise: undefined,\n            _resolve: resolve,\n            _reject: reject,\n            _reason: reason,\n            _wasAlreadyErroring: wasAlreadyErroring\n        };\n    });\n    stream._pendingAbortRequest._promise = promise;\n    if (!wasAlreadyErroring) {\n        WritableStreamStartErroring(stream, reason);\n    }\n    return promise;\n}\nfunction WritableStreamClose(stream) {\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n        return promiseRejectedWith(new TypeError(\"The stream (in \" + state + \" state) is not in the writable state and cannot be closed\"));\n    }\n    var promise = newPromise(function (resolve, reject) {\n        var closeRequest = {\n            _resolve: resolve,\n            _reject: reject\n        };\n        stream._closeRequest = closeRequest;\n    });\n    var writer = stream._writer;\n    if (writer !== undefined && stream._backpressure && state === 'writable') {\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n}\n// WritableStream API exposed for controllers.\nfunction WritableStreamAddWriteRequest(stream) {\n    var promise = newPromise(function (resolve, reject) {\n        var writeRequest = {\n            _resolve: resolve,\n            _reject: reject\n        };\n        stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n}\nfunction WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n        WritableStreamStartErroring(stream, error);\n        return;\n    }\n    WritableStreamFinishErroring(stream);\n}\nfunction WritableStreamStartErroring(stream, reason) {\n    var controller = stream._writableStreamController;\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n        WritableStreamFinishErroring(stream);\n    }\n}\nfunction WritableStreamFinishErroring(stream) {\n    stream._state = 'errored';\n    stream._writableStreamController[ErrorSteps]();\n    var storedError = stream._storedError;\n    stream._writeRequests.forEach(function (writeRequest) {\n        writeRequest._reject(storedError);\n    });\n    stream._writeRequests = new SimpleQueue();\n    if (stream._pendingAbortRequest === undefined) {\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring) {\n        abortRequest._reject(storedError);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        return;\n    }\n    var promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n    uponPromise(promise, function () {\n        abortRequest._resolve();\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n        abortRequest._reject(reason);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\nfunction WritableStreamFinishInFlightWrite(stream) {\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n}\nfunction WritableStreamFinishInFlightWriteWithError(stream, error) {\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    WritableStreamDealWithRejection(stream, error);\n}\nfunction WritableStreamFinishInFlightClose(stream) {\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    if (state === 'erroring') {\n        // The error was too late to do anything, so it is ignored.\n        stream._storedError = undefined;\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._resolve();\n            stream._pendingAbortRequest = undefined;\n        }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n        defaultWriterClosedPromiseResolve(writer);\n    }\n}\nfunction WritableStreamFinishInFlightCloseWithError(stream, error) {\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    // Never execute sink abort() after sink close().\n    if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._reject(error);\n        stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n}\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n        return false;\n    }\n    return true;\n}\nfunction WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n        return false;\n    }\n    return true;\n}\nfunction WritableStreamMarkCloseRequestInFlight(stream) {\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n}\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    if (stream._closeRequest !== undefined) {\n        stream._closeRequest._reject(stream._storedError);\n        stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n        defaultWriterClosedPromiseReject(writer, stream._storedError);\n    }\n}\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n        if (backpressure) {\n            defaultWriterReadyPromiseReset(writer);\n        }\n        else {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n    }\n    stream._backpressure = backpressure;\n}\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nvar WritableStreamDefaultWriter = /** @class */ (function () {\n    function WritableStreamDefaultWriter(stream) {\n        assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n        assertWritableStream(stream, 'First parameter');\n        if (IsWritableStreamLocked(stream)) {\n            throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n        }\n        this._ownerWritableStream = stream;\n        stream._writer = this;\n        var state = stream._state;\n        if (state === 'writable') {\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                defaultWriterReadyPromiseInitialize(this);\n            }\n            else {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n            }\n            defaultWriterClosedPromiseInitialize(this);\n        }\n        else if (state === 'erroring') {\n            defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n            defaultWriterClosedPromiseInitialize(this);\n        }\n        else if (state === 'closed') {\n            defaultWriterReadyPromiseInitializeAsResolved(this);\n            defaultWriterClosedPromiseInitializeAsResolved(this);\n        }\n        else {\n            var storedError = stream._storedError;\n            defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n            defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        }\n    }\n    Object.defineProperty(WritableStreamDefaultWriter.prototype, \"closed\", {\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get: function () {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WritableStreamDefaultWriter.prototype, \"desiredSize\", {\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get: function () {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WritableStreamDefaultWriter.prototype, \"ready\", {\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get: function () {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n     */\n    WritableStreamDefaultWriter.prototype.abort = function (reason) {\n        if (reason === void 0) { reason = undefined; }\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n            return promiseRejectedWith(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n    };\n    /**\n     * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n     */\n    WritableStreamDefaultWriter.prototype.close = function () {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n            return promiseRejectedWith(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream)) {\n            return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n    };\n    /**\n     * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n     * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n     * now on; otherwise, the writer will appear closed.\n     *\n     * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n     * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n     * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n     * other producers from writing in an interleaved manner.\n     */\n    WritableStreamDefaultWriter.prototype.releaseLock = function () {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n            return;\n        }\n        WritableStreamDefaultWriterRelease(this);\n    };\n    WritableStreamDefaultWriter.prototype.write = function (chunk) {\n        if (chunk === void 0) { chunk = undefined; }\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n    };\n    return WritableStreamDefaultWriter;\n}());\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n    abort: { enumerable: true },\n    close: { enumerable: true },\n    releaseLock: { enumerable: true },\n    write: { enumerable: true },\n    closed: { enumerable: true },\n    desiredSize: { enumerable: true },\n    ready: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n        value: 'WritableStreamDefaultWriter',\n        configurable: true\n    });\n}\n// Abstract operations for the WritableStreamDefaultWriter.\nfunction IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n        return false;\n    }\n    return x instanceof WritableStreamDefaultWriter;\n}\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    return WritableStreamAbort(stream, reason);\n}\nfunction WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    return WritableStreamClose(stream);\n}\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n        return promiseResolvedWith(undefined);\n    }\n    if (state === 'errored') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    return WritableStreamDefaultWriterClose(writer);\n}\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n        defaultWriterClosedPromiseReject(writer, error);\n    }\n    else {\n        defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n}\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n        defaultWriterReadyPromiseReject(writer, error);\n    }\n    else {\n        defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n}\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n        return null;\n    }\n    if (state === 'closed') {\n        return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\nfunction WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    var releasedError = new TypeError(\"Writer was released and can no longer be used to monitor the stream's closedness\");\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n    // rejected until afterwards. This means that simply testing state will not work.\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n}\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n        return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n        return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n}\nvar closeSentinel = {};\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nvar WritableStreamDefaultController = /** @class */ (function () {\n    function WritableStreamDefaultController() {\n        throw new TypeError('Illegal constructor');\n    }\n    Object.defineProperty(WritableStreamDefaultController.prototype, \"abortReason\", {\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get: function () {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WritableStreamDefaultController.prototype, \"signal\", {\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get: function () {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n     *\n     * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n     * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n     * normal lifecycle of interactions with the underlying sink.\n     */\n    WritableStreamDefaultController.prototype.error = function (e) {\n        if (e === void 0) { e = undefined; }\n        if (!IsWritableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$2('error');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n            // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n            // just treat it as a no-op.\n            return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n    };\n    /** @internal */\n    WritableStreamDefaultController.prototype[AbortSteps] = function (reason) {\n        var result = this._abortAlgorithm(reason);\n        WritableStreamDefaultControllerClearAlgorithms(this);\n        return result;\n    };\n    /** @internal */\n    WritableStreamDefaultController.prototype[ErrorSteps] = function () {\n        ResetQueue(this);\n    };\n    return WritableStreamDefaultController;\n}());\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n    abortReason: { enumerable: true },\n    signal: { enumerable: true },\n    error: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'WritableStreamDefaultController',\n        configurable: true\n    });\n}\n// Abstract operations implementing interface required by the WritableStream.\nfunction IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n        return false;\n    }\n    return x instanceof WritableStreamDefaultController;\n}\nfunction SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n    controller._controlledWritableStream = stream;\n    stream._writableStreamController = controller;\n    // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n    controller._queue = undefined;\n    controller._queueTotalSize = undefined;\n    ResetQueue(controller);\n    controller._abortReason = undefined;\n    controller._abortController = createAbortController();\n    controller._started = false;\n    controller._strategySizeAlgorithm = sizeAlgorithm;\n    controller._strategyHWM = highWaterMark;\n    controller._writeAlgorithm = writeAlgorithm;\n    controller._closeAlgorithm = closeAlgorithm;\n    controller._abortAlgorithm = abortAlgorithm;\n    var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n    var startResult = startAlgorithm();\n    var startPromise = promiseResolvedWith(startResult);\n    uponPromise(startPromise, function () {\n        controller._started = true;\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (r) {\n        controller._started = true;\n        WritableStreamDealWithRejection(stream, r);\n    });\n}\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n    var controller = Object.create(WritableStreamDefaultController.prototype);\n    var startAlgorithm = function () { return undefined; };\n    var writeAlgorithm = function () { return promiseResolvedWith(undefined); };\n    var closeAlgorithm = function () { return promiseResolvedWith(undefined); };\n    var abortAlgorithm = function () { return promiseResolvedWith(undefined); };\n    if (underlyingSink.start !== undefined) {\n        startAlgorithm = function () { return underlyingSink.start(controller); };\n    }\n    if (underlyingSink.write !== undefined) {\n        writeAlgorithm = function (chunk) { return underlyingSink.write(chunk, controller); };\n    }\n    if (underlyingSink.close !== undefined) {\n        closeAlgorithm = function () { return underlyingSink.close(); };\n    }\n    if (underlyingSink.abort !== undefined) {\n        abortAlgorithm = function (reason) { return underlyingSink.abort(reason); };\n    }\n    SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n}\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller) {\n    controller._writeAlgorithm = undefined;\n    controller._closeAlgorithm = undefined;\n    controller._abortAlgorithm = undefined;\n    controller._strategySizeAlgorithm = undefined;\n}\nfunction WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, closeSentinel, 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\nfunction WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    try {\n        return controller._strategySizeAlgorithm(chunk);\n    }\n    catch (chunkSizeE) {\n        WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n        return 1;\n    }\n}\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n}\nfunction WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n    }\n    catch (enqueueE) {\n        WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n// Abstract operations for the WritableStreamDefaultController.\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (!controller._started) {\n        return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n        return;\n    }\n    var state = stream._state;\n    if (state === 'erroring') {\n        WritableStreamFinishErroring(stream);\n        return;\n    }\n    if (controller._queue.length === 0) {\n        return;\n    }\n    var value = PeekQueueValue(controller);\n    if (value === closeSentinel) {\n        WritableStreamDefaultControllerProcessClose(controller);\n    }\n    else {\n        WritableStreamDefaultControllerProcessWrite(controller, value);\n    }\n}\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n        WritableStreamDefaultControllerError(controller, error);\n    }\n}\nfunction WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    var sinkClosePromise = controller._closeAlgorithm();\n    WritableStreamDefaultControllerClearAlgorithms(controller);\n    uponPromise(sinkClosePromise, function () {\n        WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n        WritableStreamFinishInFlightCloseWithError(stream, reason);\n    });\n}\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = controller._writeAlgorithm(chunk);\n    uponPromise(sinkWritePromise, function () {\n        WritableStreamFinishInFlightWrite(stream);\n        var state = stream._state;\n        DequeueValue(controller);\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n        if (stream._state === 'writable') {\n            WritableStreamDefaultControllerClearAlgorithms(controller);\n        }\n        WritableStreamFinishInFlightWriteWithError(stream, reason);\n    });\n}\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n}\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\nfunction WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamDefaultControllerClearAlgorithms(controller);\n    WritableStreamStartErroring(stream, error);\n}\n// Helper functions for the WritableStream.\nfunction streamBrandCheckException$2(name) {\n    return new TypeError(\"WritableStream.prototype.\" + name + \" can only be used on a WritableStream\");\n}\n// Helper functions for the WritableStreamDefaultController.\nfunction defaultControllerBrandCheckException$2(name) {\n    return new TypeError(\"WritableStreamDefaultController.prototype.\" + name + \" can only be used on a WritableStreamDefaultController\");\n}\n// Helper functions for the WritableStreamDefaultWriter.\nfunction defaultWriterBrandCheckException(name) {\n    return new TypeError(\"WritableStreamDefaultWriter.prototype.\" + name + \" can only be used on a WritableStreamDefaultWriter\");\n}\nfunction defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\nfunction defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = newPromise(function (resolve, reject) {\n        writer._closedPromise_resolve = resolve;\n        writer._closedPromise_reject = reject;\n        writer._closedPromiseState = 'pending';\n    });\n}\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    defaultWriterClosedPromiseInitialize(writer);\n    defaultWriterClosedPromiseReject(writer, reason);\n}\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    defaultWriterClosedPromiseInitialize(writer);\n    defaultWriterClosedPromiseResolve(writer);\n}\nfunction defaultWriterClosedPromiseReject(writer, reason) {\n    if (writer._closedPromise_reject === undefined) {\n        return;\n    }\n    setPromiseIsHandledToTrue(writer._closedPromise);\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n}\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\nfunction defaultWriterClosedPromiseResolve(writer) {\n    if (writer._closedPromise_resolve === undefined) {\n        return;\n    }\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n}\nfunction defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = newPromise(function (resolve, reject) {\n        writer._readyPromise_resolve = resolve;\n        writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n}\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    defaultWriterReadyPromiseInitialize(writer);\n    defaultWriterReadyPromiseReject(writer, reason);\n}\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    defaultWriterReadyPromiseInitialize(writer);\n    defaultWriterReadyPromiseResolve(writer);\n}\nfunction defaultWriterReadyPromiseReject(writer, reason) {\n    if (writer._readyPromise_reject === undefined) {\n        return;\n    }\n    setPromiseIsHandledToTrue(writer._readyPromise);\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n}\nfunction defaultWriterReadyPromiseReset(writer) {\n    defaultWriterReadyPromiseInitialize(writer);\n}\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\nfunction defaultWriterReadyPromiseResolve(writer) {\n    if (writer._readyPromise_resolve === undefined) {\n        return;\n    }\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n}\n\n/// <reference lib=\"dom\" />\nvar NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n/// <reference types=\"node\" />\nfunction isDOMExceptionConstructor(ctor) {\n    if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n        return false;\n    }\n    try {\n        new ctor();\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction createDOMExceptionPolyfill() {\n    // eslint-disable-next-line no-shadow\n    var ctor = function DOMException(message, name) {\n        this.message = message || '';\n        this.name = name || 'Error';\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    };\n    ctor.prototype = Object.create(Error.prototype);\n    Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n    return ctor;\n}\n// eslint-disable-next-line no-redeclare\nvar DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nfunction ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n    var reader = AcquireReadableStreamDefaultReader(source);\n    var writer = AcquireWritableStreamDefaultWriter(dest);\n    source._disturbed = true;\n    var shuttingDown = false;\n    // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n    var currentWrite = promiseResolvedWith(undefined);\n    return newPromise(function (resolve, reject) {\n        var abortAlgorithm;\n        if (signal !== undefined) {\n            abortAlgorithm = function () {\n                var error = new DOMException$1('Aborted', 'AbortError');\n                var actions = [];\n                if (!preventAbort) {\n                    actions.push(function () {\n                        if (dest._state === 'writable') {\n                            return WritableStreamAbort(dest, error);\n                        }\n                        return promiseResolvedWith(undefined);\n                    });\n                }\n                if (!preventCancel) {\n                    actions.push(function () {\n                        if (source._state === 'readable') {\n                            return ReadableStreamCancel(source, error);\n                        }\n                        return promiseResolvedWith(undefined);\n                    });\n                }\n                shutdownWithAction(function () { return Promise.all(actions.map(function (action) { return action(); })); }, true, error);\n            };\n            if (signal.aborted) {\n                abortAlgorithm();\n                return;\n            }\n            signal.addEventListener('abort', abortAlgorithm);\n        }\n        // Using reader and writer, read all chunks from this and write them to dest\n        // - Backpressure must be enforced\n        // - Shutdown must stop all activity\n        function pipeLoop() {\n            return newPromise(function (resolveLoop, rejectLoop) {\n                function next(done) {\n                    if (done) {\n                        resolveLoop();\n                    }\n                    else {\n                        // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                        // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                        PerformPromiseThen(pipeStep(), next, rejectLoop);\n                    }\n                }\n                next(false);\n            });\n        }\n        function pipeStep() {\n            if (shuttingDown) {\n                return promiseResolvedWith(true);\n            }\n            return PerformPromiseThen(writer._readyPromise, function () {\n                return newPromise(function (resolveRead, rejectRead) {\n                    ReadableStreamDefaultReaderRead(reader, {\n                        _chunkSteps: function (chunk) {\n                            currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                            resolveRead(false);\n                        },\n                        _closeSteps: function () { return resolveRead(true); },\n                        _errorSteps: rejectRead\n                    });\n                });\n            });\n        }\n        // Errors must be propagated forward\n        isOrBecomesErrored(source, reader._closedPromise, function (storedError) {\n            if (!preventAbort) {\n                shutdownWithAction(function () { return WritableStreamAbort(dest, storedError); }, true, storedError);\n            }\n            else {\n                shutdown(true, storedError);\n            }\n        });\n        // Errors must be propagated backward\n        isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (!preventCancel) {\n                shutdownWithAction(function () { return ReadableStreamCancel(source, storedError); }, true, storedError);\n            }\n            else {\n                shutdown(true, storedError);\n            }\n        });\n        // Closing must be propagated forward\n        isOrBecomesClosed(source, reader._closedPromise, function () {\n            if (!preventClose) {\n                shutdownWithAction(function () { return WritableStreamDefaultWriterCloseWithErrorPropagation(writer); });\n            }\n            else {\n                shutdown();\n            }\n        });\n        // Closing must be propagated backward\n        if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n            var destClosed_1 = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (!preventCancel) {\n                shutdownWithAction(function () { return ReadableStreamCancel(source, destClosed_1); }, true, destClosed_1);\n            }\n            else {\n                shutdown(true, destClosed_1);\n            }\n        }\n        setPromiseIsHandledToTrue(pipeLoop());\n        function waitForWritesToFinish() {\n            // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n            // for that too.\n            var oldCurrentWrite = currentWrite;\n            return PerformPromiseThen(currentWrite, function () { return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined; });\n        }\n        function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n                action(stream._storedError);\n            }\n            else {\n                uponRejection(promise, action);\n            }\n        }\n        function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n                action();\n            }\n            else {\n                uponFulfillment(promise, action);\n            }\n        }\n        function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown) {\n                return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                uponFulfillment(waitForWritesToFinish(), doTheRest);\n            }\n            else {\n                doTheRest();\n            }\n            function doTheRest() {\n                uponPromise(action(), function () { return finalize(originalIsError, originalError); }, function (newError) { return finalize(true, newError); });\n            }\n        }\n        function shutdown(isError, error) {\n            if (shuttingDown) {\n                return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                uponFulfillment(waitForWritesToFinish(), function () { return finalize(isError, error); });\n            }\n            else {\n                finalize(isError, error);\n            }\n        }\n        function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (signal !== undefined) {\n                signal.removeEventListener('abort', abortAlgorithm);\n            }\n            if (isError) {\n                reject(error);\n            }\n            else {\n                resolve(undefined);\n            }\n        }\n    });\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nvar ReadableStreamDefaultController = /** @class */ (function () {\n    function ReadableStreamDefaultController() {\n        throw new TypeError('Illegal constructor');\n    }\n    Object.defineProperty(ReadableStreamDefaultController.prototype, \"desiredSize\", {\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get: function () {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n     * the stream, but once those are read, the stream will become closed.\n     */\n    ReadableStreamDefaultController.prototype.close = function () {\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('close');\n        }\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n            throw new TypeError('The stream is not in a state that permits close');\n        }\n        ReadableStreamDefaultControllerClose(this);\n    };\n    ReadableStreamDefaultController.prototype.enqueue = function (chunk) {\n        if (chunk === void 0) { chunk = undefined; }\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('enqueue');\n        }\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n            throw new TypeError('The stream is not in a state that permits enqueue');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n    };\n    /**\n     * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n     */\n    ReadableStreamDefaultController.prototype.error = function (e) {\n        if (e === void 0) { e = undefined; }\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('error');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n    };\n    /** @internal */\n    ReadableStreamDefaultController.prototype[CancelSteps] = function (reason) {\n        ResetQueue(this);\n        var result = this._cancelAlgorithm(reason);\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        return result;\n    };\n    /** @internal */\n    ReadableStreamDefaultController.prototype[PullSteps] = function (readRequest) {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n            var chunk = DequeueValue(this);\n            if (this._closeRequested && this._queue.length === 0) {\n                ReadableStreamDefaultControllerClearAlgorithms(this);\n                ReadableStreamClose(stream);\n            }\n            else {\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n            readRequest._chunkSteps(chunk);\n        }\n        else {\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        }\n    };\n    return ReadableStreamDefaultController;\n}());\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n    close: { enumerable: true },\n    enqueue: { enumerable: true },\n    error: { enumerable: true },\n    desiredSize: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamDefaultController',\n        configurable: true\n    });\n}\n// Abstract operations for the ReadableStreamDefaultController.\nfunction IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n        return false;\n    }\n    return x instanceof ReadableStreamDefaultController;\n}\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (!shouldPull) {\n        return;\n    }\n    if (controller._pulling) {\n        controller._pullAgain = true;\n        return;\n    }\n    controller._pulling = true;\n    var pullPromise = controller._pullAlgorithm();\n    uponPromise(pullPromise, function () {\n        controller._pulling = false;\n        if (controller._pullAgain) {\n            controller._pullAgain = false;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }\n    }, function (e) {\n        ReadableStreamDefaultControllerError(controller, e);\n    });\n}\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n        return false;\n    }\n    if (!controller._started) {\n        return false;\n    }\n    if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n        return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n        return true;\n    }\n    return false;\n}\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller) {\n    controller._pullAlgorithm = undefined;\n    controller._cancelAlgorithm = undefined;\n    controller._strategySizeAlgorithm = undefined;\n}\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\nfunction ReadableStreamDefaultControllerClose(controller) {\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n        return;\n    }\n    var stream = controller._controlledReadableStream;\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n}\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n        return;\n    }\n    var stream = controller._controlledReadableStream;\n    if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n        ReadableStreamFulfillReadRequest(stream, chunk, false);\n    }\n    else {\n        var chunkSize = void 0;\n        try {\n            chunkSize = controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            ReadableStreamDefaultControllerError(controller, chunkSizeE);\n            throw chunkSizeE;\n        }\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            ReadableStreamDefaultControllerError(controller, enqueueE);\n            throw enqueueE;\n        }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\nfunction ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n        return;\n    }\n    ResetQueue(controller);\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamError(stream, e);\n}\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var state = controller._controlledReadableStream._state;\n    if (state === 'errored') {\n        return null;\n    }\n    if (state === 'closed') {\n        return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n}\n// This is used in the implementation of TransformStream.\nfunction ReadableStreamDefaultControllerHasBackpressure(controller) {\n    if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n        return false;\n    }\n    return true;\n}\nfunction ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n    var state = controller._controlledReadableStream._state;\n    if (!controller._closeRequested && state === 'readable') {\n        return true;\n    }\n    return false;\n}\nfunction SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n    controller._controlledReadableStream = stream;\n    controller._queue = undefined;\n    controller._queueTotalSize = undefined;\n    ResetQueue(controller);\n    controller._started = false;\n    controller._closeRequested = false;\n    controller._pullAgain = false;\n    controller._pulling = false;\n    controller._strategySizeAlgorithm = sizeAlgorithm;\n    controller._strategyHWM = highWaterMark;\n    controller._pullAlgorithm = pullAlgorithm;\n    controller._cancelAlgorithm = cancelAlgorithm;\n    stream._readableStreamController = controller;\n    var startResult = startAlgorithm();\n    uponPromise(promiseResolvedWith(startResult), function () {\n        controller._started = true;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }, function (r) {\n        ReadableStreamDefaultControllerError(controller, r);\n    });\n}\nfunction SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n    var controller = Object.create(ReadableStreamDefaultController.prototype);\n    var startAlgorithm = function () { return undefined; };\n    var pullAlgorithm = function () { return promiseResolvedWith(undefined); };\n    var cancelAlgorithm = function () { return promiseResolvedWith(undefined); };\n    if (underlyingSource.start !== undefined) {\n        startAlgorithm = function () { return underlyingSource.start(controller); };\n    }\n    if (underlyingSource.pull !== undefined) {\n        pullAlgorithm = function () { return underlyingSource.pull(controller); };\n    }\n    if (underlyingSource.cancel !== undefined) {\n        cancelAlgorithm = function (reason) { return underlyingSource.cancel(reason); };\n    }\n    SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n}\n// Helper functions for the ReadableStreamDefaultController.\nfunction defaultControllerBrandCheckException$1(name) {\n    return new TypeError(\"ReadableStreamDefaultController.prototype.\" + name + \" can only be used on a ReadableStreamDefaultController\");\n}\n\nfunction ReadableStreamTee(stream, cloneForBranch2) {\n    if (IsReadableByteStreamController(stream._readableStreamController)) {\n        return ReadableByteStreamTee(stream);\n    }\n    return ReadableStreamDefaultTee(stream);\n}\nfunction ReadableStreamDefaultTee(stream, cloneForBranch2) {\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var reading = false;\n    var readAgain = false;\n    var canceled1 = false;\n    var canceled2 = false;\n    var reason1;\n    var reason2;\n    var branch1;\n    var branch2;\n    var resolveCancelPromise;\n    var cancelPromise = newPromise(function (resolve) {\n        resolveCancelPromise = resolve;\n    });\n    function pullAlgorithm() {\n        if (reading) {\n            readAgain = true;\n            return promiseResolvedWith(undefined);\n        }\n        reading = true;\n        var readRequest = {\n            _chunkSteps: function (chunk) {\n                // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                // successful synchronously-available reads get ahead of asynchronously-available errors.\n                queueMicrotask(function () {\n                    readAgain = false;\n                    var chunk1 = chunk;\n                    var chunk2 = chunk;\n                    // There is no way to access the cloning code right now in the reference implementation.\n                    // If we add one then we'll need an implementation for serializable objects.\n                    // if (!canceled2 && cloneForBranch2) {\n                    //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                    // }\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                    }\n                    reading = false;\n                    if (readAgain) {\n                        pullAlgorithm();\n                    }\n                });\n            },\n            _closeSteps: function () {\n                reading = false;\n                if (!canceled1) {\n                    ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                }\n                if (!canceled2) {\n                    ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                }\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            },\n            _errorSteps: function () {\n                reading = false;\n            }\n        };\n        ReadableStreamDefaultReaderRead(reader, readRequest);\n        return promiseResolvedWith(undefined);\n    }\n    function cancel1Algorithm(reason) {\n        canceled1 = true;\n        reason1 = reason;\n        if (canceled2) {\n            var compositeReason = CreateArrayFromList([reason1, reason2]);\n            var cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n        }\n        return cancelPromise;\n    }\n    function cancel2Algorithm(reason) {\n        canceled2 = true;\n        reason2 = reason;\n        if (canceled1) {\n            var compositeReason = CreateArrayFromList([reason1, reason2]);\n            var cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n        }\n        return cancelPromise;\n    }\n    function startAlgorithm() {\n        // do nothing\n    }\n    branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n    branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n    uponRejection(reader._closedPromise, function (r) {\n        ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n        ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n        if (!canceled1 || !canceled2) {\n            resolveCancelPromise(undefined);\n        }\n    });\n    return [branch1, branch2];\n}\nfunction ReadableByteStreamTee(stream) {\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var reading = false;\n    var readAgainForBranch1 = false;\n    var readAgainForBranch2 = false;\n    var canceled1 = false;\n    var canceled2 = false;\n    var reason1;\n    var reason2;\n    var branch1;\n    var branch2;\n    var resolveCancelPromise;\n    var cancelPromise = newPromise(function (resolve) {\n        resolveCancelPromise = resolve;\n    });\n    function forwardReaderError(thisReader) {\n        uponRejection(thisReader._closedPromise, function (r) {\n            if (thisReader !== reader) {\n                return;\n            }\n            ReadableByteStreamControllerError(branch1._readableStreamController, r);\n            ReadableByteStreamControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n    }\n    function pullWithDefaultReader() {\n        if (IsReadableStreamBYOBReader(reader)) {\n            ReadableStreamReaderGenericRelease(reader);\n            reader = AcquireReadableStreamDefaultReader(stream);\n            forwardReaderError(reader);\n        }\n        var readRequest = {\n            _chunkSteps: function (chunk) {\n                // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                // successful synchronously-available reads get ahead of asynchronously-available errors.\n                queueMicrotask(function () {\n                    readAgainForBranch1 = false;\n                    readAgainForBranch2 = false;\n                    var chunk1 = chunk;\n                    var chunk2 = chunk;\n                    if (!canceled1 && !canceled2) {\n                        try {\n                            chunk2 = CloneAsUint8Array(chunk);\n                        }\n                        catch (cloneE) {\n                            ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                            ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                            resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                            return;\n                        }\n                    }\n                    if (!canceled1) {\n                        ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                    }\n                    reading = false;\n                    if (readAgainForBranch1) {\n                        pull1Algorithm();\n                    }\n                    else if (readAgainForBranch2) {\n                        pull2Algorithm();\n                    }\n                });\n            },\n            _closeSteps: function () {\n                reading = false;\n                if (!canceled1) {\n                    ReadableByteStreamControllerClose(branch1._readableStreamController);\n                }\n                if (!canceled2) {\n                    ReadableByteStreamControllerClose(branch2._readableStreamController);\n                }\n                if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                }\n                if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                }\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            },\n            _errorSteps: function () {\n                reading = false;\n            }\n        };\n        ReadableStreamDefaultReaderRead(reader, readRequest);\n    }\n    function pullWithBYOBReader(view, forBranch2) {\n        if (IsReadableStreamDefaultReader(reader)) {\n            ReadableStreamReaderGenericRelease(reader);\n            reader = AcquireReadableStreamBYOBReader(stream);\n            forwardReaderError(reader);\n        }\n        var byobBranch = forBranch2 ? branch2 : branch1;\n        var otherBranch = forBranch2 ? branch1 : branch2;\n        var readIntoRequest = {\n            _chunkSteps: function (chunk) {\n                // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                // successful synchronously-available reads get ahead of asynchronously-available errors.\n                queueMicrotask(function () {\n                    readAgainForBranch1 = false;\n                    readAgainForBranch2 = false;\n                    var byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    var otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!otherCanceled) {\n                        var clonedChunk = void 0;\n                        try {\n                            clonedChunk = CloneAsUint8Array(chunk);\n                        }\n                        catch (cloneE) {\n                            ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                            ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                            resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                            return;\n                        }\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                    }\n                    else if (!byobCanceled) {\n                        ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                    }\n                    reading = false;\n                    if (readAgainForBranch1) {\n                        pull1Algorithm();\n                    }\n                    else if (readAgainForBranch2) {\n                        pull2Algorithm();\n                    }\n                });\n            },\n            _closeSteps: function (chunk) {\n                reading = false;\n                var byobCanceled = forBranch2 ? canceled2 : canceled1;\n                var otherCanceled = forBranch2 ? canceled1 : canceled2;\n                if (!byobCanceled) {\n                    ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                }\n                if (!otherCanceled) {\n                    ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                }\n                if (chunk !== undefined) {\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                    }\n                    if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                    }\n                }\n                if (!byobCanceled || !otherCanceled) {\n                    resolveCancelPromise(undefined);\n                }\n            },\n            _errorSteps: function () {\n                reading = false;\n            }\n        };\n        ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n    }\n    function pull1Algorithm() {\n        if (reading) {\n            readAgainForBranch1 = true;\n            return promiseResolvedWith(undefined);\n        }\n        reading = true;\n        var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n        if (byobRequest === null) {\n            pullWithDefaultReader();\n        }\n        else {\n            pullWithBYOBReader(byobRequest._view, false);\n        }\n        return promiseResolvedWith(undefined);\n    }\n    function pull2Algorithm() {\n        if (reading) {\n            readAgainForBranch2 = true;\n            return promiseResolvedWith(undefined);\n        }\n        reading = true;\n        var byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n        if (byobRequest === null) {\n            pullWithDefaultReader();\n        }\n        else {\n            pullWithBYOBReader(byobRequest._view, true);\n        }\n        return promiseResolvedWith(undefined);\n    }\n    function cancel1Algorithm(reason) {\n        canceled1 = true;\n        reason1 = reason;\n        if (canceled2) {\n            var compositeReason = CreateArrayFromList([reason1, reason2]);\n            var cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n        }\n        return cancelPromise;\n    }\n    function cancel2Algorithm(reason) {\n        canceled2 = true;\n        reason2 = reason;\n        if (canceled1) {\n            var compositeReason = CreateArrayFromList([reason1, reason2]);\n            var cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n        }\n        return cancelPromise;\n    }\n    function startAlgorithm() {\n        return;\n    }\n    branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n    branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n    forwardReaderError(reader);\n    return [branch1, branch2];\n}\n\nfunction convertUnderlyingDefaultOrByteSource(source, context) {\n    assertDictionary(source, context);\n    var original = source;\n    var autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n    var cancel = original === null || original === void 0 ? void 0 : original.cancel;\n    var pull = original === null || original === void 0 ? void 0 : original.pull;\n    var start = original === null || original === void 0 ? void 0 : original.start;\n    var type = original === null || original === void 0 ? void 0 : original.type;\n    return {\n        autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n            undefined :\n            convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, context + \" has member 'autoAllocateChunkSize' that\"),\n        cancel: cancel === undefined ?\n            undefined :\n            convertUnderlyingSourceCancelCallback(cancel, original, context + \" has member 'cancel' that\"),\n        pull: pull === undefined ?\n            undefined :\n            convertUnderlyingSourcePullCallback(pull, original, context + \" has member 'pull' that\"),\n        start: start === undefined ?\n            undefined :\n            convertUnderlyingSourceStartCallback(start, original, context + \" has member 'start' that\"),\n        type: type === undefined ? undefined : convertReadableStreamType(type, context + \" has member 'type' that\")\n    };\n}\nfunction convertUnderlyingSourceCancelCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (reason) { return promiseCall(fn, original, [reason]); };\n}\nfunction convertUnderlyingSourcePullCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (controller) { return promiseCall(fn, original, [controller]); };\n}\nfunction convertUnderlyingSourceStartCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (controller) { return reflectCall(fn, original, [controller]); };\n}\nfunction convertReadableStreamType(type, context) {\n    type = \"\" + type;\n    if (type !== 'bytes') {\n        throw new TypeError(context + \" '\" + type + \"' is not a valid enumeration value for ReadableStreamType\");\n    }\n    return type;\n}\n\nfunction convertReaderOptions(options, context) {\n    assertDictionary(options, context);\n    var mode = options === null || options === void 0 ? void 0 : options.mode;\n    return {\n        mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, context + \" has member 'mode' that\")\n    };\n}\nfunction convertReadableStreamReaderMode(mode, context) {\n    mode = \"\" + mode;\n    if (mode !== 'byob') {\n        throw new TypeError(context + \" '\" + mode + \"' is not a valid enumeration value for ReadableStreamReaderMode\");\n    }\n    return mode;\n}\n\nfunction convertIteratorOptions(options, context) {\n    assertDictionary(options, context);\n    var preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n    return { preventCancel: Boolean(preventCancel) };\n}\n\nfunction convertPipeOptions(options, context) {\n    assertDictionary(options, context);\n    var preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n    var preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n    var preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n    var signal = options === null || options === void 0 ? void 0 : options.signal;\n    if (signal !== undefined) {\n        assertAbortSignal(signal, context + \" has member 'signal' that\");\n    }\n    return {\n        preventAbort: Boolean(preventAbort),\n        preventCancel: Boolean(preventCancel),\n        preventClose: Boolean(preventClose),\n        signal: signal\n    };\n}\nfunction assertAbortSignal(signal, context) {\n    if (!isAbortSignal(signal)) {\n        throw new TypeError(context + \" is not an AbortSignal.\");\n    }\n}\n\nfunction convertReadableWritablePair(pair, context) {\n    assertDictionary(pair, context);\n    var readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n    assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n    assertReadableStream(readable, context + \" has member 'readable' that\");\n    var writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n    assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n    assertWritableStream(writable, context + \" has member 'writable' that\");\n    return { readable: readable, writable: writable };\n}\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nvar ReadableStream = /** @class */ (function () {\n    function ReadableStream(rawUnderlyingSource, rawStrategy) {\n        if (rawUnderlyingSource === void 0) { rawUnderlyingSource = {}; }\n        if (rawStrategy === void 0) { rawStrategy = {}; }\n        if (rawUnderlyingSource === undefined) {\n            rawUnderlyingSource = null;\n        }\n        else {\n            assertObject(rawUnderlyingSource, 'First parameter');\n        }\n        var strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n        var underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n        InitializeReadableStream(this);\n        if (underlyingSource.type === 'bytes') {\n            if (strategy.size !== undefined) {\n                throw new RangeError('The strategy for a byte stream cannot have a size function');\n            }\n            var highWaterMark = ExtractHighWaterMark(strategy, 0);\n            SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n        }\n        else {\n            var sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            var highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n        }\n    }\n    Object.defineProperty(ReadableStream.prototype, \"locked\", {\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get: function () {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n     *\n     * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n     * method, which might or might not use it.\n     */\n    ReadableStream.prototype.cancel = function (reason) {\n        if (reason === void 0) { reason = undefined; }\n        if (!IsReadableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n        }\n        if (IsReadableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n    };\n    ReadableStream.prototype.getReader = function (rawOptions) {\n        if (rawOptions === void 0) { rawOptions = undefined; }\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('getReader');\n        }\n        var options = convertReaderOptions(rawOptions, 'First parameter');\n        if (options.mode === undefined) {\n            return AcquireReadableStreamDefaultReader(this);\n        }\n        return AcquireReadableStreamBYOBReader(this);\n    };\n    ReadableStream.prototype.pipeThrough = function (rawTransform, rawOptions) {\n        if (rawOptions === void 0) { rawOptions = {}; }\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('pipeThrough');\n        }\n        assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n        var transform = convertReadableWritablePair(rawTransform, 'First parameter');\n        var options = convertPipeOptions(rawOptions, 'Second parameter');\n        if (IsReadableStreamLocked(this)) {\n            throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n        }\n        if (IsWritableStreamLocked(transform.writable)) {\n            throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n        }\n        var promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        setPromiseIsHandledToTrue(promise);\n        return transform.readable;\n    };\n    ReadableStream.prototype.pipeTo = function (destination, rawOptions) {\n        if (rawOptions === void 0) { rawOptions = {}; }\n        if (!IsReadableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n        }\n        if (destination === undefined) {\n            return promiseRejectedWith(\"Parameter 1 is required in 'pipeTo'.\");\n        }\n        if (!IsWritableStream(destination)) {\n            return promiseRejectedWith(new TypeError(\"ReadableStream.prototype.pipeTo's first argument must be a WritableStream\"));\n        }\n        var options;\n        try {\n            options = convertPipeOptions(rawOptions, 'Second parameter');\n        }\n        catch (e) {\n            return promiseRejectedWith(e);\n        }\n        if (IsReadableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(destination)) {\n            return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n    };\n    /**\n     * Tees this readable stream, returning a two-element array containing the two resulting branches as\n     * new {@link ReadableStream} instances.\n     *\n     * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n     * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n     * propagated to the stream's underlying source.\n     *\n     * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n     * this could allow interference between the two branches.\n     */\n    ReadableStream.prototype.tee = function () {\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('tee');\n        }\n        var branches = ReadableStreamTee(this);\n        return CreateArrayFromList(branches);\n    };\n    ReadableStream.prototype.values = function (rawOptions) {\n        if (rawOptions === void 0) { rawOptions = undefined; }\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('values');\n        }\n        var options = convertIteratorOptions(rawOptions, 'First parameter');\n        return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n    };\n    return ReadableStream;\n}());\nObject.defineProperties(ReadableStream.prototype, {\n    cancel: { enumerable: true },\n    getReader: { enumerable: true },\n    pipeThrough: { enumerable: true },\n    pipeTo: { enumerable: true },\n    tee: { enumerable: true },\n    values: { enumerable: true },\n    locked: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStream',\n        configurable: true\n    });\n}\nif (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n    Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n        value: ReadableStream.prototype.values,\n        writable: true,\n        configurable: true\n    });\n}\n// Abstract operations for the ReadableStream.\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n    if (highWaterMark === void 0) { highWaterMark = 1; }\n    if (sizeAlgorithm === void 0) { sizeAlgorithm = function () { return 1; }; }\n    var stream = Object.create(ReadableStream.prototype);\n    InitializeReadableStream(stream);\n    var controller = Object.create(ReadableStreamDefaultController.prototype);\n    SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    return stream;\n}\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n    var stream = Object.create(ReadableStream.prototype);\n    InitializeReadableStream(stream);\n    var controller = Object.create(ReadableByteStreamController.prototype);\n    SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n    return stream;\n}\nfunction InitializeReadableStream(stream) {\n    stream._state = 'readable';\n    stream._reader = undefined;\n    stream._storedError = undefined;\n    stream._disturbed = false;\n}\nfunction IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n        return false;\n    }\n    return x instanceof ReadableStream;\n}\nfunction IsReadableStreamLocked(stream) {\n    if (stream._reader === undefined) {\n        return false;\n    }\n    return true;\n}\n// ReadableStream API exposed for controllers.\nfunction ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n        return promiseResolvedWith(undefined);\n    }\n    if (stream._state === 'errored') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var reader = stream._reader;\n    if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n        reader._readIntoRequests.forEach(function (readIntoRequest) {\n            readIntoRequest._closeSteps(undefined);\n        });\n        reader._readIntoRequests = new SimpleQueue();\n    }\n    var sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n    return transformPromiseWith(sourceCancelPromise, noop);\n}\nfunction ReadableStreamClose(stream) {\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n        return;\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    if (IsReadableStreamDefaultReader(reader)) {\n        reader._readRequests.forEach(function (readRequest) {\n            readRequest._closeSteps();\n        });\n        reader._readRequests = new SimpleQueue();\n    }\n}\nfunction ReadableStreamError(stream, e) {\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n        return;\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    if (IsReadableStreamDefaultReader(reader)) {\n        reader._readRequests.forEach(function (readRequest) {\n            readRequest._errorSteps(e);\n        });\n        reader._readRequests = new SimpleQueue();\n    }\n    else {\n        reader._readIntoRequests.forEach(function (readIntoRequest) {\n            readIntoRequest._errorSteps(e);\n        });\n        reader._readIntoRequests = new SimpleQueue();\n    }\n}\n// Helper functions for the ReadableStream.\nfunction streamBrandCheckException$1(name) {\n    return new TypeError(\"ReadableStream.prototype.\" + name + \" can only be used on a ReadableStream\");\n}\n\nfunction convertQueuingStrategyInit(init, context) {\n    assertDictionary(init, context);\n    var highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n    assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n    return {\n        highWaterMark: convertUnrestrictedDouble(highWaterMark)\n    };\n}\n\n// The size function must not have a prototype property nor be a constructor\nvar byteLengthSizeFunction = function (chunk) {\n    return chunk.byteLength;\n};\ntry {\n    Object.defineProperty(byteLengthSizeFunction, 'name', {\n        value: 'size',\n        configurable: true\n    });\n}\ncatch (_a) {\n    // This property is non-configurable in older browsers, so ignore if this throws.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nvar ByteLengthQueuingStrategy = /** @class */ (function () {\n    function ByteLengthQueuingStrategy(options) {\n        assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n        options = convertQueuingStrategyInit(options, 'First parameter');\n        this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n    }\n    Object.defineProperty(ByteLengthQueuingStrategy.prototype, \"highWaterMark\", {\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get: function () {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ByteLengthQueuingStrategy.prototype, \"size\", {\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get: function () {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ByteLengthQueuingStrategy;\n}());\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n    highWaterMark: { enumerable: true },\n    size: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ByteLengthQueuingStrategy',\n        configurable: true\n    });\n}\n// Helper functions for the ByteLengthQueuingStrategy.\nfunction byteLengthBrandCheckException(name) {\n    return new TypeError(\"ByteLengthQueuingStrategy.prototype.\" + name + \" can only be used on a ByteLengthQueuingStrategy\");\n}\nfunction IsByteLengthQueuingStrategy(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n        return false;\n    }\n    return x instanceof ByteLengthQueuingStrategy;\n}\n\n// The size function must not have a prototype property nor be a constructor\nvar countSizeFunction = function () {\n    return 1;\n};\ntry {\n    Object.defineProperty(countSizeFunction, 'name', {\n        value: 'size',\n        configurable: true\n    });\n}\ncatch (_a) {\n    // This property is non-configurable in older browsers, so ignore if this throws.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nvar CountQueuingStrategy = /** @class */ (function () {\n    function CountQueuingStrategy(options) {\n        assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n        options = convertQueuingStrategyInit(options, 'First parameter');\n        this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n    }\n    Object.defineProperty(CountQueuingStrategy.prototype, \"highWaterMark\", {\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get: function () {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CountQueuingStrategy.prototype, \"size\", {\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get: function () {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CountQueuingStrategy;\n}());\nObject.defineProperties(CountQueuingStrategy.prototype, {\n    highWaterMark: { enumerable: true },\n    size: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n        value: 'CountQueuingStrategy',\n        configurable: true\n    });\n}\n// Helper functions for the CountQueuingStrategy.\nfunction countBrandCheckException(name) {\n    return new TypeError(\"CountQueuingStrategy.prototype.\" + name + \" can only be used on a CountQueuingStrategy\");\n}\nfunction IsCountQueuingStrategy(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n        return false;\n    }\n    return x instanceof CountQueuingStrategy;\n}\n\nfunction convertTransformer(original, context) {\n    assertDictionary(original, context);\n    var flush = original === null || original === void 0 ? void 0 : original.flush;\n    var readableType = original === null || original === void 0 ? void 0 : original.readableType;\n    var start = original === null || original === void 0 ? void 0 : original.start;\n    var transform = original === null || original === void 0 ? void 0 : original.transform;\n    var writableType = original === null || original === void 0 ? void 0 : original.writableType;\n    return {\n        flush: flush === undefined ?\n            undefined :\n            convertTransformerFlushCallback(flush, original, context + \" has member 'flush' that\"),\n        readableType: readableType,\n        start: start === undefined ?\n            undefined :\n            convertTransformerStartCallback(start, original, context + \" has member 'start' that\"),\n        transform: transform === undefined ?\n            undefined :\n            convertTransformerTransformCallback(transform, original, context + \" has member 'transform' that\"),\n        writableType: writableType\n    };\n}\nfunction convertTransformerFlushCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (controller) { return promiseCall(fn, original, [controller]); };\n}\nfunction convertTransformerStartCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (controller) { return reflectCall(fn, original, [controller]); };\n}\nfunction convertTransformerTransformCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return function (chunk, controller) { return promiseCall(fn, original, [chunk, controller]); };\n}\n\n// Class TransformStream\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nvar TransformStream = /** @class */ (function () {\n    function TransformStream(rawTransformer, rawWritableStrategy, rawReadableStrategy) {\n        if (rawTransformer === void 0) { rawTransformer = {}; }\n        if (rawWritableStrategy === void 0) { rawWritableStrategy = {}; }\n        if (rawReadableStrategy === void 0) { rawReadableStrategy = {}; }\n        if (rawTransformer === undefined) {\n            rawTransformer = null;\n        }\n        var writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n        var readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n        var transformer = convertTransformer(rawTransformer, 'First parameter');\n        if (transformer.readableType !== undefined) {\n            throw new RangeError('Invalid readableType specified');\n        }\n        if (transformer.writableType !== undefined) {\n            throw new RangeError('Invalid writableType specified');\n        }\n        var readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n        var readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n        var writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n        var writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n        var startPromise_resolve;\n        var startPromise = newPromise(function (resolve) {\n            startPromise_resolve = resolve;\n        });\n        InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n        if (transformer.start !== undefined) {\n            startPromise_resolve(transformer.start(this._transformStreamController));\n        }\n        else {\n            startPromise_resolve(undefined);\n        }\n    }\n    Object.defineProperty(TransformStream.prototype, \"readable\", {\n        /**\n         * The readable side of the transform stream.\n         */\n        get: function () {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TransformStream.prototype, \"writable\", {\n        /**\n         * The writable side of the transform stream.\n         */\n        get: function () {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TransformStream;\n}());\nObject.defineProperties(TransformStream.prototype, {\n    readable: { enumerable: true },\n    writable: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n        value: 'TransformStream',\n        configurable: true\n    });\n}\nfunction InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n    function startAlgorithm() {\n        return startPromise;\n    }\n    function writeAlgorithm(chunk) {\n        return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n    }\n    function abortAlgorithm(reason) {\n        return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n    }\n    function closeAlgorithm() {\n        return TransformStreamDefaultSinkCloseAlgorithm(stream);\n    }\n    stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n    function pullAlgorithm() {\n        return TransformStreamDefaultSourcePullAlgorithm(stream);\n    }\n    function cancelAlgorithm(reason) {\n        TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n    // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n    stream._backpressure = undefined;\n    stream._backpressureChangePromise = undefined;\n    stream._backpressureChangePromise_resolve = undefined;\n    TransformStreamSetBackpressure(stream, true);\n    stream._transformStreamController = undefined;\n}\nfunction IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n        return false;\n    }\n    return x instanceof TransformStream;\n}\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream, e) {\n    ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\nfunction TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n    TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n    WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n    if (stream._backpressure) {\n        // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n        // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n        // _backpressure is set.\n        TransformStreamSetBackpressure(stream, false);\n    }\n}\nfunction TransformStreamSetBackpressure(stream, backpressure) {\n    // Passes also when called during construction.\n    if (stream._backpressureChangePromise !== undefined) {\n        stream._backpressureChangePromise_resolve();\n    }\n    stream._backpressureChangePromise = newPromise(function (resolve) {\n        stream._backpressureChangePromise_resolve = resolve;\n    });\n    stream._backpressure = backpressure;\n}\n// Class TransformStreamDefaultController\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nvar TransformStreamDefaultController = /** @class */ (function () {\n    function TransformStreamDefaultController() {\n        throw new TypeError('Illegal constructor');\n    }\n    Object.defineProperty(TransformStreamDefaultController.prototype, \"desiredSize\", {\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get: function () {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            var readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TransformStreamDefaultController.prototype.enqueue = function (chunk) {\n        if (chunk === void 0) { chunk = undefined; }\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamDefaultControllerEnqueue(this, chunk);\n    };\n    /**\n     * Errors both the readable side and the writable side of the controlled transform stream, making all future\n     * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n     */\n    TransformStreamDefaultController.prototype.error = function (reason) {\n        if (reason === void 0) { reason = undefined; }\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamDefaultControllerError(this, reason);\n    };\n    /**\n     * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n     * transformer only needs to consume a portion of the chunks written to the writable side.\n     */\n    TransformStreamDefaultController.prototype.terminate = function () {\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('terminate');\n        }\n        TransformStreamDefaultControllerTerminate(this);\n    };\n    return TransformStreamDefaultController;\n}());\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n    enqueue: { enumerable: true },\n    error: { enumerable: true },\n    terminate: { enumerable: true },\n    desiredSize: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'TransformStreamDefaultController',\n        configurable: true\n    });\n}\n// Transform Stream Default Controller Abstract Operations\nfunction IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n        return false;\n    }\n    return x instanceof TransformStreamDefaultController;\n}\nfunction SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n    controller._controlledTransformStream = stream;\n    stream._transformStreamController = controller;\n    controller._transformAlgorithm = transformAlgorithm;\n    controller._flushAlgorithm = flushAlgorithm;\n}\nfunction SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n    var controller = Object.create(TransformStreamDefaultController.prototype);\n    var transformAlgorithm = function (chunk) {\n        try {\n            TransformStreamDefaultControllerEnqueue(controller, chunk);\n            return promiseResolvedWith(undefined);\n        }\n        catch (transformResultE) {\n            return promiseRejectedWith(transformResultE);\n        }\n    };\n    var flushAlgorithm = function () { return promiseResolvedWith(undefined); };\n    if (transformer.transform !== undefined) {\n        transformAlgorithm = function (chunk) { return transformer.transform(chunk, controller); };\n    }\n    if (transformer.flush !== undefined) {\n        flushAlgorithm = function () { return transformer.flush(controller); };\n    }\n    SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\nfunction TransformStreamDefaultControllerClearAlgorithms(controller) {\n    controller._transformAlgorithm = undefined;\n    controller._flushAlgorithm = undefined;\n}\nfunction TransformStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledTransformStream;\n    var readableController = stream._readable._readableStreamController;\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n        throw new TypeError('Readable side is not in a state that permits enqueue');\n    }\n    // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n    // accept TransformStreamDefaultControllerEnqueue() calls.\n    try {\n        ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n    }\n    catch (e) {\n        // This happens when readableStrategy.size() throws.\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n        throw stream._readable._storedError;\n    }\n    var backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n    if (backpressure !== stream._backpressure) {\n        TransformStreamSetBackpressure(stream, true);\n    }\n}\nfunction TransformStreamDefaultControllerError(controller, e) {\n    TransformStreamError(controller._controlledTransformStream, e);\n}\nfunction TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n    var transformPromise = controller._transformAlgorithm(chunk);\n    return transformPromiseWith(transformPromise, undefined, function (r) {\n        TransformStreamError(controller._controlledTransformStream, r);\n        throw r;\n    });\n}\nfunction TransformStreamDefaultControllerTerminate(controller) {\n    var stream = controller._controlledTransformStream;\n    var readableController = stream._readable._readableStreamController;\n    ReadableStreamDefaultControllerClose(readableController);\n    var error = new TypeError('TransformStream terminated');\n    TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n// TransformStreamDefaultSink Algorithms\nfunction TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n    var controller = stream._transformStreamController;\n    if (stream._backpressure) {\n        var backpressureChangePromise = stream._backpressureChangePromise;\n        return transformPromiseWith(backpressureChangePromise, function () {\n            var writable = stream._writable;\n            var state = writable._state;\n            if (state === 'erroring') {\n                throw writable._storedError;\n            }\n            return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n        });\n    }\n    return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n}\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n    // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n    // errored.\n    TransformStreamError(stream, reason);\n    return promiseResolvedWith(undefined);\n}\nfunction TransformStreamDefaultSinkCloseAlgorithm(stream) {\n    // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n    var readable = stream._readable;\n    var controller = stream._transformStreamController;\n    var flushPromise = controller._flushAlgorithm();\n    TransformStreamDefaultControllerClearAlgorithms(controller);\n    // Return a promise that is fulfilled with undefined on success.\n    return transformPromiseWith(flushPromise, function () {\n        if (readable._state === 'errored') {\n            throw readable._storedError;\n        }\n        ReadableStreamDefaultControllerClose(readable._readableStreamController);\n    }, function (r) {\n        TransformStreamError(stream, r);\n        throw readable._storedError;\n    });\n}\n// TransformStreamDefaultSource Algorithms\nfunction TransformStreamDefaultSourcePullAlgorithm(stream) {\n    // Invariant. Enforced by the promises returned by start() and pull().\n    TransformStreamSetBackpressure(stream, false);\n    // Prevent the next pull() call until there is backpressure.\n    return stream._backpressureChangePromise;\n}\n// Helper functions for the TransformStreamDefaultController.\nfunction defaultControllerBrandCheckException(name) {\n    return new TypeError(\"TransformStreamDefaultController.prototype.\" + name + \" can only be used on a TransformStreamDefaultController\");\n}\n// Helper functions for the TransformStream.\nfunction streamBrandCheckException(name) {\n    return new TypeError(\"TransformStream.prototype.\" + name + \" can only be used on a TransformStream\");\n}\n\nexport { ByteLengthQueuingStrategy, CountQueuingStrategy, ReadableByteStreamController, ReadableStream, ReadableStreamBYOBReader, ReadableStreamBYOBRequest, ReadableStreamDefaultController, ReadableStreamDefaultReader, TransformStream, TransformStreamDefaultController, WritableStream, WritableStreamDefaultController, WritableStreamDefaultWriter };\n//# sourceMappingURL=ponyfill.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { PassThrough } from \"node:stream\";\nimport RSDS from \"react-server-dom-webpack/server.node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nexport function wrapAction(action) {\n  return async (...args) => {\n    const result = await action(...args);\n    if (result instanceof Response)\n      return result;\n    const readable = RSDS.renderToPipeableStream(result, {\n      onError: console.error\n    });\n    const stream = createReadableStreamFromReadable(\n      readable.pipe(new PassThrough())\n    );\n    return new Response(stream, {\n      headers: {\n        \"Content-Type\": \"text/x-component\",\n        \"Transfer-Encoding\": \"chunked\"\n      }\n    });\n  };\n}\nexport function wrapLoader(loader) {\n  return async (...args) => {\n    const result = await loader(...args);\n    if (result instanceof Response)\n      return result;\n    const readable = RSDS.renderToPipeableStream(result, {\n      onError: console.error\n    });\n    const stream = createReadableStreamFromReadable(\n      readable.pipe(new PassThrough())\n    );\n    return new Response(stream, {\n      headers: {\n        \"Content-Type\": \"text/x-component\",\n        \"Transfer-Encoding\": \"chunked\"\n      }\n    });\n  };\n}\n","import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Link, Outlet, Scripts } from \"@remix-run/react\";\nexport default function Root() {\n  return /* @__PURE__ */ jsxs(\"html\", { children: [\n    /* @__PURE__ */ jsx(\"head\", { children: /* @__PURE__ */ jsx(\"title\", { children: \"My App\" }) }),\n    /* @__PURE__ */ jsxs(\"body\", { children: [\n      /* @__PURE__ */ jsx(\"nav\", { children: /* @__PURE__ */ jsxs(\"ul\", { children: [\n        /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(Link, { to: \"/\", children: \"Home\" }) }),\n        /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(Link, { to: \"/about\", children: \"About\" }) })\n      ] }) }),\n      /* @__PURE__ */ jsx(Outlet, {}),\n      /* @__PURE__ */ jsx(Scripts, {})\n    ] })\n  ] });\n}\n","\"use client\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nexport function Counter() {\n  const [count, setCount] = [0, (c) => {\n  }];\n  return /* @__PURE__ */ jsxs(\"div\", { children: [\n    /* @__PURE__ */ jsxs(\"p\", { children: [\n      \"Count: \",\n      count\n    ] }),\n    /* @__PURE__ */ jsx(\"button\", { type: \"button\", onClick: () => setCount(count + 1), children: \"Increment\" })\n  ] });\n}\n","import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Counter } from \"../../components/counter.js\";\nexport function loader() {\n  return {\n    // header: \"Hello, World!\",\n    // message: \"This is the index route!\",\n    header: /* @__PURE__ */ jsx(\"h1\", { children: \"Hello, World!\" }),\n    message: /* @__PURE__ */ jsx(\"p\", { children: \"This is the index route rendering RSC Content.\" }),\n    counter: /* @__PURE__ */ jsx(Counter, {}),\n    test: Promise.resolve(\"test\")\n  };\n}\nexport default function IndexRoute() {\n  const data = useLoaderData();\n  console.log(data);\n  return /* @__PURE__ */ jsxs(\"main\", { children: [\n    data.header,\n    data.message,\n    data.counter\n  ] });\n}\n","import { jsx, jsxs } from \"react/jsx-runtime\";\nexport default function About() {\n  return /* @__PURE__ */ jsxs(\"main\", { children: [\n    /* @__PURE__ */ jsx(\"h1\", { children: \"About\" }),\n    /* @__PURE__ */ jsx(\"p\", { children: \"This is the about route.\" })\n  ] });\n}\n","\n  import * as adapter from \"__remix_virtual__adapter__\";\n  import * as route0 from \"../app/root.tsx\";\nimport * as route1 from \"../app/routes/_index/route.tsx\";\nimport * as route2 from \"../app/routes/about/route.tsx\";\n  export const routes = {\n    \"root\": {\n      action: undefined,\n      loader: undefined,\n    },\n  \"routes/_index\": {\n      action: undefined,\n      loader: adapter.wrapLoader(route1.loader),\n    },\n  \"routes/about\": {\n      action: undefined,\n      loader: undefined,\n    }\n  };\n"],"names":[],"sourceRoot":""}